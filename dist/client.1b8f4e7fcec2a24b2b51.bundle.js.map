{"version":3,"sources":["webpack:///./src/state/utils.ts","webpack:///./src/services/save-editor/duplicants/selectors.ts","webpack:///./src/services/save-editor/state.ts","webpack:///./src/services/save-editor/duplicants/actions.ts","webpack:///./src/logging/index.ts","webpack:///./src/services/save-editor/selectors.ts","webpack:///./src/action-utils.ts","webpack:///./src/services/save-editor/savefile/actions.ts","webpack:///./src/services/save-editor/reducer-utils.ts","webpack:///./src/services/materials/parser.ts","webpack:///./src/services/save-editor/savefile/selectors.ts","webpack:///./src/state/saga.ts","webpack:///./src/services/materials/elements.ts","webpack:///./src/services/materials/gas.ts","webpack:///./src/services/materials/liquid.ts","webpack:///./src/services/materials/solid.ts","webpack:///./src/services/materials/index.ts","webpack:///./src/pages/404/index.ts","webpack:///./src/services/save-editor/duplicants/resume/actions.ts","webpack:///./src/services/save-editor/duplicants/appearance/actions.ts","webpack:///./src/services/save-editor/savefile/save-loader.worker.ts","webpack:///./src/services/save-editor/savefile/saga.ts","webpack:///./src/services/save-editor/saga.ts","webpack:///./src/services/save-editor/duplicants/resume/reducer.ts","webpack:///./src/services/save-editor/duplicants/appearance/reducer.ts","webpack:///./src/services/save-editor/duplicants/reducer.ts","webpack:///./src/services/save-editor/savefile/reducer.ts","webpack:///./src/services/save-editor/reducer.ts","webpack:///./src/state/reducer.ts","webpack:///./src/state/store.ts","webpack:///./src/pages/Error/dispatch.ts","webpack:///./src/pages/Error/selectors.ts","webpack:///./src/pages/Error/component.tsx","webpack:///./src/pages/Error/index.ts","webpack:///./CHANGELOG.md","webpack:///./src/pages/Changelog/component.tsx","webpack:///./src/pages/Changelog/index.ts","webpack:///./src/pages/Materials/pages/MaterialInspector/component.tsx","webpack:///./src/pages/Materials/pages/MaterialInspector/index.ts","webpack:///./src/pages/Materials/components/DataTable/component.tsx","webpack:///./src/pages/Materials/components/DataTable/index.ts","webpack:///./src/services/materials/utils.ts","webpack:///./src/pages/Materials/component.tsx","webpack:///./src/pages/Materials/index.ts","webpack:///./src/pages/404/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/dispatch.tsx","webpack:///./src/services/save-editor/duplicants/resume/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/traits.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/dispatch.ts","webpack:///./src/services/save-editor/duplicants/appearance/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/index.ts","webpack:///./src/pages/SaveEditor/component.tsx","webpack:///./src/pages/SaveEditor/index.ts","webpack:///./src/pages/LoadingSaveFile/component.tsx","webpack:///./src/pages/LoadingSaveFile/index.ts","webpack:///./src/pages/NoSaveLoaded/dispatch.ts","webpack:///./src/pages/NoSaveLoaded/selectors.ts","webpack:///./src/pages/NoSaveLoaded/component.tsx","webpack:///./src/pages/NoSaveLoaded/index.ts","webpack:///./src/components/ActiveAwareLink/component.tsx","webpack:///./src/components/ActiveAwareLink/index.ts","webpack:///./src/components/AppNavMenu/component.tsx","webpack:///./src/components/AppNavMenu/index.ts","webpack:///./src/components/AppNavBar/selectors.ts","webpack:///./src/components/AppNavBar/dispatch.ts","webpack:///./src/components/AppNavBar/component.tsx","webpack:///./src/components/AppNavBar/index.ts","webpack:///./src/components/App/selectors.ts","webpack:///./src/components/App/component.tsx","webpack:///./src/components/App/index.ts","webpack:///./src/app.tsx","webpack:///./src/css/root.scss","webpack:///./src/css/root.scss?3097","webpack:///./src/css/index.ts","webpack:///./src/index.tsx"],"names":["reselect_1","__webpack_require__","createStructuredSelector","selectors","selectorCreator","exports","oni_save_parser_1","selectors_1","makeGetDuplicantByID","propKey","createSelector","duplicantsMap","_","props","id","Object","prototype","hasOwnProperty","call","makeGetDuplicantSkills","source","selector","makeGetBehaviorByName","AIAttributeLevelsBehavior","levelBehavior","parsedData","saveLoadLevels","makeGetDuplicantTraits","AITraitsBehavior","traitsBehavior","TraitIds","makeGetDuplicantEffects","AIEffectsBehavior","effectsBehavior","saveLoadEffects","makeGetDuplicantHealthState","HealthBehavior","healthBehavior","State","makeGetDuplicantScale","gameObject","scale","makeGetDuplicantGender","MinionIdentityBehavior","identityBehavior","gender","makeGetDuplicantVoice","voiceIdx","duplicants","makeGetGameObjectsByType","duplicantsIDs","ids","duplicant","idBehavior","getBehavior","KPrefabIDBehavior","push","InstanceID","dups","defaultSaveEditorState","fileName","isLoading","isSaving","loadError","saveGame","normalizedIDs","saveEditorStateKey","action_utils_1","ACTION_DUPLICANT_RENAME","renameDuplicant","createAction","x","ACTION_DUPLICANT_SKILL_SET_LEVEL","setDuplicantSkillLevel","ACTION_DUPLICANT_SKILL_SET_EXPERIENCE","setDuplicantSkillExperience","ACTION_DUPLICANT_TRAITS_SET","setDuplicantTraits","ACTION_DUPLICANT_EFFECTS_ADD","addDuplicantEffect","ACTION_DUPLICANT_EFFECTS_SETTIME","setDuplicantEffectTime","ACTION_DUPLICANT_EFFECTS_REMOVE","removeDuplicantEffect","ACTION_DUPLICANT_HEALTH_STATE_SET","setDuplicantHealthState","ACTION_DUPLICANT_SCALE_SET","setDuplicantScale","ACTION_DUPLICANT_GENDER_SET","setDuplicantGender","ACTION_DUPLICANT_VOICE_SET","setDuplicantVoice","failureType","ACTION_INVALID","SAVEFILE_CORRUPT","STATE_CORRUPT","MISSING_BEHAVIOR","warning","message","console","warn","error","freeze","seal","FAILURE_TYPE","saveEditor","state","type","gameObjects","gameObjectSelector","behaviorName","behaviors","find","name","body","redux_actions_1","payloadCreator","ACTION_SAVEFILE_LOAD","loadSavefile","ACTION_SAVEFILE_SAVE","saveSavefile","ACTION_SAVEFILE_SAVE_START","saveSavefileStarted","ACTION_SAVEFILE_SAVE_END","saveSavefileEnded","ACTION_SAVEFILE_RECEIVED","savefileReceived","logging_1","modifyGameObject","action","prefabID","modifier","location","index","newGameObject","assign","[object Object]","slice","modifyBehavior","normalizedId","behaviorIndex","findIndex","behavior","newBehavior","parseElement","rows","parser","element","key","keys","parseData","formatter","Array","isArray","parseCsv","content","headerRow","rowData","split","headers","filter","map","length","isSaveChosen","Boolean","saveFileName","isSaveLoaded","isSaveLoading","isSaveSaving","isSaveEnabled","redux_saga_1","__importDefault","effects_1","saga_1","sagaMiddleware","default","runSaga","run","fork","solid_1","liquid_1","gas_1","ELEMENTS","SOLIDS","LIQUIDS","GASSES","parser_1","gas_csv_1","GAS_DATATABLE","GAS_FIELD_PARSER","category","tags","trim","molarMass","Number","specificHeatCapacity","thermalConductivity","defaultTemperature","solidSurfaceAreaMultiplier","liquidSurfaceAreaMultiplier","gasSurfaceAreaMultiplier","flow","defaultPressure","lowTemp","lowTempTransition","lightEmitDistasnce","lightEmitIntensity","toxicity","GAS_FIELDS","liquid_csv_1","LIQUID_DATATABLE","LIQUID_FIELD_PARSER","defaultMass","maxCompressionMass","compressionFactor","speed","minHorizontalFlow","minVerticalFlow","electricalConductivity","highTemp","highTempTransition","highTempTransitionOre","highTempTransitionOreMassFactor","sublimateId","convertId","LIQUID_FIELDS","solid_csv_1","SOLID_DATATABLE","SOLID_FIELD_PARSER","maxMass","strength","hardness","hardnessTier","highTempTransitionTarget","SOLID_FIELDS","__export","component_1","ACTION_DUPLICANT_ROLE_CURRENT_SET","setDuplicantCurrentRole","ACTION_DUPLICANT_ROLE_TARGET_SET","setDuplicantTargetRole","ACTION_DUPLICANT_ROLE_MASTERY_SET","setDuplicantRoleMastery","ACTION_DUPLICANT_ROLE_EXPERIENCE_SET","setDuplicantRoleExperience","ACTION_DUPLICANT_APPEARANCE_EYES_SET","setDuplicantEyes","ACTION_DUPLICANT_APPEARANCE_HAIR_SET","setDuplicantHair","ACTION_DUPLICANT_APPEARANCE_HEAD_SET","setDuplicantHead","ACTION_DUPLICANT_APPEARANCE_MOUTH_SET","setDuplicantMouth","ACTION_DUPLICANT_APPEARANCE_BODY_SET","setDuplicantBody","module","Worker","p","file_saver_1","actions_1","save_loader_worker_1","worker","loadSaveFile","file","payload","reader","FileReader","loadGamePromise","Promise","accept","reject","onload","result","onerror","readAsArrayBuffer","then","buffer","e","onmessage","data","cmd","command","postMessage","put","err","log","select","saveDataPromise","save","saveData","blob","Blob","saveAs","handleSaveOrLoad","take","default_1","state_1","reducer_utils_1","duplicantAccessoriesReducer","_action","duplicantID","roleID","MinionResumeBehavior","currentRole","targetRole","mastery","MasteryByRoleID","Map","from","entries","concat","experience","ExperienceByRoleID","accessoryID","modifyAccessory","ordinal","getAccessoryOrdinal","makeAccessoryID","accessoryType","AccessorizerBehavior","oldAccessories","accessories","accIndex","getIndexOfAccessoryType","newAccessory","guid","Guid","reducer_1","reducer_2","duplicantsReducer","duplicantsRootReducer","skillId","level","levels","skillIndex","attributeId","traitIDs","gameObjectIndex","effectID","timeRemaining","effects","effectIndex","healthState","scaleX","scaleY","y","genderStringKey","saveFileReducer","prefabType","prefabs","i","isNaN","reducers","saveEditorReducer","reducer","redux_1","combineReducers","middleware","store","createStore","applyMiddleware","mapDispatchToProps","dispatch","utils_1","mapStateToProps","React","__importStar","react_redux_1","core_1","icons_1","dispatch_1","ErrorPageComponent","Component","this","Error","stack","createElement","NonIdealState","visual","IconNames","ERROR","description","Text","connect","react_markdown_1","changelog","ChangelogPage","className","materials_1","MaterialInspector","elementName","match","params","material","getElement","JSON","stringify","react_router_dom_1","DataTable","super","enabledFields","elements","fields","targetFields","field","ri","_renderFieldValue","fieldName","value","Link","to","String","elements_1","str","react_router_1","DataTable_1","MaterialInspector_1","MaterialsPage","Switch","Redirect","exact","path","Route","component","SolidDataTable","LiquidDataTable","GasDataTable","SolidDataTableComponent","LiquidDataTableComponent","GasDataTableComponent","DuplicantsPage","bindActionCreators","addEffect","removeEffect","setEffectTime","core_decorators_1","select_1","StringSelect","Select","ofType","DuplicantEffects","DuplicantEffectRow","onChangeTime","_onEffectChangeTime","onRemove","_onEffectRemoved","items","AI_EFFECT_IDS","itemPredicate","_filterItem","itemRenderer","_renderItem","onItemSelect","_onEffectSelected","filterable","resetOnClose","resetOnSelect","popoverProps","minimal","Button","rightIcon","text","query","item","toLowerCase","indexOf","effect","itemProps","modifiers","handleClick","matchesPredicate","MenuItem","active","onClick","__decorate","autobind","NumericInput","clampValueOnBlur","min","onValueChange","_onTimeRemainingChange","icon","SMALL_CROSS","_onRemove","setCurrentRole","setTargetRole","setMastery","setExperience","selectors_2","makeGetDuplicantCurrentRole","resumeBehavior","makeGetDuplicantTargetRole","makeGetDuplicantRoleDetails","statusByKey","dupSelector","roles","DuplicantJobsPage","knownRoles","Set","JobRow","jobID","_setMastery","_setExperience","_onCurrentRoleSelected","_onTargetRoleSelected","checked","onChange","_onSetMastery","_onSetExperience","change","target","Roles_1","DuplicantRolesPage","Tabs","vertical","renderActiveTabPanelOnly","Tab","title","panel","disabled","TRAITS","setTraits","traits","traits_1","TraitMultiSelect","MultiSelect","DuplicantTraits","selectedItems","_onTagSelected","tagRenderer","tag","tagInputProps","_onTagRemoved","noResults","newTraits","splice","trait","isSelected","TICK","BLANK","shouldDismissPopover","setLevel","skills","DuplicantSkills","DuplicantSkillRow","onChangeLevel","_onChangeLevel","onChangeExperience","_onChangeExperience","_onLevelChange","_onExperienceChange","Math","round","setEyes","setHair","setHead","setMouth","setBody","makeGetDuplicantAppearanceMaker","accessorizerBehavior","accessory","getAccessoryOfType","makeGetDuplicantEyes","makeGetDuplicantHair","makeGetDuplicantHead","makeGetDuplicantMouth","makeGetDuplicantBody","eyes","hair","head","mouth","DuplicantAccessoryPage","AppearanceGroup","ACCESSORIZER_EYE_GUIDS","onSet","ACCESSORIZER_HEAD_GUIDS","ACCESSORIZER_HAIR_GUIDS","ACCESSORIZER_MOUTH_GUIDS","ACCESSORIZER_BODY_GUIDS","_onSet","setGender","setVoice","setScale","setHealthState","NumberSelect","MIN_SCALE","EPSILON","DuplicantGeneralPage","healthStateStr","HEALTH_STATE_NAMES","MINION_IDENTITY_GENDERS","_onGenderSelected","_onVoiceSelected","_onScaleX","_onScaleY","_onHealthStateSelected","stateIndex","General_1","Appearance_1","Skills_1","Traits_1","Jobs_1","Effects_1","DuplicantEditor","rename","EditableText","_onNameChange","onConfirm","_onRename","setState","s","DuplicantPortrait","role","outerClassName","Card","interactive","_onClick","DuplicantPortrait_1","DuplicantsList","selectedDuplicantID","_onDuplicantClick","onDuplicantClick","DuplicantsList_1","DuplicantEditor_1","MUGSHOT","_onDuplicantSelected","Duplicants_1","_404_1","SaveEditorPageComponent","LoadingSaveFilePageComponent","Spinner","large","saveDescription","savePath","NoSaveLoadedPageComponent","_input","FLOPPY_DISK","intent","Intent","PRIMARY","_onLoadClick","ref","el","style","display","_onLoadFile","click","files","ActiveAwareLink","_a","children","staticContext","other","__rest","pathName","pathname","matchPartialPath","toString","event","preventDefault","startsWith","withRouter","ActiveAwareLink_1","AppNavMenu","links","_renderEntries","fragments","previousWasGroup","forEach","entry","rendered","_renderEntry","MenuDivider","unshift","subEntries","primaryLink","throwUnknownMenuEntry","AppNavBar","Navbar","NavbarGroup","NavbarHeading","ellipsize","align","Alignment","RIGHT","UPLOAD","_onSaveClick","AppNavBar_1","AppNavMenu_1","NoSaveLoaded_1","LoadingSaveFile_1","SaveEditor_1","Materials_1","Changelog_1","Error_1","AppComponent","rootComponent","requireExactPath","redirectOn404","navMenuEntries","Dialog","isOpen","SAVED","isCloseButtonShown","react_hot_loader_1","App_1","hot","options","hmr","transform","insertInto","undefined","locals","ReactDOM","app_1","store_1","rootEl","document","getElementById","render","Provider","HashRouter"],"mappings":"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","file":"client.1b8f4e7fcec2a24b2b51.bundle.js","sourcesContent":["\r\nimport { Dispatch as TypedDispatch } from \"react-redux\";\r\n\r\nimport { Selector, createStructuredSelector as createSS, createSelector, ParametricSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"./state\";\r\n\r\nexport type Dispatch = TypedDispatch<AppState>;\r\n\r\nexport function createStructuredSelector<StateProps>(selectors: {[K in keyof StateProps]: Selector<AppState, StateProps[K]>}, selectorCreator?: typeof createSelector): Selector<AppState, StateProps>;\r\nexport function createStructuredSelector<Props, StateProps>(selectors: {[K in keyof StateProps]: ParametricSelector<AppState, Props, StateProps[K]>}, selectorCreator?: typeof createSelector): ParametricSelector<AppState, Props, StateProps>;\r\nexport function createStructuredSelector<StateProps>(selectors: any, selectorCreator?: typeof createSelector): Selector<AppState, StateProps> {\r\n    return createSS(selectors, selectorCreator);\r\n}\r\n","\r\nimport { GameObject } from \"oni-save-parser\";\r\nimport { createSelector, ParametricSelector } from \"reselect\";\r\nimport {\r\n    MinionGender,\r\n    Vector3,\r\n    KPrefabIDBehavior,\r\n    MinionIdentityBehavior,\r\n    AIAttributeLevelsBehavior,\r\n    AttributeLevel,\r\n    AITraitsBehavior,\r\n    AIEffectsBehavior,\r\n    EffectInstance,\r\n    HealthBehavior,\r\n    AccessorizerBehavior,\r\n    Accessory,\r\n    getBehavior,\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"../../../state\";\r\n\r\nimport { makeGetGameObjectsByType, makeGetBehaviorByName } from \"../selectors\";\r\n\r\n\r\n\r\n\r\nexport const duplicants = makeGetGameObjectsByType(\"Minion\");\r\nexport const duplicantsIDs = createSelector(\r\n    duplicants,\r\n    duplicants => {\r\n        const ids: number[] = [];\r\n        for (let duplicant of duplicants) {\r\n            const idBehavior = getBehavior(duplicant, KPrefabIDBehavior);\r\n            if (idBehavior && idBehavior.parsedData) {\r\n                ids.push(idBehavior.parsedData.InstanceID);\r\n            }\r\n        }\r\n        return ids;\r\n    }\r\n);\r\n\r\nexport const duplicantsMap = createSelector(\r\n    duplicants,\r\n    duplicants => {\r\n        const dups: {[key: number]: GameObject} = {};\r\n        for (let duplicant of duplicants) {\r\n            const idBehavior = getBehavior(duplicant, KPrefabIDBehavior);\r\n            if (idBehavior && idBehavior.parsedData) {\r\n                dups[idBehavior.parsedData.InstanceID] = duplicant;\r\n            }\r\n        }\r\n        return dups;\r\n    }\r\n)\r\n\r\nexport function makeGetDuplicantByID<Props>(propKey: keyof Props): ParametricSelector<AppState, Props, GameObject | null> {\r\n    return createSelector(\r\n        duplicantsMap,\r\n        // We know the type of Props, but we need to have TS validate it as a string somehow...\r\n        (_: AppState, props: any) => props[propKey],\r\n        (duplicantsMap, id) => {\r\n            if (!Object.prototype.hasOwnProperty.call(duplicantsMap, id)) {\r\n                return null;\r\n            }\r\n            return duplicantsMap[id];\r\n        }\r\n    );\r\n};\r\nexport type DuplicantByIDSelector<Props> = ParametricSelector<AppState, Props, GameObject | null>;\r\n\r\nexport function makeGetDuplicantSkills<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, AttributeLevel[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AIAttributeLevelsBehavior),\r\n        levelBehavior => levelBehavior ? levelBehavior.parsedData.saveLoadLevels : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantTraits<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AITraitsBehavior),\r\n        traitsBehavior => traitsBehavior ? traitsBehavior.parsedData.TraitIds : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantEffects<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, EffectInstance[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AIEffectsBehavior),\r\n        effectsBehavior => effectsBehavior ? effectsBehavior.parsedData.saveLoadEffects : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantHealthState<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, number | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, HealthBehavior),\r\n        healthBehavior => healthBehavior ? healthBehavior.parsedData.State : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantScale<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, Vector3 | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        selector,\r\n        gameObject => gameObject ? gameObject.scale : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantGender<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, MinionGender | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionIdentityBehavior),\r\n        identityBehavior => identityBehavior ? identityBehavior.parsedData.gender : null\r\n    );\r\n}\r\nexport function makeGetDuplicantVoice<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, number | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionIdentityBehavior),\r\n        identityBehavior => identityBehavior ? identityBehavior.parsedData.voiceIdx : null\r\n    );\r\n}\r\n","\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nexport interface SaveEditorState {\r\n    fileName: string | null;\r\n    isLoading: boolean;\r\n    isSaving: boolean;\r\n    loadError: Error | null;\r\n    saveGame: SaveGame | null;\r\n\r\n    // A sparse array keyed by prefab ID, specifying the type and index (in the typed game object array) of the game object.\r\n    normalizedIDs: NormalizedID[]\r\n}\r\nexport interface NormalizedID {\r\n    type: string;\r\n    index: number;\r\n}\r\n\r\n\r\nexport const defaultSaveEditorState: SaveEditorState = {\r\n    fileName: null,\r\n    isLoading: false,\r\n    isSaving: false,\r\n    loadError: null,\r\n    saveGame: null,\r\n\r\n    normalizedIDs: []\r\n};\r\n\r\nexport const saveEditorStateKey = \"saveEditor\";\r\n","\r\nimport { KPrefabID, MinionGender } from \"oni-save-parser\";\r\n\r\nimport { createAction } from \"../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_RENAME = \"@save-editor/duplicants/rename\";\r\nexport const renameDuplicant = createAction(ACTION_DUPLICANT_RENAME, (x: {duplicantID: KPrefabID, name: string}) => x);\r\nexport type RenameDuplicantAction = ReturnType<typeof renameDuplicant>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_SKILL_SET_LEVEL = \"@save-editor/duplicants/skills/set-level\";\r\nexport const setDuplicantSkillLevel = createAction(ACTION_DUPLICANT_SKILL_SET_LEVEL, (x: {duplicantID: KPrefabID, skillId: string, level: number}) => x);\r\nexport type SetDuplicantSkillLevelAction = ReturnType<typeof setDuplicantSkillLevel>;\r\n\r\nexport const ACTION_DUPLICANT_SKILL_SET_EXPERIENCE = \"@save-editor/duplicants/skills/set-experience\";\r\nexport const setDuplicantSkillExperience = createAction(ACTION_DUPLICANT_SKILL_SET_EXPERIENCE, (x: {duplicantID: KPrefabID, skillId: string, experience: number}) => x);\r\nexport type SetDuplicantSkillExperienceAction = ReturnType<typeof setDuplicantSkillExperience>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_TRAITS_SET = \"@save-editor/duplicants/traits/set\";\r\nexport const setDuplicantTraits = createAction(ACTION_DUPLICANT_TRAITS_SET, (x: {duplicantID: KPrefabID, traitIDs: string[]}) => x);\r\nexport type SetDuplicantTraitsAction = ReturnType<typeof setDuplicantTraits>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_ADD = \"@save-editor/duplicants/effects/add\";\r\nexport const addDuplicantEffect = createAction(ACTION_DUPLICANT_EFFECTS_ADD, (x: {duplicantID: KPrefabID, effectID: string, timeRemaining: number}) => x);\r\nexport type AddDuplicantEffectAction = ReturnType<typeof addDuplicantEffect>;\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_SETTIME = \"@save-editor/duplicants/effects/set-time\";\r\nexport const setDuplicantEffectTime = createAction(ACTION_DUPLICANT_EFFECTS_SETTIME, (x: {duplicantID: KPrefabID, effectID: string, timeRemaining: number}) => x);\r\nexport type SetDuplicantEffectTimeAction = ReturnType<typeof setDuplicantEffectTime>;\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_REMOVE = \"@save-editor/duplicants/effects/remove\";\r\nexport const removeDuplicantEffect = createAction(ACTION_DUPLICANT_EFFECTS_REMOVE, (x: {duplicantID: KPrefabID, effectID: string}) => x);\r\nexport type RemoveDuplicantEffectAction = ReturnType<typeof removeDuplicantEffect>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_HEALTH_STATE_SET = \"@save-editor/duplicants/health/state/set\";\r\nexport const setDuplicantHealthState = createAction(ACTION_DUPLICANT_HEALTH_STATE_SET, (x: {duplicantID: KPrefabID, healthState: number}) => x);\r\nexport type SetDuplicantHealthStateAction = ReturnType<typeof setDuplicantHealthState>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_SCALE_SET = \"@save-editor/duplicants/scale/set\";\r\nexport const setDuplicantScale = createAction(ACTION_DUPLICANT_SCALE_SET, (x: {duplicantID: KPrefabID, scaleX?: number, scaleY?: number}) => x);\r\nexport type SetDuplicantScaleAction = ReturnType<typeof setDuplicantScale>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_GENDER_SET = \"@save-editor/duplicants/gender/set\";\r\nexport const setDuplicantGender = createAction(ACTION_DUPLICANT_GENDER_SET, (x: {duplicantID: KPrefabID, gender: MinionGender}) => x);\r\nexport type SetDuplicantGenderAction = ReturnType<typeof setDuplicantGender>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_VOICE_SET = \"@save-editor/duplicants/voice/set\";\r\nexport const setDuplicantVoice = createAction(ACTION_DUPLICANT_VOICE_SET, (x: {duplicantID: KPrefabID, voiceIdx: number}) => x);\r\nexport type SetDuplicantVoiceAction = ReturnType<typeof setDuplicantVoice>;\r\n\r\n\r\n\r\n\r\nexport type DuplicantActions =\r\n    RenameDuplicantAction\r\n    | SetDuplicantSkillLevelAction\r\n    | SetDuplicantSkillExperienceAction\r\n    | SetDuplicantTraitsAction\r\n    | AddDuplicantEffectAction\r\n    | SetDuplicantEffectTimeAction\r\n    | RemoveDuplicantEffectAction\r\n    | SetDuplicantHealthStateAction\r\n    | SetDuplicantScaleAction\r\n    | SetDuplicantGenderAction\r\n    | SetDuplicantVoiceAction;\r\n","\r\nconst failureType = {\r\n    ACTION_INVALID: \"action-invalid\" as \"action-invalid\",\r\n    SAVEFILE_CORRUPT: \"savefile-corrupt\" as \"savefile-corrupt\",\r\n    STATE_CORRUPT: \"state-corrupt\" as \"state-corrupt\",\r\n    MISSING_BEHAVIOR: \"missing-behavior\" as \"missing-behavior\"\r\n};\r\nObject.freeze(failureType);\r\nObject.seal(failureType);\r\n\r\nexport type FailureType = (typeof failureType)[keyof typeof failureType];\r\nexport const FAILURE_TYPE: Readonly<typeof failureType> = failureType;\r\n\r\n\r\nexport function warning(message: string, failureType?: FailureType) {\r\n    // TODO: Log to user console.\r\n    console.warn(`(${failureType}):`, message);\r\n}\r\n\r\nexport function error(message: string, failureType?: FailureType) {\r\n    // TODO: Log to user console.\r\n    console.error(`(${failureType}):`, message);\r\n}","\r\nimport { Selector, createSelector, ParametricSelector } from \"reselect\";\r\nimport {\r\n    GameObject,\r\n    GameObjectBehavior,\r\n    BehaviorName,\r\n    MinionIdentityBehavior,\r\n    KPrefabIDBehavior,\r\n    getBehavior    \r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"../../state\";\r\n\r\n\r\nexport const saveEditor = (state: AppState) => state.saveEditor;\r\n\r\n// TODO: Lots of data can be precalculated here, but then we have to update\r\n//  it when the game objects are modified.\r\n// May want to investigate normalizing the save file then de-normalizing it\r\n//  to save.  This is blocked currently by needing a very deeply nested value (KPrefabID) as the\r\n//  ID to the game object.\r\n\r\nconst saveGame = createSelector(saveEditor, saveEditor => saveEditor.saveGame);\r\n\r\nexport const gameObjects = createSelector(saveGame, saveGame => saveGame ? saveGame.body.gameObjects : null);\r\n\r\nexport function makeGetGameObjectsByType(type: string): Selector<AppState, GameObject[]> {\r\n    return createSelector(\r\n        gameObjects,\r\n        gameObjects => gameObjects ? gameObjects[type] || [] : []\r\n    );\r\n}\r\n\r\n// We can handle parametric or non-parametric input selectors.  We do not use the parameter, but createSelector will pass the params as required.\r\nexport function makeGetBehaviorByName<T extends GameObjectBehavior>(gameObjectSelector: Selector<AppState, GameObject | null>, behaviorName: BehaviorName<T>): Selector<AppState, T | null>;\r\nexport function makeGetBehaviorByName<Props, T extends GameObjectBehavior>(gameObjectSelector: ParametricSelector<AppState, Props, GameObject | null>, behaviorName: BehaviorName<T>): ParametricSelector<AppState, Props, T | null>;\r\nexport function makeGetBehaviorByName<T extends GameObjectBehavior>(\r\n    gameObjectSelector: (Selector<AppState, GameObject | null> | ParametricSelector<AppState, any, GameObject | null>),\r\n    behaviorName: BehaviorName<T>\r\n): ParametricSelector<AppState, any, T | null> {\r\n    return createSelector(\r\n        gameObjectSelector,\r\n        (gameObject) => (gameObject && gameObject.behaviors.find(x => x.name === behaviorName) as T) || null\r\n    );\r\n}","\r\nimport { createAction as createReduxAction } from \"redux-actions\";\r\n\r\n// We can do this better than the Action type of redux-actions:\r\n//  - Create a discriminated union on explicit 'type' types for use in reducers.\r\n//  - inferr the action typedef and payload shape using TS 2.8's ReturnType / infer keyword.\r\n// This gets us very close, but hides the parameter names for our payload creator.\r\n//  To get around this, we just use one argument that contains the payload.  This\r\n//  lets us expose the names as well as the types, at the cost of having to pass in data\r\n//  in object form.\r\n\r\n\r\nexport interface NamedAction<TName extends string, TPayload> {\r\n    type: TName;\r\n    payload: TPayload;\r\n}\r\n\r\n\r\nexport function createAction<TName extends string, TPayload, T1>(name: TName, payloadCreator: (arg1: T1) => TPayload): (arg1: T1) => NamedAction<TName, TPayload>;\r\nexport function createAction<TName extends string, TPayload>(name: TName, payloadCreator: (...args: any[]) => TPayload): (...args: any[]) => NamedAction<TName, TPayload> {\r\n    return createReduxAction(name, payloadCreator) as any;\r\n}\r\n","\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nimport { createAction } from \"../../../action-utils\";\r\n\r\nexport const ACTION_SAVEFILE_LOAD = \"@save-editor/savefile/load\";\r\nexport const loadSavefile = createAction(ACTION_SAVEFILE_LOAD, (x: {file: File}) => x);\r\nexport type LoadSavefileAction = ReturnType<typeof loadSavefile>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE = \"@save-editor/savefile/save\";\r\nexport const saveSavefile = createAction(ACTION_SAVEFILE_SAVE, (x: {fileName?: string}) => x);\r\nexport type SaveSavefileAction = ReturnType<typeof saveSavefile>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE_START = \"@save-editor/savefile/save/start\";\r\nexport const saveSavefileStarted = createAction(ACTION_SAVEFILE_SAVE_START, () => {});\r\nexport type SaveSavefileStartedAction = ReturnType<typeof saveSavefileStarted>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE_END = \"@save-editor/savefile/save/end\";\r\nexport const saveSavefileEnded = createAction(ACTION_SAVEFILE_SAVE_END, () => {});\r\nexport type SaveSavefileEndedAction = ReturnType<typeof saveSavefileEnded>;\r\n\r\n\r\nexport const ACTION_SAVEFILE_RECEIVED = \"@save-editor/savefile/received\";\r\nexport const savefileReceived = createAction(ACTION_SAVEFILE_RECEIVED, (x: {saveGame: SaveGame}) => x);\r\nexport type SavefileReceivedAction = ReturnType<typeof savefileReceived>;\r\n\r\nexport type SavefileActions = LoadSavefileAction | SaveSavefileAction | SaveSavefileStartedAction | SaveSavefileEndedAction | SavefileReceivedAction;\r\n","\r\nimport { BehaviorName } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, NormalizedID } from \"./state\";\r\nimport { AnyAction } from \"redux\";\r\nimport { GameObject, GameObjectBehavior } from \"oni-save-parser\";\r\nimport { error, FAILURE_TYPE } from \"../../logging\";\r\n\r\n\r\nexport function modifyGameObject(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    prefabID: number,\r\n    modifier: (gameObject: GameObject, normalizedId: NormalizedID) => GameObject\r\n) {\r\n    const saveGame = state.saveGame;\r\n    if (!saveGame) {\r\n        error(`Action \"${action.type}\" called before a save game is available.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const location = state.normalizedIDs[prefabID];\r\n    if (!location) {\r\n        error(`Action \"${action.type}\" requested prefabID ${prefabID}, which is not in the normalized ID table.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const {\r\n        type,\r\n        index\r\n    } = location;\r\n\r\n    if (type !== \"Minion\") {\r\n        error(`Action \"${action.type}\" requested prefabID ${prefabID}, which is not a duplicant.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const gameObject = saveGame.body.gameObjects[type][index];\r\n    if (!gameObject) {\r\n        error(`Action \"${action.type}\" prefabID ${prefabID} mapped to prefab \"${type}\":${index}, which does not exist.`, FAILURE_TYPE.STATE_CORRUPT);\r\n        return state;\r\n    }\r\n\r\n    const newGameObject = modifier(gameObject, location);\r\n\r\n    // Aarrrgggh, normalize!\r\n    return {\r\n        ...state,\r\n        saveGame: {\r\n            ...saveGame,\r\n            body: {\r\n                ...saveGame.body,\r\n                gameObjects: {\r\n                    ...saveGame.body.gameObjects,\r\n                    [type]: [\r\n                        ...saveGame.body.gameObjects[type].slice(0, index),\r\n                        newGameObject,\r\n                        ...saveGame.body.gameObjects[type].slice(index + 1)\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function modifyBehavior<T extends GameObjectBehavior>(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    prefabID: number,\r\n    behaviorName: BehaviorName<T>,\r\n    modifier: (behavior: T, normalizedId: NormalizedID) => T\r\n): SaveEditorState {\r\n    return modifyGameObject(\r\n        state,\r\n        action,\r\n        prefabID,\r\n        (gameObject, normalizedId) => {\r\n            const behaviorIndex = gameObject.behaviors.findIndex(x => x.name === behaviorName);\r\n            if (behaviorIndex === -1) {\r\n                error(`Action \"${action.type}\" prefabID ${prefabID} prefab \"${normalizedId.type}\":${normalizedId.index} does not have behavior \"${behaviorName}\".`, FAILURE_TYPE.SAVEFILE_CORRUPT);\r\n                return gameObject;\r\n            }\r\n            const behavior = gameObject.behaviors[behaviorIndex] as T;\r\n\r\n            const newBehavior = modifier(behavior, normalizedId);\r\n\r\n            const newGameObject: GameObject = {\r\n                ...gameObject,\r\n                behaviors: [\r\n                    ...gameObject.behaviors.slice(0, behaviorIndex),\r\n                    newBehavior,\r\n                    ...gameObject.behaviors.slice(behaviorIndex + 1)\r\n\r\n                ]\r\n            }\r\n            return newGameObject\r\n        }\r\n    );\r\n}\r\n","\r\nimport { Element, ElementDataTable } from \"./interfaces\";\r\n\r\nexport type ElementParseEntry = number | [number, ((value: string) => any)] | string;\r\nexport type ElementParser<TElement extends Element> = {\r\n    [P in keyof TElement]: ElementParseEntry;\r\n}\r\nexport function parseElement<TElement extends Element>(rows: string[], parser: ElementParser<TElement>): TElement {\r\n    \r\n    const element: any = {};\r\n    for (let key of Object.keys(parser) as (keyof ElementParser<TElement>)[]) {\r\n        const parseData: ElementParseEntry = parser[key];\r\n        let index: number;\r\n        let formatter = (x: string) => x;\r\n        if (typeof parseData === \"string\") {\r\n            element[key] = parseData;\r\n            continue;\r\n        }\r\n        if (Array.isArray(parseData)) {\r\n            index = parseData[0];\r\n            formatter = parseData[1];\r\n        }\r\n        else {\r\n            index = parseData;\r\n        }\r\n        element[key] = formatter(rows[index]);\r\n    }\r\n    return element;\r\n}\r\n\r\n\r\nexport function parseCsv(content: string): ElementDataTable {\r\n    const [headerRow, ...rowData] = content.split(/\\r\\n?/);\r\n    const headers = headerRow.split(\",\");\r\n    const rows = rowData.filter(x => x[0] !== \"#\").map(x => x.split(\",\")).filter(x => x.length > 0 && x[0] !== \"\");\r\n    return {\r\n        headers,\r\n        rows\r\n    };\r\n}\r\n","\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { saveEditor } from \"../selectors\";\r\n\r\nexport const isSaveChosen = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName != null));\r\nexport const saveFileName = createSelector(saveEditor, saveEditor => saveEditor.fileName);\r\nexport const isSaveLoaded = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName != null && !saveEditor.isLoading));\r\nexport const isSaveLoading = createSelector(saveEditor, saveEditor => saveEditor.isLoading);\r\nexport const isSaveSaving = createSelector(saveEditor, saveEditor => saveEditor.isSaving);\r\nexport const isSaveEnabled = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName && saveEditor.isLoading == false));\r\nexport const loadError = createSelector(saveEditor, saveEditor => saveEditor.loadError);\r\n","\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fork } from \"redux-saga/effects\"\r\n\r\nimport saveEditorSaga from \"../services/save-editor/saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default sagaMiddleware;\r\n\r\nexport function runSaga() {\r\n    sagaMiddleware.run(function*() {\r\n        yield fork(saveEditorSaga);\r\n    });\r\n}","\r\nimport { SOLIDS, SolidElement } from \"./solid\";\r\nimport { LIQUIDS, LiquidElement } from \"./liquid\";\r\nimport { GASSES, GasElement } from \"./gas\";\r\n\r\nexport const ELEMENTS: (SolidElement | LiquidElement | GasElement)[] = [\r\n    ...SOLIDS,\r\n    ...LIQUIDS,\r\n    ...GASSES\r\n];\r\n","\r\nimport {\r\n    Element\r\n} from \"./interfaces\";\r\n\r\nimport {\r\n    ElementParser,\r\n    parseCsv,\r\n    parseElement\r\n} from \"./parser\";\r\n\r\nimport gasCsv from \"raw-loader!oni-save-parser/data/gas.csv\";\r\n\r\nexport const GAS_DATATABLE = parseCsv(gasCsv);\r\n\r\nexport interface GasElement extends Element {\r\n    type: \"gas\";\r\n\r\n    flow: number;\r\n\r\n    defaultPressure: number;\r\n\r\n    lowTemp: number;\r\n    lowTempTransition: string;\r\n\r\n    toxicity: number;\r\n}\r\n\r\nconst GAS_FIELD_PARSER: ElementParser<GasElement> = {\r\n    name: 0,\r\n    type: \"gas\",\r\n    category: 15,\r\n    tags: [16, x => (x || \"\").split(\"|\").map(x => x.trim()).filter(x => x != \"\")],\r\n\r\n    molarMass: [11, Number],\r\n\r\n    specificHeatCapacity: [1, Number],\r\n    thermalConductivity: [2, Number],\r\n    defaultTemperature: [9, Number],\r\n\r\n    solidSurfaceAreaMultiplier: [3, Number],\r\n    liquidSurfaceAreaMultiplier: [4, Number],\r\n    gasSurfaceAreaMultiplier: [5, Number],\r\n\r\n    flow: [6, Number],\r\n\r\n    defaultPressure: [10, Number],\r\n\r\n    lowTemp: [7, Number],\r\n    lowTempTransition: [8, x => x != \"\" ? x : null],\r\n\r\n    lightEmitDistasnce: [12, Number],\r\n    lightEmitIntensity: [13, Number],\r\n\r\n    toxicity: [14, Number]\r\n};\r\nexport const GASSES = GAS_DATATABLE.rows.map(x => parseElement(x, GAS_FIELD_PARSER));\r\nexport const GAS_FIELDS: (keyof GasElement)[] = Object.keys(GAS_FIELD_PARSER) as any;\r\n","\r\nimport {\r\n    Element\r\n} from \"./interfaces\";\r\n\r\nimport {\r\n    ElementParser,\r\n    parseCsv,\r\n    parseElement\r\n} from \"./parser\";\r\n\r\nimport liquidCsv from \"raw-loader!oni-save-parser/data/liquid.csv\";\r\n\r\nexport const LIQUID_DATATABLE = parseCsv(liquidCsv);\r\n\r\nexport interface LiquidElement extends Element {\r\n    type: \"liquid\",\r\n\r\n    defaultMass: number;\r\n\r\n    maxCompressionMass: number;\r\n    compressionFactor: number;\r\n\r\n    speed: number;\r\n    minHorizontalFlow: number;\r\n    minVerticalFlow: number;\r\n\r\n    electricalConductivity: number;\r\n\r\n    lowTemp: number;\r\n    lowTempTransition: string;\r\n\r\n    highTemp: number;\r\n    highTempTransition: number;\r\n    highTempTransitionOre: string;\r\n    highTempTransitionOreMassFactor: number;\r\n\r\n    sublimateId: string;\r\n\r\n    convertId: string;\r\n\r\n    toxicity: number;\r\n}\r\n\r\nconst LIQUID_FIELD_PARSER: ElementParser<LiquidElement> = {\r\n    name: 0,\r\n    type: \"liquid\",\r\n    category: 27,\r\n    tags: [28, x => (x || \"\").split(\"|\").map(x => x.trim()).filter(x => x != \"\")],\r\n\r\n    molarMass: [23, Number],\r\n    defaultMass: [22, Number],\r\n    maxCompressionMass: [1, Number],\r\n    compressionFactor: [2, Number],\r\n\r\n    specificHeatCapacity: [6, Number],\r\n    thermalConductivity: [7, Number],\r\n    defaultTemperature: [21, Number],\r\n\r\n    solidSurfaceAreaMultiplier: [8, Number],\r\n    liquidSurfaceAreaMultiplier: [9, Number],\r\n    gasSurfaceAreaMultiplier: [10, Number],\r\n\r\n    speed: [3, Number],\r\n    minHorizontalFlow: [4, Number],\r\n    minVerticalFlow: [5, Number],\r\n\r\n    electricalConductivity: [11, Number],\r\n\r\n    lowTemp: [12, Number],\r\n    lowTempTransition: [14, x => x != \"\" ? x : null],\r\n\r\n    highTemp: [13, Number],\r\n    highTempTransition: [15, x => x != \"\" ? x : null],\r\n    highTempTransitionOre: [19, x => x != \"\" ? x : null],\r\n    highTempTransitionOreMassFactor: [20, Number],\r\n\r\n    sublimateId: [16, x => x != \"\" ? x : null],\r\n\r\n    lightEmitDistasnce: [24, Number],\r\n    lightEmitIntensity: [25, Number],\r\n\r\n    convertId: [18, x => x != \"\" ? x : null],\r\n\r\n    toxicity: [26, Number],\r\n};\r\nexport const LIQUIDS = LIQUID_DATATABLE.rows.map(x => parseElement(x, LIQUID_FIELD_PARSER));\r\nexport const LIQUID_FIELDS: (keyof LiquidElement)[] = Object.keys(LIQUID_FIELD_PARSER) as any;\r\n","\r\nimport {\r\n    Element\r\n} from \"./interfaces\";\r\n\r\nimport {\r\n    ElementParser,\r\n    parseCsv,\r\n    parseElement\r\n} from \"./parser\";\r\n\r\nimport solidCsv from \"raw-loader!oni-save-parser/data/solid.csv\";\r\n\r\nexport const SOLID_DATATABLE = parseCsv(solidCsv);\r\n\r\nexport interface SolidElement extends Element {\r\n    type: \"solid\",\r\n\r\n    defaultMass: number;\r\n    maxMass: number;\r\n\r\n    strength: number;\r\n    hardness: number;\r\n    hardnessTier: any;\r\n\r\n    electricalConductivity: number;\r\n\r\n    highTemp: number;\r\n    highTempTransitionTarget: number;\r\n\r\n    sublimateId: string;\r\n}\r\n\r\n/*\r\n0: id\r\n1: specificHeatCapacity\r\n2: thermalConductivity\r\n3: SolidSurfaceAreaMultiplier\r\n4: LiquidSurfaceAreaMultiplier\r\n5: GasSurfaceAreaMultiplier\r\n6: electricalConductivity\r\n7: strength\r\n8: highTemp\r\n9: highTempTransitionTarget\r\n10: sublimateId\r\n11: sublimateFx\r\n12: defaultValues.temperature\r\n13: defaultValues.mass,\r\n14: Max Mass,\r\n15: hardnessTier,\r\n16: hardness,\r\n17: molarMass,\r\n18: EmitDistance,\r\n19: EmitIntensity,\r\n20: MaterialCategory,\r\n21: Tags,\r\n22: Notes\r\n*/\r\nconst SOLID_FIELD_PARSER: ElementParser<SolidElement> = {\r\n    name: 0,\r\n    type: \"solid\",\r\n    category: 20,\r\n    tags: [21, x => (x || \"\").split(\"|\").map(x => x.trim()).filter(x => x != \"\")],\r\n    molarMass: [17, Number],\r\n\r\n    defaultMass: [13, Number],\r\n    maxMass: [14, Number],\r\n\r\n    strength: [7, Number],\r\n    hardness: [16, Number],\r\n    hardnessTier: [15, Number],\r\n\r\n    defaultTemperature: [12, Number],\r\n    specificHeatCapacity: [1, Number],\r\n    thermalConductivity: [2, Number],\r\n\r\n    solidSurfaceAreaMultiplier: [3, Number],\r\n    liquidSurfaceAreaMultiplier: [4, Number],\r\n    gasSurfaceAreaMultiplier: [5, Number],\r\n\r\n    electricalConductivity: [6, Number],\r\n\r\n    highTemp: [8, Number],\r\n    highTempTransitionTarget: [9, x => x != \"\" ? x : null],\r\n\r\n    sublimateId: [10, x => x != \"\" ? x : null],\r\n    lightEmitDistasnce: [18, Number],\r\n    lightEmitIntensity: [19, Number]\r\n};\r\nexport const SOLIDS = SOLID_DATATABLE.rows.map(x => parseElement(x, SOLID_FIELD_PARSER));\r\nexport const SOLID_FIELDS: (keyof SolidElement)[] = Object.keys(SOLID_FIELD_PARSER) as any;\r\n","\r\nexport * from \"./interfaces\";\r\nexport * from \"./solid\";\r\nexport * from \"./liquid\";\r\nexport * from \"./gas\";\r\nexport * from \"./elements\";\r\nexport * from \"./utils\";","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { KPrefabID } from \"oni-save-parser\";\r\nimport { createAction } from \"../../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_ROLE_CURRENT_SET = \"@save-editor/duplicants/role/current/set\";\r\nexport const setDuplicantCurrentRole = createAction(ACTION_DUPLICANT_ROLE_CURRENT_SET, (x: { duplicantID: KPrefabID, roleID: string }) => x);\r\nexport type SetDuplicantCurrentRoleAction = ReturnType<typeof setDuplicantCurrentRole>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_TARGET_SET = \"@save-editor/duplicants/role/target/set\";\r\nexport const setDuplicantTargetRole = createAction(ACTION_DUPLICANT_ROLE_TARGET_SET, (x: { duplicantID: KPrefabID, roleID: string }) => x);\r\nexport type SetDuplicantTargetRoleAction = ReturnType<typeof setDuplicantTargetRole>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_MASTERY_SET = \"@save-editor/duplicants/role/mastery/set\";\r\nexport const setDuplicantRoleMastery = createAction(ACTION_DUPLICANT_ROLE_MASTERY_SET, (x: { duplicantID: KPrefabID, roleID: string, mastery: boolean }) => x);\r\nexport type SetDuplicantRoleMasteryAction = ReturnType<typeof setDuplicantRoleMastery>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_EXPERIENCE_SET = \"@save-editor/duplicants/role/experience/set\";\r\nexport const setDuplicantRoleExperience = createAction(ACTION_DUPLICANT_ROLE_EXPERIENCE_SET, (x: { duplicantID: KPrefabID, roleID: string, experience: number }) => x);\r\nexport type SetDuplicantRoleExperienceAction = ReturnType<typeof setDuplicantRoleExperience>;\r\n\r\n\r\nexport type DuplicantResumeActions =\r\n    SetDuplicantCurrentRoleAction\r\n    | SetDuplicantTargetRoleAction\r\n    | SetDuplicantRoleMasteryAction\r\n    | SetDuplicantRoleExperienceAction;\r\n","\r\nimport { KPrefabID } from \"oni-save-parser\";\r\nimport { createAction } from \"../../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_EYES_SET = \"@save-editor/duplicants/appearance/eyes/set\";\r\nexport const setDuplicantEyes = createAction(ACTION_DUPLICANT_APPEARANCE_EYES_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantEyesAction = ReturnType<typeof setDuplicantEyes>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_HAIR_SET = \"@save-editor/duplicants/appearance/hair/set\";\r\nexport const setDuplicantHair = createAction(ACTION_DUPLICANT_APPEARANCE_HAIR_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantHairAction = ReturnType<typeof setDuplicantHair>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_HEAD_SET = \"@save-editor/duplicants/appearance/head/set\";\r\nexport const setDuplicantHead = createAction(ACTION_DUPLICANT_APPEARANCE_HEAD_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantHeadAction = ReturnType<typeof setDuplicantHead>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_MOUTH_SET = \"@save-editor/duplicants/appearance/mouth/set\";\r\nexport const setDuplicantMouth = createAction(ACTION_DUPLICANT_APPEARANCE_MOUTH_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantMouthAction = ReturnType<typeof setDuplicantMouth>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_BODY_SET = \"@save-editor/duplicants/appearance/body/set\";\r\nexport const setDuplicantBody = createAction(ACTION_DUPLICANT_APPEARANCE_BODY_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantBodyAction = ReturnType<typeof setDuplicantBody>;\r\n\r\n\r\nexport type DuplicantAppearanceActions =\r\n    SetDuplicantEyesAction\r\n    | SetDuplicantHairAction\r\n    | SetDuplicantHeadAction\r\n    | SetDuplicantMouthAction\r\n    | SetDuplicantBodyAction;\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2b9bad58b63253c0beb9.worker.js\");\n};","\r\nimport { take, fork, call, put, select } from \"redux-saga/effects\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\n\r\nimport {\r\n    ACTION_SAVEFILE_LOAD,\r\n    ACTION_SAVEFILE_SAVE,\r\n    LoadSavefileAction,\r\n    SaveSavefileAction,\r\n    savefileReceived,\r\n    saveSavefileStarted,\r\n    saveSavefileEnded\r\n} from \"./actions\";\r\n\r\nimport SaveLoadWorker from \"worker-loader!./save-loader.worker\";\r\nimport { LoadCommandData, SaveCommandData } from \"./save-loader.worker\";\r\nimport { Action } from \"redux\";\r\nimport { AppState } from \"../../../state\";\r\nimport { error } from \"../../../logging\";\r\n\r\n\r\nconst worker = new SaveLoadWorker();\r\n\r\nfunction* loadSaveFile(action: LoadSavefileAction) {\r\n    const {\r\n        file\r\n    } = action.payload;\r\n\r\n    const reader = new FileReader();\r\n    const loadGamePromise = new Promise<File>((accept, reject) => {\r\n        reader.onload = () => {\r\n            accept(reader.result);\r\n        };\r\n        reader.onerror = () => {\r\n            reject(reader.error);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }).then(buffer => {\r\n        return new Promise((accept, reject) => {\r\n            worker.onerror = (e: ErrorEvent) => { reject(e.error) };\r\n            worker.onmessage = (e: MessageEvent) => {\r\n                const {\r\n                    saveGame,\r\n                    error\r\n                } = e.data;\r\n                if (error) reject(error);\r\n                else accept(saveGame);\r\n            };\r\n\r\n            const cmd: LoadCommandData = {\r\n                command: \"load\",\r\n                buffer: reader.result\r\n            };\r\n            worker.postMessage(cmd);\r\n        });\r\n    });\r\n\r\n    try {\r\n        const saveGame: SaveGame = yield call(() => loadGamePromise);\r\n        yield put(savefileReceived({ saveGame }));\r\n    }\r\n    catch (err) {\r\n        // TODO: either send with savefileReceived error key, or make a new action for this.\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* saveSavefile(action: SaveSavefileAction) {\r\n    const {\r\n        fileName\r\n    } = action.payload;\r\n\r\n    const state: AppState = yield select();\r\n\r\n    const saveGame = state.saveEditor.saveGame;\r\n    if (!saveGame) {\r\n        return;\r\n    }\r\n\r\n    yield put(saveSavefileStarted({}));\r\n\r\n    try {\r\n        const saveDataPromise = new Promise<ArrayBuffer>((accept, reject) => {\r\n            worker.onerror = (e: ErrorEvent) => { reject(e.error) };\r\n            worker.onmessage = (e: MessageEvent) => {\r\n                const {\r\n                    buffer,\r\n                    error\r\n                } = e.data;\r\n                if (error) reject(error);\r\n                else accept(buffer);\r\n            };\r\n\r\n            const cmd: SaveCommandData = {\r\n                command: \"save\",\r\n                save: saveGame\r\n            };\r\n            worker.postMessage(cmd);\r\n        });\r\n\r\n        const saveData: ArrayBuffer = yield call(() => saveDataPromise);\r\n        const blob = new Blob([saveData]);\r\n\r\n        saveAs(blob, fileName || state.saveEditor.fileName || \"my-file.sav\");\r\n    }\r\n    catch (e) {\r\n        error(\"Failed to save file: \" + e.message);\r\n    }\r\n\r\n    yield put(saveSavefileEnded({}));\r\n}\r\n\r\nfunction* handleSaveOrLoad() {\r\n    // Take a save or load, then block until we complete.\r\n    //  This will effectively ignore save/load calls happening while we are working.\r\n    while (true) {\r\n        const action: LoadSavefileAction | SaveSavefileAction = yield take([ACTION_SAVEFILE_LOAD, ACTION_SAVEFILE_SAVE]);\r\n        switch (action.type) {\r\n            case ACTION_SAVEFILE_LOAD:\r\n                yield call<LoadSavefileAction>(loadSaveFile, action);\r\n                continue;\r\n            case ACTION_SAVEFILE_SAVE:\r\n                yield call<SaveSavefileAction>(saveSavefile, action);\r\n                continue;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function* () {\r\n    yield fork(handleSaveOrLoad);\r\n}\r\n","\r\nimport { fork } from \"redux-saga/effects\";\r\n\r\nimport saveFileSaga from \"./savefile/saga\";\r\n\r\nexport default function* () {\r\n    yield fork(saveFileSaga);\r\n}","import { AnyAction } from \"redux\";\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../../state\";\r\n\r\nimport { modifyBehavior } from \"../../reducer-utils\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_ROLE_MASTERY_SET,\r\n    ACTION_DUPLICANT_ROLE_EXPERIENCE_SET,\r\n    DuplicantResumeActions,\r\n    ACTION_DUPLICANT_ROLE_TARGET_SET,\r\n    ACTION_DUPLICANT_ROLE_CURRENT_SET\r\n} from \"./actions\";\r\n\r\n\r\nexport default function duplicantAccessoriesReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as DuplicantResumeActions;\r\n    switch(action.type) {\r\n        case ACTION_DUPLICANT_ROLE_CURRENT_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        currentRole: roleID\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_TARGET_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        targetRole: roleID\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_MASTERY_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n                mastery\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        MasteryByRoleID: new Map<string, boolean>(Array.from(behavior.parsedData.MasteryByRoleID.entries()).concat([[roleID, mastery]]))\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_EXPERIENCE_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n                experience\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        ExperienceByRoleID: new Map<string, number>(Array.from(behavior.parsedData.ExperienceByRoleID.entries()).concat([[roleID, experience]]))\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../../state\";\r\n\r\nimport { modifyBehavior } from \"../../reducer-utils\";\r\n\r\nimport {\r\n    AccessorizerBehavior,\r\n    Accessory,\r\n    getIndexOfAccessoryType,\r\n    getAccessoryOrdinal,\r\n    makeAccessoryID\r\n} from \"oni-save-parser\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_APPEARANCE_EYES_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_HAIR_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_HEAD_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_MOUTH_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_BODY_SET,\r\n    DuplicantAppearanceActions\r\n} from \"./actions\";\r\n\r\n\r\nexport default function duplicantAccessoriesReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as DuplicantAppearanceActions;\r\n    switch(action.type) {\r\n        case ACTION_DUPLICANT_APPEARANCE_EYES_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"eyes\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_HAIR_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"hair\",\r\n                accessoryID\r\n            );\r\n\r\n            const ordinal = getAccessoryOrdinal(accessoryID);\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"hat_hair\",\r\n                makeAccessoryID(\"hat_hair\", ordinal || 1)\r\n            );\r\n\r\n            // TODO: Also hair_always?  Seems that way from MinionStartingStates CreateBodyData,\r\n            //  but saved dups have a DEFAULT here\r\n\r\n            return state;\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_HEAD_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"headshape\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_MOUTH_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"mouth\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_BODY_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"body\",\r\n                accessoryID\r\n            );\r\n\r\n            const ordinal = getAccessoryOrdinal(accessoryID);\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"arm\",\r\n                makeAccessoryID(\"arm\", ordinal || 1)\r\n            );\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction modifyAccessory(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    duplicantID: number,\r\n    accessoryType: string,\r\n    accessoryID: string\r\n): SaveEditorState {\r\n    return modifyBehavior(\r\n        state,\r\n        action,\r\n        duplicantID,\r\n        AccessorizerBehavior,\r\n        behavior => {\r\n            const oldAccessories = behavior.parsedData!.accessories;\r\n            const accIndex = getIndexOfAccessoryType(oldAccessories, accessoryType);\r\n            const newAccessory: Accessory = {\r\n                guid: {\r\n                    Guid: accessoryID\r\n                }\r\n            };\r\n            let accessories: Accessory[];\r\n            if (accIndex !== -1) {\r\n                accessories = [\r\n                    ...oldAccessories.slice(0, accIndex),\r\n                    newAccessory,\r\n                    ...oldAccessories.slice(accIndex + 1)\r\n                ];\r\n            }\r\n            else {\r\n                accessories = [\r\n                    ...oldAccessories,\r\n                    newAccessory\r\n                ];\r\n            }\r\n\r\n            return {\r\n                ...behavior,\r\n                parsedData: {\r\n                    ...behavior.parsedData,\r\n                    accessories\r\n                }\r\n            };\r\n        }\r\n    );\r\n}","\r\nimport { AnyAction } from \"redux\";\r\nimport {\r\n    GameObjectBehavior,\r\n    GameObject,\r\n    MinionIdentityBehavior,\r\n    AIAttributeLevelsBehavior,\r\n    BehaviorName,\r\n    AITraitsBehavior,\r\n    AIEffectsBehavior,\r\n    HealthBehavior,\r\n    AccessorizerBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { error, FAILURE_TYPE, warning } from \"../../../logging\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState, NormalizedID } from \"../state\";\r\n\r\nimport { modifyGameObject, modifyBehavior } from \"../reducer-utils\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_RENAME,\r\n    ACTION_DUPLICANT_SKILL_SET_LEVEL,\r\n    ACTION_DUPLICANT_SKILL_SET_EXPERIENCE,\r\n    ACTION_DUPLICANT_TRAITS_SET,\r\n    ACTION_DUPLICANT_EFFECTS_ADD,\r\n    ACTION_DUPLICANT_EFFECTS_SETTIME,\r\n    ACTION_DUPLICANT_EFFECTS_REMOVE,\r\n    ACTION_DUPLICANT_HEALTH_STATE_SET,\r\n    ACTION_DUPLICANT_SCALE_SET,\r\n    ACTION_DUPLICANT_GENDER_SET,\r\n    ACTION_DUPLICANT_VOICE_SET,\r\n    DuplicantActions\r\n} from \"./actions\";\r\n\r\nimport duplicantAppearanceReducer from \"./appearance/reducer\";\r\nimport duplicantResumeReducer from \"./resume/reducer\";\r\n\r\nexport default function duplicantsReducer(state: SaveEditorState = defaultSaveEditorState, action: AnyAction): SaveEditorState {\r\n    state = duplicantsRootReducer(state, action);\r\n    state = duplicantAppearanceReducer(state, action);\r\n    state = duplicantResumeReducer(state, action);\r\n    return state;\r\n}\r\n\r\nfunction duplicantsRootReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction) {\r\n    const action = _action as DuplicantActions;\r\n    switch (action.type) {\r\n        case ACTION_DUPLICANT_RENAME: {\r\n            const {\r\n                duplicantID,\r\n                name\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            name,\r\n                            // Not sure about this.  This is used to select the duplicant biography flavor text.\r\n                            //  If the value is null, it is set to NB\r\n                            // nameStringKey: \"NB\"\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SKILL_SET_LEVEL: {\r\n            const {\r\n                duplicantID,\r\n                skillId,\r\n                level\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIAttributeLevelsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const levels = behavior.parsedData.saveLoadLevels;\r\n\r\n                    const skillIndex = levels.findIndex(x => x.attributeId === skillId);\r\n                    if (skillIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIAttributeLevelsBehavior}\" does not have skill ID ${skillId}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIAttributeLevelsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadLevels: [\r\n                                ...levels.slice(0, skillIndex),\r\n                                {\r\n                                    ...levels[skillIndex],\r\n                                    level: level\r\n                                },\r\n                                ...levels.slice(skillIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SKILL_SET_EXPERIENCE: {\r\n            const {\r\n                duplicantID,\r\n                skillId,\r\n                experience\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIAttributeLevelsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const levels = behavior.parsedData.saveLoadLevels;\r\n\r\n                    const skillIndex = levels.findIndex(x => x.attributeId === skillId);\r\n                    if (skillIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIAttributeLevelsBehavior}\" does not have skill ID ${skillId}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIAttributeLevelsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadLevels: [\r\n                                ...levels.slice(0, skillIndex),\r\n                                {\r\n                                    ...levels[skillIndex],\r\n                                    experience\r\n                                },\r\n                                ...levels.slice(skillIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_TRAITS_SET: {\r\n            const {\r\n                duplicantID,\r\n                traitIDs\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AITraitsBehavior,\r\n                (behavior, gameObjectIndex) => {\r\n                    const newBehavior: AITraitsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            TraitIds: traitIDs\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_ADD: {\r\n            const {\r\n                duplicantID,\r\n                effectID,\r\n                timeRemaining\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior, gameObjectIndex) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex !== -1) {\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects,\r\n                                {\r\n                                    id: effectID,\r\n                                    timeRemaining\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_SETTIME: {\r\n            const {\r\n                duplicantID,\r\n                effectID,\r\n                timeRemaining\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIEffectsBehavior}\" does not have effect ID ${effectID}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects.slice(0, effectIndex),\r\n                                {\r\n                                    ...effects[effectIndex],\r\n                                    timeRemaining\r\n                                },\r\n                                ...effects.slice(effectIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_REMOVE: {\r\n            const {\r\n                duplicantID,\r\n                effectID\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex === -1) {\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects.slice(0, effectIndex),\r\n                                ...effects.slice(effectIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_HEALTH_STATE_SET: {\r\n            const {\r\n                duplicantID,\r\n                healthState\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                HealthBehavior,\r\n                (behavior) => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        State: healthState\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SCALE_SET: {\r\n            const {\r\n                duplicantID,\r\n                scaleX,\r\n                scaleY\r\n            } = action.payload;\r\n\r\n            return modifyGameObject(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                (gameObject) => ({\r\n                    ...gameObject,\r\n                    scale: {\r\n                        ...gameObject.scale,\r\n                        x: scaleX || gameObject.scale.x,\r\n                        y: scaleY || gameObject.scale.y\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_GENDER_SET: {\r\n            const {\r\n                duplicantID,\r\n                gender\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            gender,\r\n                            // Update the string key, so the UI shows the appropriate value.\r\n                            genderStringKey: gender\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_VOICE_SET: {\r\n            const {\r\n                duplicantID,\r\n                voiceIdx\r\n            } = action.payload;\r\n\r\n            // TODO: Export this range from oni-save-parser\r\n            if (voiceIdx < 0 || voiceIdx > 4) {\r\n                warning(`Action \"${ACTION_DUPLICANT_VOICE_SET}\" has invalid voice id ${voiceIdx}: must be between 0 and 4.`);\r\n            }\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            voiceIdx\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport { getBehavior, KPrefabIDBehavior } from \"oni-save-parser\";\r\n\r\nimport { warning, error, FAILURE_TYPE } from \"@/logging\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState, NormalizedID } from \"../state\";\r\n\r\nimport {\r\n    SavefileActions,\r\n    ACTION_SAVEFILE_LOAD,\r\n    ACTION_SAVEFILE_RECEIVED,\r\n    ACTION_SAVEFILE_SAVE_START,\r\n    ACTION_SAVEFILE_SAVE_END\r\n} from \"./actions\";\r\n\r\nexport default function saveFileReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as SavefileActions;\r\n    switch (action.type) {\r\n        case ACTION_SAVEFILE_LOAD: {\r\n            const {\r\n                file\r\n            } = action.payload;\r\n\r\n            // Also ignored in saga.\r\n            if (state.isSaving) return state;\r\n\r\n            return {\r\n                ...defaultSaveEditorState,\r\n                fileName: file.name,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case ACTION_SAVEFILE_RECEIVED: {\r\n            const {\r\n                saveGame\r\n            } = action.payload;\r\n\r\n            // Build a normalization cache of game object PrefabIDs to the\r\n            //  type and array index of the object.\r\n            // We can save a lot of work by precaching this information,\r\n            //  and we (currently) do not create / delete / reorder any objects.\r\n            const normalizedIDs: NormalizedID[] = [];\r\n            for (let prefabType in saveGame.body.gameObjects) {\r\n                const prefabs = saveGame.body.gameObjects[prefabType];\r\n                for (let i = 0; i < prefabs.length; i++) {\r\n                    const idBehavior = getBehavior(prefabs[i], KPrefabIDBehavior);\r\n                    if (!idBehavior) {\r\n                        warning(`GameObject at \"${prefabs}\":${i} has no behavior \"${KPrefabIDBehavior}\".`, FAILURE_TYPE.MISSING_BEHAVIOR);\r\n                        continue;\r\n                    }\r\n                    if (!idBehavior.parsedData || isNaN(idBehavior.parsedData.InstanceID)) {\r\n                        error(`GameObject at \"${prefabType}\":${i} has invalid data in behavior \"${KPrefabIDBehavior}\".`, FAILURE_TYPE.SAVEFILE_CORRUPT);\r\n                        continue;\r\n                    }\r\n\r\n                    normalizedIDs[idBehavior.parsedData.InstanceID] = {\r\n                        type: prefabType,\r\n                        index: i\r\n                    };\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                saveGame: action.payload.saveGame,\r\n                normalizedIDs\r\n            };\r\n        }\r\n        case ACTION_SAVEFILE_SAVE_START:\r\n            return {\r\n                ...state,\r\n                isSaving: true\r\n            }\r\n        case ACTION_SAVEFILE_SAVE_END:\r\n            return {\r\n                ...state,\r\n                isSaving: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport { SaveEditorState, defaultSaveEditorState } from \"./state\";\r\n\r\nimport saveFileReducer from \"./savefile/reducer\";\r\nimport duplicantsReducer from \"./duplicants/reducer\";\r\n\r\n/**\r\n * Flat list of reducers to run against SaveEditorState\r\n * Reducers run in-order.\r\n * \r\n * We do not split into sub-states using combineReducers, since\r\n * these need access to all of the state at this level.\r\n * \r\n * These should be broken into sub-states when we are more normalized.\r\n */\r\nconst reducers = [\r\n    saveFileReducer,\r\n    duplicantsReducer\r\n];\r\n\r\nexport default function saveEditorReducer(state: SaveEditorState = defaultSaveEditorState, action: AnyAction): SaveEditorState {\r\n    for (let reducer of reducers) {\r\n        state = reducer(state, action);\r\n    }\r\n    return state;\r\n}\r\n","\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport saveEditorReducer from \"../services/save-editor/reducer\";\r\nimport { saveEditorStateKey } from \"../services/save-editor/state\";\r\n\r\nconst reducer = combineReducers({\r\n    [saveEditorStateKey]: saveEditorReducer\r\n});\r\n\r\nexport default reducer;\r\n","\r\nimport { applyMiddleware, createStore, Middleware } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport { AppState, defaultState } from \"./state\";\r\n\r\nimport sagaMiddleware from \"./saga\";\r\n\r\nconst middleware: Middleware[] = [\r\n    sagaMiddleware\r\n];\r\n\r\nconst store = createStore(reducer, /* preloadedState, */ applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","\r\nimport { Dispatch } from \"../../state/utils\";\r\n\r\nexport interface DispatchProps { }\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return {}\r\n}","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    loadError\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    loadError: Error | null;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    loadError\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass ErrorPageComponent extends React.Component<Props> {\r\n    render() {\r\n        let {\r\n            loadError\r\n        } = this.props;\r\n\r\n        if (!loadError) {\r\n            loadError = new Error(\"Well, this is weird... The Error page loaded, but there is no error.\");\r\n            loadError.stack = \"I really don't know what to do about this...\"\r\n        }\r\n\r\n        return (\r\n            <NonIdealState visual={IconNames.ERROR} description=\"An Error Occurred\">\r\n                <Text>{loadError.message}</Text>\r\n                <div>\r\n                    <code>{loadError.stack}</code>\r\n                </div>\r\n            </NonIdealState>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorPageComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;","module.exports = \"\\r\\n### v1.2.0\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Current Job\\r\\n    - Target Job\\r\\n    - Job Experience\\r\\n    - Job Mastery\\r\\n\\r\\n### v1.1.0\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Gender (data only; no visual effect)\\r\\n    - Voice\\r\\n    - Appearance\\r\\n- Dedicated load button (no more refreshes to edit new saves)\\r\\n\\r\\n### v1.0.0\\r\\n\\r\\nGround-up rewrite.\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Name\\r\\n    - Size (width and height)\\r\\n    - Health Status (healthy, critical, incapacitated, invulnurable, ...)\\r\\n    - Skills (level and experience)\\r\\n    - Traits\\r\\n    - Status Effects\\r\\n- New Theme\\r\\n- Non-blocking file loading and saving.  Prevents browsers from killing the process when working with large saves.\\r\\n- Internal cleanup for mantainability going forward.\"","\r\nimport * as React from \"react\";\r\nimport Markdown from \"react-markdown\";\r\n\r\nconst changelog = require(\"@/../CHANGELOG.md\");\r\n\r\nexport default class ChangelogPage extends React.Component {\r\n    render() {\r\n        return <Markdown className=\"ui-page ui-page-changelog fill-parent\" source={changelog}/>\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { getElement } from \"@/services/materials\";\r\n\r\nexport interface MaterialInspectorRouteProps {\r\n    material: string;\r\n}\r\nexport interface MaterialInspectorProps extends RouteComponentProps<MaterialInspectorRouteProps> { }\r\nexport default class MaterialInspector extends React.Component<MaterialInspectorProps> {\r\n    render() {\r\n        const elementName = this.props.match.params.material;\r\n        const element = getElement(elementName);\r\n        return (\r\n            <div>\r\n                <pre><code>{JSON.stringify(element, null, 2)}</code></pre>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\"\r\n\r\nimport { Element } from \"@/services/materials\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface RawDataTableProps<TElementType extends Element> {\r\n    className?: string;\r\n    elements: TElementType[];\r\n    fields: (keyof TElementType)[];\r\n}\r\ninterface State<TElementType extends Element> {\r\n    enabledFields: (keyof TElementType)[];\r\n}\r\nexport default class DataTable<TElementType extends Element> extends React.Component<RawDataTableProps<TElementType>, State<TElementType>> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            enabledFields: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            elements,\r\n            fields\r\n        } = this.props;\r\n        const {\r\n            enabledFields\r\n        } = this.state;\r\n        \r\n        const targetFields = enabledFields.length === 0 ? fields : enabledFields;\r\n        const headers = targetFields.map((x, i) => (\r\n            <th key={i}>{x}</th>\r\n        ));\r\n        const rows = elements.map((x, i) => (\r\n            <tr key={i}>\r\n                {targetFields.map((field, ri) => <td key={ri}>{this._renderFieldValue(field, x[field])}</td>)}\r\n            </tr>\r\n        ));\r\n\r\n        return (\r\n            <div className={`container-scroll ${className || \"\"}`}>\r\n                <table className=\"fill-parent\">\r\n                    <thead>\r\n                        <tr>\r\n                            {headers}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderFieldValue(fieldName: string, value: any): React.ReactFragment {\r\n        if (fieldName === \"name\") {\r\n            return <Link to={`/material-explorer/material/${value}`}>{value}</Link>\r\n        }\r\n        return String(value);\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { Element } from \"./interfaces\";\r\nimport { ELEMENTS } from \"./elements\";\r\n\r\nexport function getElement(str: string): Element | null {\r\n    return ELEMENTS.find(x => x.name === str) || null;\r\n}\r\n","\r\nimport * as React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { Switch } from \"react-router-dom\";\r\n\r\nimport {\r\n    SolidElement,\r\n    LiquidElement,\r\n    GasElement,\r\n    SOLIDS,\r\n    SOLID_FIELDS,\r\n    LIQUIDS,\r\n    LIQUID_FIELDS,\r\n    GASSES,\r\n    GAS_FIELDS\r\n} from \"@/services/materials\";\r\n\r\nimport DataTable from \"./components/DataTable\";\r\nimport MaterialInspector from \"./pages/MaterialInspector\";\r\n\r\nexport default class MaterialsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ui-page ui-page-materials fill-parent container-scroll\">\r\n                <Switch>\r\n                    <Redirect exact path=\"/material-explorer\" to=\"/material-explorer/solids\" />\r\n                    <Redirect exact path=\"/material-explorer/material\" to=\"/material-explorer/solids\" />\r\n                    <Route exact path=\"/material-explorer/material/:material\" component={MaterialInspector}/>\r\n                    <Route exact path=\"/material-explorer/solids\" component={SolidDataTable} />\r\n                    <Route exact path=\"/material-explorer/liquids\" component={LiquidDataTable} />\r\n                    <Route exact path=\"/material-explorer/gasses\" component={GasDataTable} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SolidDataTableComponent extends DataTable<SolidElement> {};\r\nconst SolidDataTable = () => (\r\n    <SolidDataTableComponent className=\"fill-parent\" elements={SOLIDS} fields={SOLID_FIELDS}/>\r\n);\r\n\r\nclass LiquidDataTableComponent extends DataTable<LiquidElement> {};\r\nconst LiquidDataTable = () => (\r\n    <LiquidDataTableComponent className=\"fill-parent\" elements={LIQUIDS} fields={LIQUID_FIELDS}/>\r\n);\r\n\r\nclass GasDataTableComponent extends DataTable<GasElement> {};\r\nconst GasDataTable = () => (\r\n    <GasDataTableComponent className=\"fill-parent\" elements={GASSES} fields={GAS_FIELDS}/>\r\n);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nclass DuplicantsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <NonIdealState className=\"ui-page ui-page-404\" visual={IconNames.ERROR}>\r\n                <div>\r\n                    <div className=\"ui-title\">I don't know how you got here...</div>\r\n                    <div className=\"ui-title-secondary\">But weasels were probably involved.</div>\r\n                </div>\r\n                <div className=\"ui-body\">\r\n                    <div>No idea what this page is supposed to be, sorry.</div>\r\n                    <div>Try choosing something else to edit.</div>\r\n                </div>\r\n            </NonIdealState>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DuplicantsPage","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { addDuplicantEffect, removeDuplicantEffect, setDuplicantEffectTime} from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    addEffect: typeof addDuplicantEffect;\r\n    removeEffect: typeof removeDuplicantEffect;\r\n    setEffectTime: typeof setDuplicantEffectTime;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        addEffect: addDuplicantEffect,\r\n        removeEffect: removeDuplicantEffect,\r\n        setEffectTime: setDuplicantEffectTime\r\n    }, dispatch);\r\n}","\r\nimport { EffectInstance } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\nimport { makeGetDuplicantEffects  } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    effects: EffectInstance[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    effects: makeGetDuplicantEffects(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { AI_EFFECT_IDS } from \"oni-save-parser\";\r\n\r\nimport { NumericInput, MenuItem, Button } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\n\r\n\r\nimport DuplicantEffectsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantEffectsProps & StateProps & DispatchProps;\r\nclass DuplicantEffects extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            effects\r\n        } = this.props;\r\n\r\n        const rows = effects.map(x =>\r\n            <DuplicantEffectRow\r\n                key={x.id}\r\n                id={x.id}\r\n                timeRemaining={x.timeRemaining}\r\n                onChangeTime={this._onEffectChangeTime}\r\n                onRemove={this._onEffectRemoved}\r\n            />);\r\n\r\n        return (\r\n            <div className={`ui-duplicant-effects fill-parent layout-vertical`}>\r\n                <div className=\"container-scroll layout-item-fill\">\r\n                    <table className=\"pt-html-table pt-html-table-striped fill-parent-width\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Effect</th>\r\n                                <th>Time Remaining (ms)</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <StringSelect\r\n                        items={AI_EFFECT_IDS}\r\n                        itemPredicate={this._filterItem}\r\n                        itemRenderer={this._renderItem}\r\n                        onItemSelect={this._onEffectSelected}\r\n                        filterable={true}\r\n                        resetOnClose={true}\r\n                        resetOnSelect={true}\r\n                        popoverProps={{ minimal: true }}\r\n                    >\r\n                        <Button rightIcon=\"caret-down\" text=\"Add a new Effect\" />\r\n                    </StringSelect>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private _filterItem(query: string, item: string) {\r\n        return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onEffectSelected(effectID: string) {\r\n        const {\r\n            duplicantID,\r\n            addEffect\r\n        } = this.props;\r\n        addEffect({ duplicantID, effectID, timeRemaining: 5000 });\r\n    }\r\n\r\n    @autobind()\r\n    private _onEffectChangeTime(effectID: string, timeRemaining: number) {\r\n        const {\r\n            duplicantID,\r\n            setEffectTime\r\n        } = this.props;\r\n        setEffectTime({ duplicantID, effectID, timeRemaining });\r\n    }\r\n\r\n    @autobind()\r\n    private _onEffectRemoved(effectID: string) {\r\n        const {\r\n            duplicantID,\r\n            removeEffect\r\n        } = this.props;\r\n        removeEffect({ duplicantID, effectID });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantEffects);\r\n\r\n\r\ninterface DuplicantEffectRowProps {\r\n    id: string;\r\n    timeRemaining: number;\r\n    onChangeTime(id: string, timeRemaining: number): void;\r\n    onRemove(id: string): void;\r\n}\r\n\r\nclass DuplicantEffectRow extends React.Component<DuplicantEffectRowProps> {\r\n    constructor(props: DuplicantEffectRowProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            id,\r\n            timeRemaining\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td>\r\n                    <NumericInput\r\n                        value={timeRemaining}\r\n                        clampValueOnBlur={true}\r\n                        min={0}\r\n                        onValueChange={this._onTimeRemainingChange}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <Button icon={IconNames.SMALL_CROSS} onClick={this._onRemove} />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onTimeRemainingChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeTime\r\n        } = this.props;\r\n\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n\r\n        onChangeTime(id, value);\r\n    }\r\n\r\n    @autobind()\r\n    private _onRemove() {\r\n        const {\r\n            id,\r\n            onRemove\r\n        } = this.props;\r\n        onRemove(id);\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantCurrentRole,\r\n    setDuplicantTargetRole,\r\n    setDuplicantRoleMastery,\r\n    setDuplicantRoleExperience\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/resume/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setCurrentRole: typeof setDuplicantCurrentRole,\r\n    setTargetRole: typeof setDuplicantTargetRole,\r\n    setMastery: typeof setDuplicantRoleMastery;\r\n    setExperience: typeof setDuplicantRoleExperience;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setCurrentRole: setDuplicantCurrentRole,\r\n        setTargetRole: setDuplicantTargetRole,\r\n        setMastery: setDuplicantRoleMastery,\r\n        setExperience: setDuplicantRoleExperience\r\n    }, dispatch);\r\n}\r\n","import { ParametricSelector, createSelector } from \"reselect\";\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { makeGetBehaviorByName } from \"../../selectors\";\r\nimport { DuplicantByIDSelector, makeGetDuplicantByID } from \"../selectors\";\r\n\r\nexport interface JobStatus {\r\n    name: string;\r\n    mastery: boolean;\r\n    experience: number;\r\n}\r\n\r\nexport function makeGetDuplicantCurrentRole<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => resumeBehavior ? resumeBehavior.parsedData.currentRole : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantTargetRole<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => resumeBehavior ? resumeBehavior.parsedData.targetRole : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantRoleDetails<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, JobStatus[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => {\r\n            if (!resumeBehavior) return [];\r\n            const {\r\n                ExperienceByRoleID,\r\n                MasteryByRoleID\r\n            } = resumeBehavior.parsedData;\r\n            const statusByKey: {[key: string]: JobStatus} = {};\r\n            for (let [key, value] of ExperienceByRoleID.entries()) {\r\n                statusByKey[key] = {\r\n                    name: key,\r\n                    experience: value,\r\n                    mastery: false\r\n                };\r\n            }\r\n            for (let [key, value] of MasteryByRoleID.entries()) {\r\n                statusByKey[key] = {\r\n                    name: key,\r\n                    experience: 0,\r\n                    ...(statusByKey[key] || {}),\r\n                    mastery: value\r\n                };\r\n            }\r\n            return Object.keys(statusByKey).map(x => statusByKey[x]);\r\n        }\r\n    );\r\n}\r\n","\r\nimport { createStructuredSelector } from \"../../../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    makeGetDuplicantByID,\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/selectors\";\r\nimport {\r\n    JobStatus,\r\n    makeGetDuplicantCurrentRole,\r\n    makeGetDuplicantTargetRole,\r\n    makeGetDuplicantRoleDetails\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/resume/selectors\";\r\n\r\nimport Props from \"./props\";\r\nimport { Vector3 } from \"oni-save-parser/dts/interfaces\";\r\n\r\nexport interface StateProps {\r\n    currentRole: string | null;\r\n    targetRole: string | null;\r\n    roles: JobStatus[];\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        currentRole: makeGetDuplicantCurrentRole(dupSelector),\r\n        targetRole: makeGetDuplicantTargetRole(dupSelector),\r\n        roles: makeGetDuplicantRoleDetails(dupSelector),\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NumericInput, Button, MenuItem } from \"@blueprintjs/core\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\n\r\nimport DuplicantJobsPageProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantJobsPageProps & StateProps & DispatchProps;\r\nclass DuplicantJobsPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            currentRole,\r\n            targetRole,\r\n            roles\r\n        } = this.props;\r\n\r\n        // Might want to make a constant for this, but this is better for future compatibility.\r\n        const knownRoles = Array.from(new Set(roles.map(x => x.name)));\r\n\r\n        const rows = roles.map(x => (\r\n            <JobRow key={x.name} jobID={x.name} mastery={x.mastery} experience={x.experience} setMastery={this._setMastery} setExperience={this._setExperience} />\r\n        ));\r\n\r\n        return (\r\n            <div className={`ui-duplicant-jobs fill-parent container-scroll`}>\r\n                <div className=\"layout-vertical\">\r\n                    <div className=\"layout-horizontal\">\r\n                        <div className=\"ui-current-role pt-form-group pt-inline\">\r\n                            <label className=\"pt-label\">\r\n                                Current Role\r\n                            </label>\r\n                            <div className=\"pt-form-content\">\r\n                                <StringSelect\r\n                                    items={knownRoles}\r\n                                    itemPredicate={this._filterItem}\r\n                                    itemRenderer={this._renderItem}\r\n                                    onItemSelect={this._onCurrentRoleSelected}\r\n                                    filterable={true}\r\n                                    resetOnClose={true}\r\n                                    resetOnSelect={true}\r\n                                    popoverProps={{ minimal: true }}\r\n                                >\r\n                                    <Button rightIcon=\"caret-down\" text={currentRole || \"[Unknown]\"} />\r\n                                </StringSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ui-target-role pt-form-group pt-inline\">\r\n                            <label className=\"pt-label\">\r\n                                Target Role\r\n                            </label>\r\n                            <div className=\"pt-form-content\">\r\n                                <StringSelect\r\n                                    items={knownRoles}\r\n                                    itemPredicate={this._filterItem}\r\n                                    itemRenderer={this._renderItem}\r\n                                    onItemSelect={this._onTargetRoleSelected}\r\n                                    filterable={true}\r\n                                    resetOnClose={true}\r\n                                    resetOnSelect={true}\r\n                                    popoverProps={{ minimal: true }}\r\n                                >\r\n                                    <Button rightIcon=\"caret-down\" text={targetRole || \"[Unknown]\"} />\r\n                                </StringSelect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"pt-html-table pt-html-table-striped fill-parent-width layout-item\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Job Name</th>\r\n                                <th>Mastery</th>\r\n                                <th>Experience</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _filterItem(query: string, item: string) {\r\n        return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onCurrentRoleSelected(roleID: string) {\r\n        const {\r\n            duplicantID,\r\n            setCurrentRole\r\n        } = this.props;\r\n        setCurrentRole({ duplicantID, roleID });\r\n    }\r\n\r\n    @autobind()\r\n    private _onTargetRoleSelected(roleID: string) {\r\n        const {\r\n            duplicantID,\r\n            setTargetRole\r\n        } = this.props;\r\n        setTargetRole({ duplicantID, roleID });\r\n    }\r\n\r\n    @autobind()\r\n    private _setMastery(roleID: string, mastery: boolean) {\r\n        const {\r\n            duplicantID,\r\n            setMastery\r\n        } = this.props;\r\n        setMastery({ duplicantID, roleID, mastery });\r\n    }\r\n\r\n    @autobind()\r\n    private _setExperience(roleID: string, experience: number) {\r\n        const {\r\n            duplicantID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience({ duplicantID, roleID, experience });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantJobsPage);\r\n\r\n\r\ninterface JobRowProps {\r\n    jobID: string;\r\n    mastery: boolean;\r\n    experience: number;\r\n    setMastery(jobID: string, mastery: boolean): void;\r\n    setExperience(jobID: string, experience: number): void;\r\n}\r\nclass JobRow extends React.Component<JobRowProps> {\r\n    render() {\r\n        const {\r\n            jobID,\r\n            mastery,\r\n            experience\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{jobID}</td>\r\n                <td>\r\n                    <label className=\"pt-control pt-checkbox\">\r\n                        <input type=\"checkbox\" checked={mastery} onChange={this._onSetMastery} />\r\n                        <span className=\"pt-control-indicator\"></span>\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <NumericInput\r\n                        value={experience}\r\n                        clampValueOnBlur={true}\r\n                        min={0}\r\n                        onValueChange={this._onSetExperience}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    _onSetMastery(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const checked = change.target.checked;\r\n        const {\r\n            jobID,\r\n            setMastery\r\n        } = this.props;\r\n        setMastery(jobID, checked);\r\n    }\r\n\r\n    @autobind()\r\n    private _onSetExperience(value: number) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n\r\n        const {\r\n            jobID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience(jobID, value);\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    Tabs,\r\n    Tab\r\n} from \"@blueprintjs/core\";\r\n\r\n\r\nimport DuplicantRolesPageProps from \"./props\";\r\n\r\n\r\nimport RolesPage from \"./pages/Roles\";\r\n\r\ntype Props = DuplicantRolesPageProps;\r\nclass DuplicantRolesPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            duplicantID\r\n        } = this.props;\r\n        return (\r\n            <div className=\"ui-duplicant-roles fill-parent\">\r\n                <Tabs className=\"fill-parent layout-horizontal\" vertical={true} renderActiveTabPanelOnly={true} id=\"DuplicantRolePages\">\r\n                    <Tab className=\"layout-item-fill\" id=\"roles\" title=\"Roles\" panel={<RolesPage duplicantID={duplicantID} />} />\r\n                    <Tab id=\"aptitudes\" title=\"Aptitudes\" disabled/>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DuplicantRolesPage;","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\n// TODO: move to oni-save-parser\r\nconst TRAITS: string[] = [\r\n    \"None\",\r\n    \"Stinky\",\r\n    \"Ellie\",\r\n    \"Joshua\",\r\n    \"Liam\",\r\n    \"CantResearch\",\r\n    \"CantBuild\",\r\n    \"CantCook\",\r\n    \"CantDig\",\r\n    \"Hemophobia\",\r\n    \"MedicalAid\",\r\n    \"ScaredyCat\",\r\n    \"MouthBreather\",\r\n    \"CalorieBurner\",\r\n    \"SmallBladder\",\r\n    \"Anemic\",\r\n    \"SlowLearner\",\r\n    \"NoodleArms\",\r\n    \"InteriorDecorator\",\r\n    \"Regeneration\",\r\n    \"DeeperDiversLungs\",\r\n    \"SunnyDisposition\",\r\n    \"RockCrusher\",\r\n    \"Uncultured\",\r\n    \"WeakImmuneSystem\",\r\n    \"IrritableBowel\",\r\n    \"Flatulence\",\r\n    \"Snorer\",\r\n    \"Narcolepsy\",\r\n    \"Twinkletoes\",\r\n    \"Greasemonkey\",\r\n    \"MoleHands\",\r\n    \"FastLearner\",\r\n    \"DiversLung\",\r\n    \"StrongArm\",\r\n    \"IronGut\",\r\n    \"StrongImmuneSystem\",\r\n    \"BedsideManner\",\r\n    \"Caring\",\r\n    \"Aggressive\",\r\n    \"UglyCrier\",\r\n    \"BingeEater\",\r\n    \"StressVomiter\",\r\n    \"EarlyBird\",\r\n    \"NightOwl\",\r\n    \"Claustrophobic\",\r\n    \"PrefersWarmer\",\r\n    \"PrefersColder\",\r\n    \"SensitiveFeet\",\r\n    \"Fashionable\",\r\n    \"Climacophobic\",\r\n    \"SolitarySleeper\",\r\n    \"Workaholic\"\r\n];\r\nexport default TRAITS;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { setDuplicantTraits } from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setTraits: typeof setDuplicantTraits\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setTraits: setDuplicantTraits\r\n    }, dispatch);\r\n}","\r\nimport { createStructuredSelector } from \"../../../../../../../../state/utils\";\r\n\r\nimport { makeGetDuplicantTraits } from \"../../../../../../../../services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    traits: string[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    traits: makeGetDuplicantTraits<Props>(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { MenuItem, Intent } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { MultiSelect, ItemRenderer, IItemRendererProps } from \"@blueprintjs/select\";\r\n\r\nimport DuplicantTraitsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\nimport TRAITS from \"./traits\";\r\n\r\n\r\nconst TraitMultiSelect = MultiSelect.ofType<string>();\r\n\r\ntype Props = DuplicantTraitsProps & StateProps & DispatchProps;\r\nclass DuplicantTraits extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            traits\r\n        } = this.props;\r\n\r\n\r\n        return (\r\n            <div className={`fill-parent ui-duplicant-traits`}>\r\n                <TraitMultiSelect\r\n                    className=\"fill-parent-width\"\r\n                    items={TRAITS}\r\n                    selectedItems={traits}\r\n                    onItemSelect={this._onTagSelected}\r\n                    itemPredicate={this._filterItem}\r\n                    itemRenderer={this._renderItem}\r\n                    tagRenderer={tag => tag}\r\n                    tagInputProps={{ onRemove: this._onTagRemoved }}\r\n                    noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                    popoverProps={{ minimal: true }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    @autobind()\r\n    private _onTagSelected(tag: string) {\r\n        const {\r\n            duplicantID,\r\n            traits,\r\n            setTraits\r\n        } = this.props;\r\n\r\n        if (traits.indexOf(tag) !== -1) {\r\n            return;\r\n        }\r\n\r\n        setTraits({ duplicantID, traitIDs: traits.concat(tag) });\r\n    }\r\n\r\n    @autobind()\r\n    private _onTagRemoved(tag: string) {\r\n        const {\r\n            duplicantID,\r\n            traits,\r\n            setTraits\r\n        } = this.props;\r\n\r\n        const index = traits.indexOf(tag);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        const newTraits = traits.slice();\r\n        newTraits.splice(index, 1);\r\n\r\n        setTraits({ duplicantID, traitIDs: newTraits });\r\n    }\r\n\r\n    private _filterItem(query: string, trait: string) {\r\n        return trait.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(trait: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        const {\r\n            traits\r\n        } = this.props;\r\n\r\n        const isSelected = traits.indexOf(trait) !== -1;\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                icon={isSelected ? IconNames.TICK : IconNames.BLANK}\r\n                key={trait}\r\n                onClick={handleClick}\r\n                text={trait}\r\n                shouldDismissPopover={false}\r\n            />\r\n        );\r\n    };\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantTraits);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { setDuplicantSkillLevel, setDuplicantSkillExperience } from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setLevel: typeof setDuplicantSkillLevel;\r\n    setExperience: typeof setDuplicantSkillExperience;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setLevel: setDuplicantSkillLevel,\r\n        setExperience: setDuplicantSkillExperience\r\n    }, dispatch);\r\n}\r\n","\r\nimport { AttributeLevel } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\nimport { makeGetDuplicantSkills } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    skills: AttributeLevel[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    skills: makeGetDuplicantSkills<Props>(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { NumericInput } from \"@blueprintjs/core\";\r\n\r\nimport DuplicantSkillsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantSkillsProps & StateProps & DispatchProps;\r\nclass DuplicantSkills extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            skills\r\n        } = this.props;\r\n\r\n        const rows = skills.map(x => \r\n            <DuplicantSkillRow\r\n                key={x.attributeId}\r\n                id={x.attributeId}\r\n                level={x.level}\r\n                experience={x.experience}\r\n                onChangeLevel={this._onChangeLevel}\r\n                onChangeExperience={this._onChangeExperience}\r\n        />);\r\n\r\n        return (\r\n            <div className={`ui-duplicant-skills fill-parent container-scroll`}>\r\n                <table className=\"pt-html-table pt-html-table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Skill</th>\r\n                            <th>Level</th>\r\n                            <th>Experience</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    @autobind()\r\n    private _onChangeLevel(id: string, level: number) {\r\n        const {\r\n            duplicantID,\r\n            setLevel\r\n        } = this.props;\r\n        setLevel({duplicantID: duplicantID, skillId: id, level});\r\n    }\r\n\r\n    @autobind()\r\n    private _onChangeExperience(id: string, experience: number) {\r\n        const {\r\n            duplicantID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience({duplicantID: duplicantID, skillId: id, experience});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantSkills);\r\n\r\n\r\ninterface DuplicantSkillRowProps {\r\n    id: string;\r\n    level: number;\r\n    experience: number;\r\n    onChangeLevel(id: string, level: number): void;\r\n    onChangeExperience(id: string, level: number): void;\r\n}\r\n\r\nclass DuplicantSkillRow extends React.Component<DuplicantSkillRowProps> {\r\n    render() {\r\n        const {\r\n            id,\r\n            level,\r\n            experience\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td><NumericInput\r\n                    value={level}\r\n                    clampValueOnBlur={true}\r\n                    min={0}\r\n                    onValueChange={this._onLevelChange}\r\n                /></td>\r\n                <td><NumericInput\r\n                    value={experience}\r\n                    clampValueOnBlur={true}\r\n                    min={0}\r\n                    onValueChange={this._onExperienceChange}\r\n                /></td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onLevelChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeLevel\r\n        } = this.props;\r\n\r\n        value = Math.round(value);\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n        \r\n        onChangeLevel(id, value);\r\n    }\r\n\r\n    @autobind()\r\n    private _onExperienceChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeExperience\r\n        } = this.props;\r\n\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n\r\n        onChangeExperience(id, value);\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantEyes,\r\n    setDuplicantHair,\r\n    setDuplicantHead,\r\n    setDuplicantMouth,\r\n    setDuplicantBody\r\n} from \"../../../../../../../../services/save-editor/duplicants/appearance/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setEyes: typeof setDuplicantEyes;\r\n    setHair: typeof setDuplicantHair;\r\n    setHead: typeof setDuplicantHead;\r\n    setMouth: typeof setDuplicantMouth;\r\n    setBody: typeof setDuplicantBody;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setEyes: setDuplicantEyes,\r\n        setHair: setDuplicantHair,\r\n        setHead: setDuplicantHead,\r\n        setMouth: setDuplicantMouth,\r\n        setBody: setDuplicantBody,\r\n    }, dispatch);\r\n}\r\n","import { ParametricSelector, createSelector } from \"reselect\";\r\nimport { AccessorizerBehavior, getAccessoryOfType } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { makeGetBehaviorByName } from \"../../selectors\";\r\nimport { DuplicantByIDSelector, makeGetDuplicantByID } from \"../selectors\";\r\n\r\nexport const makeGetDuplicantEyes = makeGetDuplicantAppearanceMaker(\"eyes\");\r\nexport const makeGetDuplicantHair = makeGetDuplicantAppearanceMaker(\"hair\");\r\nexport const makeGetDuplicantHead = makeGetDuplicantAppearanceMaker(\"headshape\");\r\nexport const makeGetDuplicantMouth = makeGetDuplicantAppearanceMaker(\"mouth\");\r\nexport const makeGetDuplicantBody = makeGetDuplicantAppearanceMaker(\"body\");\r\n\r\nfunction makeGetDuplicantAppearanceMaker(type: string) {\r\n    return function<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n        let selector: DuplicantByIDSelector<Props>;\r\n        if (typeof source === \"function\") {\r\n            selector = source;\r\n        }\r\n        else {\r\n            selector = makeGetDuplicantByID<Props>(source);\r\n        }\r\n    \r\n        return createSelector(\r\n            makeGetBehaviorByName(selector, AccessorizerBehavior),\r\n            accessorizerBehavior => {\r\n                if(!accessorizerBehavior) return null;\r\n                const accessory = getAccessoryOfType(accessorizerBehavior.parsedData.accessories, type);\r\n                if (!accessory) return null;\r\n                return accessory.guid.Guid;\r\n            }\r\n        );\r\n    }\r\n}","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\nimport {\r\n    makeGetDuplicantEyes,\r\n    makeGetDuplicantHair,\r\n    makeGetDuplicantHead,\r\n    makeGetDuplicantMouth,\r\n    makeGetDuplicantBody\r\n} from \"@/services/save-editor/duplicants/appearance/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    eyes: string | null;\r\n    hair: string | null;\r\n    head: string | null;\r\n    mouth: string | null;\r\n    body: string | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        eyes: makeGetDuplicantEyes(dupSelector),\r\n        hair: makeGetDuplicantHair(dupSelector),\r\n        head: makeGetDuplicantHead(dupSelector),\r\n        mouth: makeGetDuplicantMouth(dupSelector),\r\n        body: makeGetDuplicantBody(dupSelector)\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { Button, MenuItem } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\nimport { \r\n    ACCESSORIZER_EYE_GUIDS,\r\n    ACCESSORIZER_HAIR_GUIDS,\r\n    ACCESSORIZER_HEAD_GUIDS,\r\n    ACCESSORIZER_MOUTH_GUIDS,\r\n    ACCESSORIZER_BODY_GUIDS\r\n} from \"oni-save-parser\";\r\n\r\n\r\nimport DuplicantAccessoryPageProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantAccessoryPageProps & StateProps & DispatchProps;\r\nclass DuplicantAccessoryPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            duplicantID,\r\n            eyes,\r\n            setEyes,\r\n\r\n            hair,\r\n            setHair,\r\n\r\n            head,\r\n            setHead,\r\n            \r\n            mouth,\r\n            setMouth,\r\n\r\n            body,\r\n            setBody,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={`ui-duplicant-accessories fill-parent layout-vertical container-scroll`}>\r\n                <AppearanceGroup name=\"Eyes\" duplicantID={duplicantID} value={eyes} accessories={ACCESSORIZER_EYE_GUIDS} onSet={setEyes}/>\r\n                <AppearanceGroup name=\"Head\" duplicantID={duplicantID} value={head} accessories={ACCESSORIZER_HEAD_GUIDS} onSet={setHead}/>\r\n                <AppearanceGroup name=\"Hair\" duplicantID={duplicantID} value={hair} accessories={ACCESSORIZER_HAIR_GUIDS} onSet={setHair}/>\r\n                <AppearanceGroup name=\"Mouth\" duplicantID={duplicantID} value={mouth} accessories={ACCESSORIZER_MOUTH_GUIDS} onSet={setMouth}/>\r\n                <AppearanceGroup name=\"Body\" duplicantID={duplicantID} value={body} accessories={ACCESSORIZER_BODY_GUIDS} onSet={setBody}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantAccessoryPage);\r\n\r\n\r\ninterface AppearanceGroupProps {\r\n    duplicantID: number;\r\n    name: string;\r\n    accessories: string[];\r\n    value: string | null;\r\n    onSet({duplicantID, accessoryID}: {duplicantID: number, accessoryID: string}): void\r\n}\r\nclass AppearanceGroup extends React.Component<AppearanceGroupProps> {\r\n    render() {\r\n        const {\r\n            name,\r\n            accessories,\r\n            value\r\n        } = this.props;\r\n        return (\r\n            <div className=\"pt-form-group pt-inline\">\r\n            <label className=\"pt-label\">\r\n                {name}\r\n            </label>\r\n            <div className=\"pt-form-content\">\r\n                <StringSelect\r\n                    items={accessories}\r\n                    itemRenderer={this._renderItem}\r\n                    onItemSelect={this._onSet}\r\n                    filterable={false}\r\n                    resetOnClose={true}\r\n                    resetOnSelect={true}\r\n                    popoverProps={{ minimal: true }}\r\n                >\r\n                    <Button rightIcon=\"caret-down\" text={value || \"[Accessory not Found]\"} />\r\n                </StringSelect>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(accessoryID: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={accessoryID}\r\n                onClick={handleClick}\r\n                text={accessoryID}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onSet(accessoryID: string) {\r\n        const {\r\n            duplicantID,\r\n            onSet\r\n        } = this.props;\r\n        onSet({duplicantID, accessoryID});\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantGender,\r\n    setDuplicantVoice,\r\n    setDuplicantScale,\r\n    setDuplicantHealthState,\r\n} from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setGender: typeof setDuplicantGender;\r\n    setVoice: typeof setDuplicantVoice;\r\n    setScale: typeof setDuplicantScale;\r\n    setHealthState: typeof setDuplicantHealthState;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setGender: setDuplicantGender,\r\n        setVoice: setDuplicantVoice,\r\n        setScale: setDuplicantScale,\r\n        setHealthState: setDuplicantHealthState\r\n    }, dispatch);\r\n}\r\n","\r\nimport { MinionGender, Vector3, AttributeLevel } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport {\r\n    makeGetDuplicantByID,\r\n    makeGetDuplicantGender,\r\n    makeGetDuplicantVoice,\r\n    makeGetDuplicantScale,\r\n    makeGetDuplicantHealthState\r\n} from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    gender: MinionGender | null;\r\n    voiceIdx: number | null;\r\n    scale: Vector3 | null;\r\n    healthState: number | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        gender: makeGetDuplicantGender(dupSelector),\r\n        voiceIdx: makeGetDuplicantVoice(dupSelector),\r\n        scale: makeGetDuplicantScale(dupSelector),\r\n        healthState: makeGetDuplicantHealthState(dupSelector)\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { HEALTH_STATE_NAMES, MINION_IDENTITY_GENDERS, MinionGender } from \"oni-save-parser\";\r\n\r\nimport { Button, MenuItem, NumericInput } from \"@blueprintjs/core\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\nconst NumberSelect = Select.ofType<number>();\r\n\r\n\r\nimport DuplicantGeneralProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\n// We only care about > 0\r\nconst MIN_SCALE = Number.EPSILON;\r\n\r\ntype Props = DuplicantGeneralProps & StateProps & DispatchProps;\r\nclass DuplicantGeneralPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            gender,\r\n            scale,\r\n            healthState,\r\n            voiceIdx\r\n        } = this.props;\r\n\r\n        const scaleX = scale ? scale.x : 1;\r\n        const scaleY = scale ? scale.y : 1;\r\n\r\n        let healthStateStr: string;\r\n        if (healthState != null && healthState >= 0 && healthState < HEALTH_STATE_NAMES.length) {\r\n            healthStateStr = HEALTH_STATE_NAMES[healthState];\r\n        }\r\n        else {\r\n            healthStateStr = `<Unknown Health State ${healthState}>`;\r\n        }\r\n\r\n        return (\r\n            <div className=\"fill-parent\">\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Gender\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <StringSelect\r\n                            // TODO: Export from oni-save-parser\r\n                            items={MINION_IDENTITY_GENDERS}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onGenderSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={gender || \"MALE\"} />\r\n                        </StringSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Voice\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <NumberSelect\r\n                            // TODO: get from oni-save-parser\r\n                            items={[0, 1, 2, 3, 4]}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onVoiceSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={`Voice ${voiceIdx || 0}`} />\r\n                        </NumberSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Scale\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Horizontal</span>\r\n                            <NumericInput min={MIN_SCALE} clampValueOnBlur={true} value={scaleX} onValueChange={this._onScaleX} />\r\n                        </div>\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Vertical</span>\r\n                            <NumericInput min={MIN_SCALE} clampValueOnBlur={true} value={scaleY} onValueChange={this._onScaleY} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Health State\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <StringSelect\r\n                            items={HEALTH_STATE_NAMES}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onHealthStateSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={healthStateStr} />\r\n                        </StringSelect>\r\n                        <div className=\"pt-form-helper-text\">The duplicant's current overall health condition.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string | number, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onHealthStateSelected(healthState: string) {\r\n        const {\r\n            duplicantID,\r\n            setHealthState\r\n        } = this.props;\r\n\r\n        // Need to get the enum value of the display text.\r\n        const stateIndex = HEALTH_STATE_NAMES.indexOf(healthState);\r\n        if (stateIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        setHealthState({ duplicantID, healthState: stateIndex });\r\n    }\r\n\r\n    @autobind()\r\n    private _onGenderSelected(gender: string) {\r\n        const {\r\n            duplicantID,\r\n            setGender\r\n        } = this.props;\r\n        setGender({duplicantID, gender: gender as MinionGender});\r\n    }\r\n\r\n    @autobind()\r\n    private _onVoiceSelected(voiceIdx: number) {\r\n        const {\r\n            duplicantID,\r\n            setVoice\r\n        } = this.props;\r\n        setVoice({duplicantID, voiceIdx});\r\n    }\r\n\r\n    @autobind()\r\n    private _onScaleX(value: number) {\r\n        const {\r\n            duplicantID,\r\n            setScale\r\n        } = this.props;\r\n\r\n        // Negative numbers dont render; probably because sprite normal faces\r\n        //  away from game camera.\r\n        if (value === 0 || isNaN(value)) {\r\n            value = 1;\r\n        }\r\n\r\n        setScale({ duplicantID, scaleX: value });\r\n    }\r\n\r\n    @autobind()\r\n    private _onScaleY(value: number) {\r\n        const {\r\n            duplicantID,\r\n            setScale\r\n        } = this.props;\r\n\r\n        // Negative numbers dont render; probably because sprite normal faces\r\n        //  away from game camera.\r\n        if (value <= 0 || isNaN(value)) {\r\n            value = 1;\r\n        }\r\n\r\n        setScale({ duplicantID, scaleY: value });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantGeneralPage);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../state/utils\";\r\n\r\nimport { renameDuplicant } from \"../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    renameDuplicant: typeof renameDuplicant;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        renameDuplicant\r\n    }, dispatch);\r\n}","\r\nimport { MinionIdentityBehavior } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetBehaviorByName } from \"@/services/save-editor/selectors\";\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    identityBehavior: MinionIdentityBehavior | null;\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    identityBehavior: makeGetBehaviorByName(makeGetDuplicantByID<Props>(\"duplicantID\"), MinionIdentityBehavior)\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n    EditableText,\r\n    Tabs,\r\n    Tab,\r\n    NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport { error, FAILURE_TYPE } from \"../../../../../../logging\";\r\n\r\n\r\nimport DuplicantEditorProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\nimport GeneralPage from \"./pages/General\";\r\nimport AppearancePage from \"./pages/Appearance\";\r\nimport SkillsPage from \"./pages/Skills\";\r\nimport TraitsPage from \"./pages/Traits\";\r\nimport JobsPage from \"./pages/Jobs\";\r\nimport EffectsPage from \"./pages/Effects\";\r\n\r\n\r\ntype Props = DuplicantEditorProps & StateProps & DispatchProps;\r\ninterface State {\r\n    rename: string | null;\r\n}\r\nclass DuplicantEditor extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rename: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            duplicantID,\r\n            identityBehavior\r\n        } = this.props;\r\n\r\n        const {\r\n            rename\r\n        } = this.state;\r\n\r\n        if (!identityBehavior) {\r\n            error(\"Duplicant identity behavior missing\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            return (\r\n                <NonIdealState visual={IconNames.ERROR}>\r\n                    Duplicant has no identity behavior.\r\n                </NonIdealState>\r\n            )\r\n        }\r\n        \r\n        const name = rename || identityBehavior.parsedData.name;\r\n        \r\n        return (\r\n            <div className={`ui-duplicant-editor layout-vertical ${className}`}>\r\n                <div className=\"layout-item\">\r\n                    <h1 className=\"ui-title\">\r\n                        <EditableText\r\n                            value={name}\r\n                            onChange={this._onNameChange}\r\n                            onConfirm={this._onRename}\r\n                        />\r\n                    </h1> <span className=\"pt-text-muted\">(click to edit name)</span>\r\n                </div>\r\n                <div className=\"layout-item-fill\">\r\n                    <Tabs id=\"DuplicantEditCategories\" className=\"ui-category-tabs fill-parent layout-vertical\" renderActiveTabPanelOnly={true}>\r\n                        <Tab className=\"layout-item-fill\" id=\"general\" title=\"General\" panel={<GeneralPage duplicantID={duplicantID} />} />\r\n                        <Tab className=\"layout-item-fill\" id=\"appearance\" title=\"Appearance\" panel={<AppearancePage duplicantID={duplicantID} />} />\r\n                        <Tab className=\"layout-item-fill\" id=\"skills\" title=\"Skills\" panel={<SkillsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"traits\" title=\"Traits\" panel={<TraitsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"jobs\" title=\"Jobs\" panel={<JobsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"effects\" title=\"Effects\" panel={<EffectsPage duplicantID={duplicantID}/>} />\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onNameChange(str: string) {\r\n        this.setState(s => ({\r\n            ...s,\r\n            rename: str\r\n        }));\r\n    }\r\n\r\n    @autobind()\r\n    private _onRename() {\r\n        const name = this.state.rename;\r\n        if (!name) return;\r\n        this.props.renameDuplicant({duplicantID: this.props.duplicantID, name});\r\n        this.setState(s => ({\r\n            ...s,\r\n            rename: null\r\n        }));\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantEditor);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"../../../../../../state/utils\";\r\n\r\nimport { duplicantsIDs } from \"../../../../../../services/save-editor/duplicants/selectors\";\r\n\r\nexport interface StateProps {\r\n    duplicantsIDs: number[];\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    duplicantsIDs\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport { createSelector } from \"reselect\";\r\nimport { MinionIdentityBehavior, MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetBehaviorByName } from \"@/services/save-editor/selectors\";\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    identityBehavior: MinionIdentityBehavior | null;\r\n    resumeBehavior: MinionResumeBehavior | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const duplicant = makeGetDuplicantByID<Props>(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        identityBehavior: makeGetBehaviorByName(duplicant, MinionIdentityBehavior),\r\n        resumeBehavior: makeGetBehaviorByName(duplicant, MinionResumeBehavior)\r\n    })\r\n};\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { Card } from \"@blueprintjs/core\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { error, FAILURE_TYPE } from \"../../../../../../logging\";\r\n\r\n\r\n\r\nimport DuplicantPortraitProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\ntype Props = DuplicantPortraitProps & StateProps;\r\nclass DuplicantPortrait extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            className,\r\n            identityBehavior,\r\n            resumeBehavior\r\n        } = this.props;\r\n\r\n        let outerClassName = `ui-duplicant-portrait ${className}`;\r\n\r\n        let name: string;\r\n        let role: string;\r\n\r\n        if (identityBehavior) {\r\n            name = identityBehavior.parsedData.name;\r\n        }\r\n        else {\r\n            error(\"Duplicant not found or identity behavior missing.\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            name = \"[IDENTITY MISSING]\";\r\n        }\r\n\r\n        if (resumeBehavior) {\r\n            role = resumeBehavior.parsedData.currentRole\r\n        }\r\n        else {\r\n            error(\"resume behavior missing.\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            role = \"[RESUME MISSING]\";\r\n        }\r\n\r\n        return (\r\n            <Card className={outerClassName} interactive={true} onClick={this._onClick}>\r\n                <h5 className=\"ui-duplicant-name\">{name}</h5>\r\n                {/* TODO render a picture.  Plenty of data in identity to do so.  Also see Accessorizer */}\r\n                <div className=\"ui-duplicant-role\">{role}</div>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onClick() {\r\n        const {\r\n            duplicantID,\r\n            onClick\r\n        } = this.props;\r\n        if (onClick) onClick(duplicantID);\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantPortrait);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport DuplicantPortrait from \"../DuplicantPortrait\";\r\n\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\nexport interface DuplicantsListProps {\r\n    className?: string;\r\n    selectedDuplicantID?: number | null;\r\n    onDuplicantClick?(duplicantID: number): void;\r\n}\r\n\r\ntype Props = DuplicantsListProps & StateProps;\r\nclass DuplicantsList extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            className,\r\n            duplicantsIDs,\r\n            selectedDuplicantID\r\n        } = this.props;\r\n\r\n        const elements = duplicantsIDs.map(x => <DuplicantPortrait key={x} className={x === selectedDuplicantID ? \"pt-active\" : \"\"} duplicantID={x} onClick={this._onDuplicantClick} />);\r\n\r\n        return (\r\n            <div className={`${className || ''} ui-duplicant-list`}>\r\n                <div className={`fill-parent layout-horizontal layout-wrap container-scroll`}>\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onDuplicantClick(duplicantID: number) {\r\n        const {\r\n            onDuplicantClick\r\n        } = this.props;\r\n\r\n        if (onDuplicantClick) {\r\n            onDuplicantClick(duplicantID);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantsList);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { NonIdealState } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\n\r\nimport DuplicantsList from \"./components/DuplicantsList\";\r\nimport DuplicantEditor from \"./components/DuplicantEditor\";\r\n\r\n\r\ntype Props = {};\r\ninterface State {\r\n    selectedDuplicantID: number | null;\r\n}\r\nclass DuplicantsPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDuplicantID: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedDuplicantID\r\n        } = this.state;\r\n\r\n        let content: React.ReactFragment;\r\n        if (selectedDuplicantID != null) {\r\n            content = <DuplicantEditor className=\"fill-parent\" duplicantID={selectedDuplicantID}/>\r\n        }\r\n        else {\r\n            content = (\r\n                <NonIdealState visual={IconNames.MUGSHOT}>\r\n                    Select a duplicant to edit\r\n                </NonIdealState>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui-page ui-page-duplicants fill-parent layout-vertical\">\r\n                <DuplicantsList className=\"layout-item\" selectedDuplicantID={selectedDuplicantID} onDuplicantClick={this._onDuplicantSelected} />\r\n                <div className=\"layout-item-fill\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onDuplicantSelected(duplicantID: number) {\r\n        this.setState(s => ({\r\n            ...s,\r\n            selectedDuplicantID: duplicantID\r\n        }));\r\n    }\r\n}\r\n\r\nexport default DuplicantsPage\r\n\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, Switch, Route, Redirect, withRouter } from \"react-router\";\r\n\r\nimport {\r\n    Card,\r\n    Elevation,\r\n    Menu,\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport ActiveAwareLink from \"../../components/ActiveAwareLink\";\r\n\r\nimport DuplicantsPage from \"./pages/Duplicants\";\r\nimport Error404Page from \"../404\";\r\n\r\nclass SaveEditorPageComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ui-page ui-page-saveeditor fill-parent\">\r\n                <Switch>\r\n                    <Redirect exact from=\"/editor\" to=\"/editor/duplicants\" />\r\n                    <Route exact path=\"/editor/duplicants\" component={DuplicantsPage} />\r\n                    <Route component={Error404Page}/>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SaveEditorPageComponent;\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Spinner,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default class LoadingSaveFilePageComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <NonIdealState>\r\n                <Text>Loading File</Text>\r\n                <div>\r\n                    <Spinner large={true}/>\r\n                </div>\r\n                <Text>TODO progress here</Text>\r\n            </NonIdealState>\r\n        );\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../state/utils\";\r\n\r\nimport { loadSavefile } from \"../../services/save-editor/savefile/actions\";\r\n\r\nexport interface DispatchProps {\r\n    loadSavefile: typeof loadSavefile;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        loadSavefile\r\n    }, dispatch);\r\n}","\r\nexport interface StateProps {\r\n\r\n}\r\n\r\nexport default function(): StateProps {\r\n    return {};\r\n}\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Button,\r\n    Intent\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\nconst saveDescription = \"Oxygen Not Included saves can be found in your documents folder under\";\r\n\r\n// TODO: Show correct path based on user's OS.\r\nconst savePath = \"Klei/OxygenNotIncluded/save_files\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass NoSaveLoadedPageComponent extends React.Component<Props> {\r\n    private _input: HTMLInputElement | null = null;\r\n    \r\n    render() {\r\n        const {\r\n            loadSavefile\r\n        } = this.props;\r\n        return (\r\n            <NonIdealState\r\n                visual={IconNames.FLOPPY_DISK}\r\n                action={\r\n                    <Button intent={Intent.PRIMARY} onClick={this._onLoadClick}>Load a .sav file</Button>\r\n                }\r\n                description=\"No save has been loaded.\"\r\n            >\r\n                <div>{saveDescription} <code>{savePath}</code></div>\r\n                <input\r\n                    ref={el => this._input = el}\r\n                    style={{display: \"none\"}}\r\n                    className=\"pt-button pt-intent-primary\"\r\n                    type=\"file\"\r\n                    accept=\".sav\"\r\n                    onChange={this._onLoadFile}\r\n                />\r\n            </NonIdealState>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadClick() {\r\n        if (!this._input) return;\r\n        this._input.click();\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadFile(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const files = change.target.files;\r\n        if (!files || files.length === 0) return;\r\n        this.props.loadSavefile({file: files[0]});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoSaveLoadedPageComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Link, LinkProps } from \"react-router-dom\"\r\nimport { autobind } from \"core-decorators\";\r\n\r\nexport interface ActiveAwareLinkProps extends LinkProps {\r\n    exact?: boolean;\r\n}\r\ntype Props = ActiveAwareLinkProps & RouteComponentProps<{}>;\r\nclass ActiveAwareLink extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            to,\r\n            location,\r\n            children,\r\n            onClick,\r\n            className,\r\n            exact,\r\n\r\n            // Need to strip this out of passed props\r\n            staticContext,\r\n            ...other\r\n        } = this.props\r\n        const pathName = location.pathname;\r\n        let match: boolean;\r\n        \r\n        if (exact) match = to === pathName;\r\n        else match = matchPartialPath(pathName, to.toString());\r\n\r\n        if (match) {\r\n            return <span className={`pt-active pt-intent-primary ${className || \"\"}`}>{children}</span>;\r\n        }\r\n\r\n        return <Link to={to} className={className || \"\"} {...other} onClick={this._onClick}>{children}</Link>;\r\n    }\r\n\r\n    @autobind()\r\n    private _onClick(event: React.MouseEvent<HTMLAnchorElement>) {\r\n        const {\r\n            exact,\r\n            location,\r\n            to,\r\n            onClick\r\n        } = this.props;\r\n        const pathName = location.pathname;\r\n\r\n        let match: boolean;\r\n        if (exact) match = to === pathName;\r\n        else match = matchPartialPath(pathName, to.toString());\r\n\r\n        if (match) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        }\r\n    }\r\n}\r\nexport default withRouter(ActiveAwareLink);\r\n\r\nfunction matchPartialPath(pathName: string, to: string): boolean {\r\n    if (pathName === to) return true;\r\n\r\n    if (!pathName.startsWith(to)) return false;\r\n\r\n    // Need to make sure we matched up to a path seperator.\r\n    if (pathName[to.length] !== '/') return false;\r\n    return true;\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\n\r\nimport {\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport ActiveAwareLink from \"../ActiveAwareLink\";\r\n\r\nimport { AppNavMenuProps } from \"./props\";\r\nimport { NavMenuEntry } from \"./interfaces\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nclass AppNavMenu extends React.Component<AppNavMenuProps & RouteComponentProps<any>> {\r\n    render() {\r\n        const {\r\n            className,\r\n            entries\r\n        } = this.props;\r\n\r\n        const links = this._renderEntries(entries);\r\n        return (\r\n            <div className={`ui-nav-menu ${className || \"\"}`}>\r\n                {links}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderEntries(entries: NavMenuEntry[], key?: any): React.ReactChild[] {\r\n        key = key ? String(key) + \"-\" : \"\";\r\n\r\n        const fragments: React.ReactChild[] = [];\r\n        let previousWasGroup = false;\r\n\r\n        entries.forEach((entry, i) => {\r\n            const rendered = this._renderEntry(entry, key + i);\r\n            if (!rendered) return;\r\n            \r\n            if (previousWasGroup) {\r\n                fragments.push(<MenuDivider key={key + (i - 1) + \"-divider\"}/>)\r\n            }\r\n\r\n            if (Array.isArray(rendered)) {\r\n                fragments.push(...rendered);\r\n                previousWasGroup = true;\r\n            }\r\n            else {\r\n                fragments.push(rendered);\r\n            }\r\n        });\r\n\r\n        return fragments;\r\n    }\r\n\r\n    private _renderEntry(entry: NavMenuEntry, key?: any): React.ReactChild | React.ReactChild[] {\r\n        switch(entry.type) {\r\n            case \"group\": {\r\n                const rendered = this._renderEntries(entry.entries, key);\r\n                if (entry.name) {\r\n                    rendered.unshift(\r\n                        <div className=\"pt-menu-header\"><h6>{entry.name}</h6></div>\r\n                    );\r\n                }\r\n                return rendered;\r\n            }\r\n            case \"link\": {\r\n                const pathName = this.props.location.pathname;\r\n                const {\r\n                    name,\r\n                    path,\r\n                    subEntries\r\n                } = entry;\r\n                const primaryLink = <ActiveAwareLink key={key} exact={subEntries != null} className=\"pt-menu-item\" to={path}>{name}</ActiveAwareLink>;\r\n                if (!subEntries || !matchPartialPath(pathName, path)) {\r\n                    return primaryLink;\r\n                }\r\n                else {\r\n                    return [\r\n                        primaryLink,\r\n                        <ul>\r\n                            {this._renderEntries(subEntries, key).map((x, i) => <li key={i}>{x}</li>)}\r\n                        </ul>\r\n                    ];\r\n                }\r\n            }\r\n            default: \r\n                return throwUnknownMenuEntry(entry);\r\n        }\r\n    }\r\n}\r\nexport default withRouter(AppNavMenu);\r\n\r\nfunction throwUnknownMenuEntry(entry: never): never {\r\n    throw new Error(`Unknown entry type \"${(entry as NavMenuEntry).type}\".`);\r\n}\r\n\r\n\r\nfunction matchPartialPath(pathName: string, to: string): boolean {\r\n    if (pathName === to) return true;\r\n\r\n    if (!pathName.startsWith(to)) return false;\r\n\r\n    // Need to make sure we matched up to a path seperator.\r\n    if (pathName[to.length] !== '/') return false;\r\n    return true;\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    saveFileName,\r\n    isSaveEnabled\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    saveFileName: string | null;\r\n    isSaveEnabled: boolean;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    saveFileName,\r\n    isSaveEnabled\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../state/utils\";\r\n\r\nimport { loadSavefile, saveSavefile } from \"../../services/save-editor/savefile/actions\";\r\n\r\nexport interface DispatchProps {\r\n    loadSavefile: typeof loadSavefile;\r\n    saveSavefile: typeof saveSavefile;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        loadSavefile,\r\n        saveSavefile\r\n    }, dispatch);\r\n}\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport {\r\n    Navbar,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Text,\r\n    Button,\r\n    Alignment\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport { AppNavBarProps } from \"./props\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\ntype Props = AppNavBarProps & StateProps & DispatchProps;\r\nclass AppNavBar extends React.Component<Props> {\r\n    private _input: HTMLElement | null = null;\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            saveFileName,\r\n            isSaveEnabled\r\n        } = this.props;\r\n\r\n        return (\r\n            <Navbar className={`ui-app-navbar ${className || \"\"}`}>\r\n                <NavbarGroup>\r\n                    <NavbarHeading>ONI Save Editor</NavbarHeading>\r\n                    <Text ellipsize={true}>{saveFileName || \"\"}</Text>\r\n                </NavbarGroup>\r\n                <NavbarGroup align={Alignment.RIGHT}>\r\n                    <Button icon={IconNames.UPLOAD} onClick={this._onLoadClick}>Load</Button>\r\n                    <Button icon={IconNames.FLOPPY_DISK} disabled={!isSaveEnabled} onClick={this._onSaveClick}>Save</Button>\r\n                    <input\r\n                        ref={el => this._input = el}\r\n                        style={{ display: \"none\" }}\r\n                        className=\"pt-button pt-intent-primary\"\r\n                        type=\"file\"\r\n                        accept=\".sav\"\r\n                        onChange={this._onLoadFile}\r\n                    />\r\n                </NavbarGroup>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onSaveClick() {\r\n        this.props.saveSavefile({});\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadClick() {\r\n        if (!this._input) return;\r\n        this._input.click();\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadFile(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const files = change.target.files;\r\n        if (!files || files.length === 0) return;\r\n        this.props.loadSavefile({file: files[0]});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavBar);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    saveFileName,\r\n    isSaveChosen,\r\n    isSaveLoading,\r\n    isSaveSaving,\r\n    loadError\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    saveFileName: string | null;\r\n    isSaveChosen: boolean;\r\n    isSaveLoading: boolean;\r\n    isSaveSaving: boolean;\r\n    loadError: Error | null;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    saveFileName,\r\n    isSaveChosen,\r\n    isSaveLoading,\r\n    isSaveSaving,\r\n    loadError\r\n});\r\nexport default mapStateToProps;\r\n\r\n// Was pretty sure this used to work, once upon a time.\r\n//export type StateProps = typeof mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, Switch, withRouter } from \"react-router\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Text,\r\n    Dialog,\r\n    Button,\r\n    Alignment,\r\n    Spinner,\r\n    NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\nimport AppNavBar from \"../AppNavBar\";\r\nimport AppNavMenu from \"../AppNavMenu\";\r\n\r\nimport NoSaveLoadedPage from \"../../pages/NoSaveLoaded\";\r\nimport LoadingSaveFilePage from \"../../pages/LoadingSaveFile\";\r\nimport SaveEditorPage from \"../../pages/SaveEditor\";\r\n\r\nimport MaterialsPage from \"../../pages/Materials\";\r\nimport ChangelogPage from \"../../pages/Changelog\";\r\nimport ErrorPage from \"../../pages/Error\";\r\nimport Error404Page from \"../../pages/404\";\r\nimport { NavMenuEntry } from \"../AppNavMenu/interfaces\";\r\n\r\ntype OwnProps = StateProps;\r\nclass AppComponent extends React.Component<OwnProps> {\r\n    private _input: HTMLInputElement | null = null;\r\n\r\n    render() {\r\n        const {\r\n            saveFileName,\r\n            isSaveChosen,\r\n            isSaveLoading,\r\n            isSaveSaving,\r\n            loadError\r\n        } = this.props;\r\n\r\n        let rootComponent: React.ComponentType;\r\n        let requireExactPath = true;\r\n        let redirectOn404: string | null = null;\r\n\r\n        // TODO: Load from somewhere\r\n        let navMenuEntries: NavMenuEntry[] = [];\r\n\r\n        // TODO: Move this stack of display logic into editor component.\r\n        if (loadError) {\r\n            // Show error screen\r\n            rootComponent = ErrorPage;\r\n        }\r\n        else if (!isSaveChosen) {\r\n            // Show file chooser.\r\n            rootComponent = NoSaveLoadedPage\r\n            redirectOn404 = \"/editor\";\r\n        }\r\n        else if (isSaveLoading) {\r\n            // Show loading screen.\r\n            rootComponent = LoadingSaveFilePage;\r\n        }\r\n        else {\r\n            // Show editor\r\n            rootComponent = SaveEditorPage;\r\n            requireExactPath = false;\r\n            navMenuEntries = [\r\n                {\r\n                    // Save Editor items\r\n                    type: \"group\",\r\n                    entries: [\r\n                        {\r\n                            type: \"link\",\r\n                            path: \"/editor/duplicants\",\r\n                            name: \"Duplicants\"\r\n                        }\r\n                    ]\r\n                }\r\n            ];\r\n        }\r\n\r\n        navMenuEntries.push(\r\n            {\r\n                // Utility items\r\n                type: \"group\",\r\n                entries: [\r\n                    {\r\n                        type: \"link\",\r\n                        path: \"/material-explorer\",\r\n                        name: \"Material Explorer\",\r\n                        subEntries: [\r\n                            {\r\n                                type: \"link\",\r\n                                path: \"/material-explorer/solids\",\r\n                                name: \"Solids\"\r\n                            },\r\n                            {\r\n                                type: \"link\",\r\n                                path: \"/material-explorer/liquids\",\r\n                                name: \"Liquids\"\r\n                            },\r\n                            {\r\n                                type: \"link\",\r\n                                path: \"/material-explorer/gasses\",\r\n                                name: \"Gasses\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"link\",\r\n                path: \"/changelog\",\r\n                name: \"Duplicity Changelog\"\r\n            }\r\n        );\r\n\r\n        return (\r\n            <div className=\"ui-app-root pt-app pt-dark fill-parent layout-vertical\">\r\n                <AppNavBar className=\"layout-item\" />\r\n                <div className=\"layout-item-fill layout-horizontal\">\r\n                    <AppNavMenu className=\"layout-item\" entries={navMenuEntries} />\r\n                    <div className=\"layout-item-fill\">\r\n                        <Switch>\r\n                            <Route exact={requireExactPath} path=\"/editor\" component={rootComponent} />\r\n                            <Route exact path=\"/404\" component={Error404Page} />\r\n                            <Route path=\"/material-explorer\" component={MaterialsPage} />\r\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\r\n                            <Redirect exact from=\"/\" to=\"/editor\" />\r\n                            {redirectOn404 ? <Redirect to={redirectOn404} /> : <Route component={Error404Page} />}\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n                <Dialog isOpen={isSaveSaving} title=\"Saving File\" icon={IconNames.SAVED} isCloseButtonShown={false}>\r\n                    <NonIdealState>\r\n                        <div>\r\n                            <Spinner large={true} />\r\n                        </div>\r\n                        <div>\r\n                            Saving <code>{saveFileName}</code>\r\n                        </div>\r\n                    </NonIdealState>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps)(AppComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { hot } from \"react-hot-loader\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n// react-router wants to wrap every element we have in a new element.  Because composability!\r\n//  without wrapping this in a <Route/> from the outside, the PureComponent hot will not see\r\n//  any changes, and the broken context system is ignored.\r\n//  Every other library out their uses an external context store similar to the new react context\r\n//  pattern, but router just blames everyone else for honoring shouldComponentUpdate and says wontfix.\r\n// Might be better off removing route altogether and staying a SPA.\r\nexport default withRouter(hot(module)(App) as any);\r\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, #root {\\n  height: 100%;\\n  width: 100%; }\\n\\nbody {\\n  margin: 0;\\n  padding: 0; }\\n\\n.fill-parent, .fill-parent-width, .fill-parent-height {\\n  /* Fill parent to our outsides.*/\\n  box-sizing: border-box; }\\n\\n.fill-parent, .fill-parent-width {\\n  width: 100%; }\\n\\n.fill-parent, .fill-parent-height {\\n  height: 100%; }\\n\\n.layout-wrap {\\n  flex-wrap: wrap; }\\n\\n/*\\r\\n============================================================================\\r\\nHorizontal and Vertical Layouts\\r\\n============================================================================\\r\\n*/\\n/* Container for items that can fill up the available space, and optionally be constrained by it. */\\n.layout-vertical {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.layout-horizontal {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.layout-item, .layout-item-fill {\\n  box-sizing: border-box; }\\n\\n.layout-vertical > div, .layout-horizontal > div, .layout-vertical > .layout-item, .layout-horizontal > .layout-item {\\n  flex: none; }\\n\\n.layout-vertical > .layout-item-fill, .layout-horizontal > .layout-item-fill {\\n  flex: 1 1 auto; }\\n\\n.layout-vertical > .layout-item-constrain, .layout-horizontal > .layout-item-constrain {\\n  flex: 0 1 auto; }\\n\\n.layout-vertical > .layout-item-fill, .layout-vertical > .layout-item-constrain {\\n  /* Flex sets min-height to auto, we need to allow it to shrink down */\\n  min-height: 0;\\n  /*\\r\\n    Maintain some sort of inner css specified (vs actual?) value for height, so that \\r\\n    child elements can use height percentages and fill their parent (us)\\r\\n    */\\n  height: 100%; }\\n\\n.layout-horizontal > .layout-item-fill, .layout-horizontal > .layout-item-constrain {\\n  min-width: 0;\\n  width: 100%; }\\n\\n/*\\r\\n============================================================================\\r\\nContent Containers\\r\\n============================================================================\\r\\n*/\\n.container-scroll {\\n  overflow: auto; }\\n\\n/*\\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\\n */\\n.ui-app-root {\\n  background-color: #182026; }\\n\\n.pt-navbar.ui-app-navbar {\\n  background-color: #2965cc; }\\n  .pt-navbar.ui-app-navbar .pt-navbar-group .pt-button {\\n    margin: 0 4px; }\\n\\n.ui-page-404 .ui-title {\\n  font-size: 20pt; }\\n\\n.ui-page-404 .ui-title-secondary {\\n  font-size: 12pt; }\\n\\n.ui-page-404 .ui-body {\\n  margin-top: 8px; }\\n\\n.ui-nav-menu {\\n  padding: 15px;\\n  background-color: #394b59; }\\n\\n.ui-page-duplicants .ui-duplicant-list {\\n  background-color: #bfccd6;\\n  height: 340px; }\\n  .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait {\\n    width: 150px;\\n    height: 150px;\\n    margin: 10px;\\n    cursor: pointer; }\\n    .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait .ui-duplicant-name {\\n      text-align: center; }\\n    .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait .ui-duplicant-role {\\n      text-align: center; }\\n  .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait.pt-active {\\n    background-color: #f29d49; }\\n\\n.ui-page-duplicants .ui-duplicant-editor {\\n  box-sizing: border-box;\\n  padding: 5px; }\\n  .ui-page-duplicants .ui-duplicant-editor .ui-title {\\n    display: inline-block;\\n    width: auto; }\\n\\n.ui-page-duplicants .ui-duplicant-skills .pt-html-table {\\n  width: 100%;\\n  max-height: 100%; }\\n\\n.ui-page-duplicants .ui-duplicant-effects .pt-html-table {\\n  width: 100%;\\n  max-height: 100%; }\\n\\n.ui-page-duplicants .ui-duplicant-jobs .ui-current-role, .ui-page-duplicants .ui-duplicant-jobs .ui-target-role {\\n  padding: 5px; }\\n\\n.ui-page-changelog {\\n  padding: 15px; }\\n\\n.pt-multi-select-popover .pt-menu, .pt-select-popover .pt-menu {\\n  max-width: 400px;\\n  max-height: 300px;\\n  overflow: auto; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n import \"@blueprintjs/core/lib/css/blueprint.css\";\r\n import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\n\r\nimport \"./root.scss\";\r\n","\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport \"./css\";\r\n\r\n\r\nimport App from \"./app\";\r\n\r\nimport store from \"./state/store\";\r\n\r\nimport { runSaga } from \"./state/saga\";\r\nrunSaga();\r\n\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>,\r\n    rootEl\r\n);\r\n"],"sourceRoot":""}