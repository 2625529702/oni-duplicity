{"version":3,"sources":["webpack:///./src/state/saga.ts","webpack:///./src/pages/404/index.ts","webpack:///./src/services/save-editor/duplicants/resume/actions.ts","webpack:///./src/services/save-editor/duplicants/appearance/actions.ts","webpack:///./src/services/save-editor/savefile/save-loader.worker.ts","webpack:///./src/services/save-editor/savefile/saga.ts","webpack:///./src/services/save-editor/saga.ts","webpack:///./src/services/save-editor/duplicants/resume/reducer.ts","webpack:///./src/services/save-editor/duplicants/appearance/reducer.ts","webpack:///./src/services/save-editor/duplicants/reducer.ts","webpack:///./src/services/save-editor/savefile/reducer.ts","webpack:///./src/services/save-editor/reducer.ts","webpack:///./src/state/reducer.ts","webpack:///./src/state/store.ts","webpack:///./CHANGELOG.md","webpack:///./src/pages/Changelog/component.tsx","webpack:///./src/pages/Changelog/index.ts","webpack:///./src/pages/404/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/dispatch.tsx","webpack:///./src/services/save-editor/duplicants/resume/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/traits.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/dispatch.ts","webpack:///./src/state/utils.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/dispatch.ts","webpack:///./src/services/save-editor/duplicants/appearance/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/selectors.ts","webpack:///./src/services/save-editor/duplicants/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/index.ts","webpack:///./src/pages/SaveEditor/components/LoadingSaveFile/component.tsx","webpack:///./src/pages/SaveEditor/components/LoadingSaveFile/index.ts","webpack:///./src/pages/SaveEditor/components/Error/dispatch.ts","webpack:///./src/pages/SaveEditor/components/Error/selectors.ts","webpack:///./src/pages/SaveEditor/components/Error/component.tsx","webpack:///./src/pages/SaveEditor/components/Error/index.ts","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/dispatch.ts","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/selectors.ts","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/component.tsx","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/index.ts","webpack:///./src/pages/SaveEditor/selectors.ts","webpack:///./src/pages/SaveEditor/component.tsx","webpack:///./src/pages/SaveEditor/index.ts","webpack:///./src/components/ActiveAwareLink/component.tsx","webpack:///./src/components/ActiveAwareLink/index.ts","webpack:///./src/components/AppNavMenu/component.tsx","webpack:///./src/components/AppNavMenu/index.ts","webpack:///./src/components/AppNavBar/selectors.ts","webpack:///./src/components/AppNavBar/dispatch.ts","webpack:///./src/components/AppNavBar/component.tsx","webpack:///./src/components/AppNavBar/index.ts","webpack:///./src/components/App/selectors.ts","webpack:///./src/components/App/component.tsx","webpack:///./src/components/App/index.ts","webpack:///./src/app.tsx","webpack:///./src/css/root.scss","webpack:///./src/css/root.scss?3097","webpack:///./src/css/index.ts","webpack:///./src/index.tsx","webpack:///./src/services/save-editor/state.ts","webpack:///./src/services/save-editor/duplicants/actions.ts","webpack:///./src/logging/index.ts","webpack:///./src/services/save-editor/selectors.ts","webpack:///./src/action-utils.ts","webpack:///./src/services/save-editor/savefile/actions.ts","webpack:///./src/services/save-editor/savefile/selectors.ts","webpack:///./src/services/save-editor/reducer-utils.ts"],"names":["redux_saga_1","__importDefault","__webpack_require__","effects_1","saga_1","sagaMiddleware","default","runSaga","run","fork","exports","component_1","action_utils_1","ACTION_DUPLICANT_ROLE_CURRENT_SET","setDuplicantCurrentRole","createAction","x","ACTION_DUPLICANT_ROLE_TARGET_SET","setDuplicantTargetRole","ACTION_DUPLICANT_ROLE_MASTERY_SET","setDuplicantRoleMastery","ACTION_DUPLICANT_ROLE_EXPERIENCE_SET","setDuplicantRoleExperience","ACTION_DUPLICANT_APPEARANCE_EYES_SET","setDuplicantEyes","ACTION_DUPLICANT_APPEARANCE_HAIR_SET","setDuplicantHair","ACTION_DUPLICANT_APPEARANCE_HEAD_SET","setDuplicantHead","ACTION_DUPLICANT_APPEARANCE_MOUTH_SET","setDuplicantMouth","ACTION_DUPLICANT_APPEARANCE_BODY_SET","setDuplicantBody","module","Worker","p","file_saver_1","actions_1","save_loader_worker_1","logging_1","worker","loadSaveFile","action","file","payload","reader","FileReader","loadGamePromise","Promise","accept","reject","onload","result","onerror","error","readAsArrayBuffer","then","buffer","e","onmessage","saveGame","data","cmd","command","postMessage","call","put","savefileReceived","err","console","log","saveSavefile","fileName","state","select","saveEditor","saveSavefileStarted","saveDataPromise","save","saveData","blob","Blob","saveAs","message","saveSavefileEnded","handleSaveOrLoad","take","ACTION_SAVEFILE_LOAD","ACTION_SAVEFILE_SAVE","type","default_1","oni_save_parser_1","state_1","reducer_utils_1","duplicantAccessoriesReducer","defaultSaveEditorState","_action","duplicantID","roleID","modifyBehavior","MinionResumeBehavior","behavior","Object","assign","parsedData","currentRole","targetRole","mastery","MasteryByRoleID","Map","Array","from","entries","concat","experience","ExperienceByRoleID","accessoryID","modifyAccessory","ordinal","getAccessoryOrdinal","makeAccessoryID","accessoryType","AccessorizerBehavior","oldAccessories","accessories","accIndex","getIndexOfAccessoryType","newAccessory","guid","Guid","slice","reducer_1","reducer_2","duplicantsReducer","duplicantsRootReducer","ACTION_DUPLICANT_RENAME","name","MinionIdentityBehavior","ACTION_DUPLICANT_SKILL_SET_LEVEL","skillId","level","AIAttributeLevelsBehavior","normalizedId","levels","saveLoadLevels","skillIndex","findIndex","attributeId","index","FAILURE_TYPE","ACTION_INVALID","ACTION_DUPLICANT_SKILL_SET_EXPERIENCE","ACTION_DUPLICANT_TRAITS_SET","traitIDs","AITraitsBehavior","gameObjectIndex","TraitIds","ACTION_DUPLICANT_EFFECTS_ADD","effectID","timeRemaining","AIEffectsBehavior","effects","saveLoadEffects","id","ACTION_DUPLICANT_EFFECTS_SETTIME","effectIndex","ACTION_DUPLICANT_EFFECTS_REMOVE","ACTION_DUPLICANT_HEALTH_STATE_SET","healthState","HealthBehavior","State","ACTION_DUPLICANT_SCALE_SET","scaleX","scaleY","modifyGameObject","gameObject","scale","y","ACTION_DUPLICANT_GENDER_SET","gender","genderStringKey","ACTION_DUPLICANT_VOICE_SET","voiceIdx","warning","saveFileReducer","isSaving","isLoading","ACTION_SAVEFILE_RECEIVED","normalizedIDs","prefabType","body","gameObjects","prefabs","i","length","idBehavior","getBehavior","KPrefabIDBehavior","isNaN","InstanceID","SAVEFILE_CORRUPT","MISSING_BEHAVIOR","ACTION_SAVEFILE_SAVE_START","ACTION_SAVEFILE_SAVE_END","reducers","saveEditorReducer","reducer","redux_1","combineReducers","[object Object]","saveEditorStateKey","middleware","store","createStore","applyMiddleware","React","__importStar","react_markdown_1","changelog","ChangelogPage","Component","createElement","className","source","core_1","icons_1","DuplicantsPage","NonIdealState","visual","IconNames","ERROR","mapDispatchToProps","dispatch","bindActionCreators","addEffect","addDuplicantEffect","removeEffect","removeDuplicantEffect","setEffectTime","setDuplicantEffectTime","utils_1","selectors_1","mapStateToProps","createStructuredSelector","makeGetDuplicantEffects","react_redux_1","core_decorators_1","select_1","StringSelect","Select","ofType","dispatch_1","DuplicantEffects","this","props","rows","map","DuplicantEffectRow","key","onChangeTime","_onEffectChangeTime","onRemove","_onEffectRemoved","items","AI_EFFECT_IDS","itemPredicate","_filterItem","itemRenderer","_renderItem","onItemSelect","_onEffectSelected","filterable","resetOnClose","resetOnSelect","popoverProps","minimal","Button","rightIcon","text","query","item","toLowerCase","indexOf","effect","itemProps","modifiers","handleClick","matchesPredicate","MenuItem","active","onClick","__decorate","autobind","prototype","connect","super","NumericInput","value","clampValueOnBlur","min","onValueChange","_onTimeRemainingChange","icon","SMALL_CROSS","_onRemove","setCurrentRole","setTargetRole","setMastery","setExperience","reselect_1","selectors_2","makeGetDuplicantCurrentRole","selector","makeGetDuplicantByID","createSelector","makeGetBehaviorByName","resumeBehavior","makeGetDuplicantTargetRole","makeGetDuplicantRoleDetails","statusByKey","keys","dupSelector","roles","DuplicantJobsPage","knownRoles","Set","JobRow","jobID","_setMastery","_setExperience","_onCurrentRoleSelected","_onTargetRoleSelected","checked","onChange","_onSetMastery","_onSetExperience","change","target","Roles_1","DuplicantRolesPage","Tabs","vertical","renderActiveTabPanelOnly","Tab","title","panel","disabled","TRAITS","setTraits","setDuplicantTraits","traits","makeGetDuplicantTraits","traits_1","TraitMultiSelect","MultiSelect","DuplicantTraits","selectedItems","_onTagSelected","tagRenderer","tag","tagInputProps","_onTagRemoved","noResults","newTraits","splice","trait","isSelected","TICK","BLANK","shouldDismissPopover","setLevel","setDuplicantSkillLevel","setDuplicantSkillExperience","selectors","selectorCreator","skills","makeGetDuplicantSkills","DuplicantSkills","DuplicantSkillRow","onChangeLevel","_onChangeLevel","onChangeExperience","_onChangeExperience","_onLevelChange","_onExperienceChange","Math","round","setEyes","setHair","setHead","setMouth","setBody","makeGetDuplicantAppearanceMaker","accessorizerBehavior","accessory","getAccessoryOfType","makeGetDuplicantEyes","makeGetDuplicantHair","makeGetDuplicantHead","makeGetDuplicantMouth","makeGetDuplicantBody","eyes","hair","head","mouth","DuplicantAccessoryPage","AppearanceGroup","ACCESSORIZER_EYE_GUIDS","onSet","ACCESSORIZER_HEAD_GUIDS","ACCESSORIZER_HAIR_GUIDS","ACCESSORIZER_MOUTH_GUIDS","ACCESSORIZER_BODY_GUIDS","_onSet","setGender","setDuplicantGender","setVoice","setDuplicantVoice","setScale","setDuplicantScale","setHealthState","setDuplicantHealthState","makeGetDuplicantGender","makeGetDuplicantVoice","makeGetDuplicantScale","makeGetDuplicantHealthState","NumberSelect","MIN_SCALE","Number","EPSILON","DuplicantGeneralPage","healthStateStr","HEALTH_STATE_NAMES","MINION_IDENTITY_GENDERS","_onGenderSelected","_onVoiceSelected","_onScaleX","_onScaleY","_onHealthStateSelected","stateIndex","renameDuplicant","identityBehavior","General_1","Appearance_1","Skills_1","Traits_1","Jobs_1","Effects_1","DuplicantEditor","rename","EditableText","_onNameChange","onConfirm","_onRename","str","setState","s","duplicantsIDs","propKey","duplicantsMap","_","hasOwnProperty","levelBehavior","traitsBehavior","effectsBehavior","healthBehavior","duplicants","makeGetGameObjectsByType","ids","duplicant","push","dups","DuplicantPortrait","role","outerClassName","Card","interactive","_onClick","DuplicantPortrait_1","DuplicantsList","selectedDuplicantID","elements","_onDuplicantClick","onDuplicantClick","DuplicantsList_1","DuplicantEditor_1","content","MUGSHOT","_onDuplicantSelected","LoadingSaveFilePageComponent","Text","Spinner","large","loadError","ErrorPageComponent","Error","stack","description","loadSavefile","saveDescription","savePath","NoSaveLoadedPageComponent","_input","FLOPPY_DISK","intent","Intent","PRIMARY","_onLoadClick","ref","el","style","display","_onLoadFile","click","files","isSaveChosen","isSaveLoading","react_router_1","NoSaveLoaded_1","Error_1","LoadingSaveFile_1","Duplicants_1","_404_1","SaveEditorPageComponent","Switch","Redirect","exact","to","Route","path","component","react_router_dom_1","ActiveAwareLink","_a","location","children","staticContext","other","__rest","pathName","pathname","match","matchPartialPath","toString","Link","event","preventDefault","startsWith","withRouter","ActiveAwareLink_1","AppNavMenu","links","_renderEntries","String","fragments","previousWasGroup","forEach","entry","rendered","_renderEntry","MenuDivider","isArray","unshift","subEntries","collapse","primaryLink","throwUnknownMenuEntry","saveFileName","isSaveEnabled","AppNavBar","Navbar","NavbarGroup","NavbarHeading","ellipsize","align","Alignment","RIGHT","UPLOAD","_onSaveClick","isSaveSaving","AppNavBar_1","AppNavMenu_1","SaveEditor_1","Changelog_1","AppComponent","Dialog","isOpen","SAVED","isCloseButtonShown","react_hot_loader_1","App_1","hot","options","hmr","transform","insertInto","undefined","locals","ReactDOM","app_1","store_1","rootEl","document","getElementById","render","Provider","HashRouter","failureType","STATE_CORRUPT","warn","freeze","seal","gameObjectSelector","behaviorName","behaviors","find","redux_actions_1","payloadCreator","Boolean","isSaveLoaded","prefabID","modifier","newGameObject","behaviorIndex","newBehavior"],"mappings":"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","file":"client.074471cfc09636a27a2f.bundle.js","sourcesContent":["\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fork } from \"redux-saga/effects\"\r\n\r\nimport saveEditorSaga from \"../services/save-editor/saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default sagaMiddleware;\r\n\r\nexport function runSaga() {\r\n    sagaMiddleware.run(function*() {\r\n        yield fork(saveEditorSaga);\r\n    });\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { KPrefabID } from \"oni-save-parser\";\r\nimport { createAction } from \"../../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_ROLE_CURRENT_SET = \"@save-editor/duplicants/role/current/set\";\r\nexport const setDuplicantCurrentRole = createAction(ACTION_DUPLICANT_ROLE_CURRENT_SET, (x: { duplicantID: KPrefabID, roleID: string }) => x);\r\nexport type SetDuplicantCurrentRoleAction = ReturnType<typeof setDuplicantCurrentRole>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_TARGET_SET = \"@save-editor/duplicants/role/target/set\";\r\nexport const setDuplicantTargetRole = createAction(ACTION_DUPLICANT_ROLE_TARGET_SET, (x: { duplicantID: KPrefabID, roleID: string }) => x);\r\nexport type SetDuplicantTargetRoleAction = ReturnType<typeof setDuplicantTargetRole>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_MASTERY_SET = \"@save-editor/duplicants/role/mastery/set\";\r\nexport const setDuplicantRoleMastery = createAction(ACTION_DUPLICANT_ROLE_MASTERY_SET, (x: { duplicantID: KPrefabID, roleID: string, mastery: boolean }) => x);\r\nexport type SetDuplicantRoleMasteryAction = ReturnType<typeof setDuplicantRoleMastery>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_EXPERIENCE_SET = \"@save-editor/duplicants/role/experience/set\";\r\nexport const setDuplicantRoleExperience = createAction(ACTION_DUPLICANT_ROLE_EXPERIENCE_SET, (x: { duplicantID: KPrefabID, roleID: string, experience: number }) => x);\r\nexport type SetDuplicantRoleExperienceAction = ReturnType<typeof setDuplicantRoleExperience>;\r\n\r\n\r\nexport type DuplicantResumeActions =\r\n    SetDuplicantCurrentRoleAction\r\n    | SetDuplicantTargetRoleAction\r\n    | SetDuplicantRoleMasteryAction\r\n    | SetDuplicantRoleExperienceAction;\r\n","\r\nimport { KPrefabID } from \"oni-save-parser\";\r\nimport { createAction } from \"../../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_EYES_SET = \"@save-editor/duplicants/appearance/eyes/set\";\r\nexport const setDuplicantEyes = createAction(ACTION_DUPLICANT_APPEARANCE_EYES_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantEyesAction = ReturnType<typeof setDuplicantEyes>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_HAIR_SET = \"@save-editor/duplicants/appearance/hair/set\";\r\nexport const setDuplicantHair = createAction(ACTION_DUPLICANT_APPEARANCE_HAIR_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantHairAction = ReturnType<typeof setDuplicantHair>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_HEAD_SET = \"@save-editor/duplicants/appearance/head/set\";\r\nexport const setDuplicantHead = createAction(ACTION_DUPLICANT_APPEARANCE_HEAD_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantHeadAction = ReturnType<typeof setDuplicantHead>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_MOUTH_SET = \"@save-editor/duplicants/appearance/mouth/set\";\r\nexport const setDuplicantMouth = createAction(ACTION_DUPLICANT_APPEARANCE_MOUTH_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantMouthAction = ReturnType<typeof setDuplicantMouth>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_BODY_SET = \"@save-editor/duplicants/appearance/body/set\";\r\nexport const setDuplicantBody = createAction(ACTION_DUPLICANT_APPEARANCE_BODY_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantBodyAction = ReturnType<typeof setDuplicantBody>;\r\n\r\n\r\nexport type DuplicantAppearanceActions =\r\n    SetDuplicantEyesAction\r\n    | SetDuplicantHairAction\r\n    | SetDuplicantHeadAction\r\n    | SetDuplicantMouthAction\r\n    | SetDuplicantBodyAction;\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2b9bad58b63253c0beb9.worker.js\");\n};","\r\nimport { take, fork, call, put, select } from \"redux-saga/effects\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\n\r\nimport {\r\n    ACTION_SAVEFILE_LOAD,\r\n    ACTION_SAVEFILE_SAVE,\r\n    LoadSavefileAction,\r\n    SaveSavefileAction,\r\n    savefileReceived,\r\n    saveSavefileStarted,\r\n    saveSavefileEnded\r\n} from \"./actions\";\r\n\r\nimport SaveLoadWorker from \"worker-loader!./save-loader.worker\";\r\nimport { LoadCommandData, SaveCommandData } from \"./save-loader.worker\";\r\nimport { Action } from \"redux\";\r\nimport { AppState } from \"../../../state\";\r\nimport { error } from \"../../../logging\";\r\n\r\n\r\nconst worker = new SaveLoadWorker();\r\n\r\nfunction* loadSaveFile(action: LoadSavefileAction) {\r\n    const {\r\n        file\r\n    } = action.payload;\r\n\r\n    const reader = new FileReader();\r\n    const loadGamePromise = new Promise<File>((accept, reject) => {\r\n        reader.onload = () => {\r\n            accept(reader.result);\r\n        };\r\n        reader.onerror = () => {\r\n            reject(reader.error);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }).then(buffer => {\r\n        return new Promise((accept, reject) => {\r\n            worker.onerror = (e: ErrorEvent) => { reject(e.error) };\r\n            worker.onmessage = (e: MessageEvent) => {\r\n                const {\r\n                    saveGame,\r\n                    error\r\n                } = e.data;\r\n                if (error) reject(error);\r\n                else accept(saveGame);\r\n            };\r\n\r\n            const cmd: LoadCommandData = {\r\n                command: \"load\",\r\n                buffer: reader.result\r\n            };\r\n            worker.postMessage(cmd);\r\n        });\r\n    });\r\n\r\n    try {\r\n        const saveGame: SaveGame = yield call(() => loadGamePromise);\r\n        yield put(savefileReceived({ saveGame }));\r\n    }\r\n    catch (err) {\r\n        // TODO: either send with savefileReceived error key, or make a new action for this.\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* saveSavefile(action: SaveSavefileAction) {\r\n    const {\r\n        fileName\r\n    } = action.payload;\r\n\r\n    const state: AppState = yield select();\r\n\r\n    const saveGame = state.saveEditor.saveGame;\r\n    if (!saveGame) {\r\n        return;\r\n    }\r\n\r\n    yield put(saveSavefileStarted({}));\r\n\r\n    try {\r\n        const saveDataPromise = new Promise<ArrayBuffer>((accept, reject) => {\r\n            worker.onerror = (e: ErrorEvent) => { reject(e.error) };\r\n            worker.onmessage = (e: MessageEvent) => {\r\n                const {\r\n                    buffer,\r\n                    error\r\n                } = e.data;\r\n                if (error) reject(error);\r\n                else accept(buffer);\r\n            };\r\n\r\n            const cmd: SaveCommandData = {\r\n                command: \"save\",\r\n                save: saveGame\r\n            };\r\n            worker.postMessage(cmd);\r\n        });\r\n\r\n        const saveData: ArrayBuffer = yield call(() => saveDataPromise);\r\n        const blob = new Blob([saveData]);\r\n\r\n        saveAs(blob, fileName || state.saveEditor.fileName || \"my-file.sav\");\r\n    }\r\n    catch (e) {\r\n        error(\"Failed to save file: \" + e.message);\r\n    }\r\n\r\n    yield put(saveSavefileEnded({}));\r\n}\r\n\r\nfunction* handleSaveOrLoad() {\r\n    // Take a save or load, then block until we complete.\r\n    //  This will effectively ignore save/load calls happening while we are working.\r\n    while (true) {\r\n        const action: LoadSavefileAction | SaveSavefileAction = yield take([ACTION_SAVEFILE_LOAD, ACTION_SAVEFILE_SAVE]);\r\n        switch (action.type) {\r\n            case ACTION_SAVEFILE_LOAD:\r\n                yield call<LoadSavefileAction>(loadSaveFile, action);\r\n                continue;\r\n            case ACTION_SAVEFILE_SAVE:\r\n                yield call<SaveSavefileAction>(saveSavefile, action);\r\n                continue;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function* () {\r\n    yield fork(handleSaveOrLoad);\r\n}\r\n","\r\nimport { fork } from \"redux-saga/effects\";\r\n\r\nimport saveFileSaga from \"./savefile/saga\";\r\n\r\nexport default function* () {\r\n    yield fork(saveFileSaga);\r\n}","import { AnyAction } from \"redux\";\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../../state\";\r\n\r\nimport { modifyBehavior } from \"../../reducer-utils\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_ROLE_MASTERY_SET,\r\n    ACTION_DUPLICANT_ROLE_EXPERIENCE_SET,\r\n    DuplicantResumeActions,\r\n    ACTION_DUPLICANT_ROLE_TARGET_SET,\r\n    ACTION_DUPLICANT_ROLE_CURRENT_SET\r\n} from \"./actions\";\r\n\r\n\r\nexport default function duplicantAccessoriesReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as DuplicantResumeActions;\r\n    switch(action.type) {\r\n        case ACTION_DUPLICANT_ROLE_CURRENT_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        currentRole: roleID\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_TARGET_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        targetRole: roleID\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_MASTERY_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n                mastery\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        MasteryByRoleID: new Map<string, boolean>(Array.from(behavior.parsedData.MasteryByRoleID.entries()).concat([[roleID, mastery]]))\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_EXPERIENCE_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n                experience\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        ExperienceByRoleID: new Map<string, number>(Array.from(behavior.parsedData.ExperienceByRoleID.entries()).concat([[roleID, experience]]))\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../../state\";\r\n\r\nimport { modifyBehavior } from \"../../reducer-utils\";\r\n\r\nimport {\r\n    AccessorizerBehavior,\r\n    Accessory,\r\n    getIndexOfAccessoryType,\r\n    getAccessoryOrdinal,\r\n    makeAccessoryID\r\n} from \"oni-save-parser\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_APPEARANCE_EYES_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_HAIR_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_HEAD_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_MOUTH_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_BODY_SET,\r\n    DuplicantAppearanceActions\r\n} from \"./actions\";\r\n\r\n\r\nexport default function duplicantAccessoriesReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as DuplicantAppearanceActions;\r\n    switch(action.type) {\r\n        case ACTION_DUPLICANT_APPEARANCE_EYES_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"eyes\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_HAIR_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"hair\",\r\n                accessoryID\r\n            );\r\n\r\n            const ordinal = getAccessoryOrdinal(accessoryID);\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"hat_hair\",\r\n                makeAccessoryID(\"hat_hair\", ordinal || 1)\r\n            );\r\n\r\n            // TODO: Also hair_always?  Seems that way from MinionStartingStates CreateBodyData,\r\n            //  but saved dups have a DEFAULT here\r\n\r\n            return state;\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_HEAD_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"headshape\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_MOUTH_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"mouth\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_BODY_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"body\",\r\n                accessoryID\r\n            );\r\n\r\n            const ordinal = getAccessoryOrdinal(accessoryID);\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"arm\",\r\n                makeAccessoryID(\"arm\", ordinal || 1)\r\n            );\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction modifyAccessory(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    duplicantID: number,\r\n    accessoryType: string,\r\n    accessoryID: string\r\n): SaveEditorState {\r\n    return modifyBehavior(\r\n        state,\r\n        action,\r\n        duplicantID,\r\n        AccessorizerBehavior,\r\n        behavior => {\r\n            const oldAccessories = behavior.parsedData!.accessories;\r\n            const accIndex = getIndexOfAccessoryType(oldAccessories, accessoryType);\r\n            const newAccessory: Accessory = {\r\n                guid: {\r\n                    Guid: accessoryID\r\n                }\r\n            };\r\n            let accessories: Accessory[];\r\n            if (accIndex !== -1) {\r\n                accessories = [\r\n                    ...oldAccessories.slice(0, accIndex),\r\n                    newAccessory,\r\n                    ...oldAccessories.slice(accIndex + 1)\r\n                ];\r\n            }\r\n            else {\r\n                accessories = [\r\n                    ...oldAccessories,\r\n                    newAccessory\r\n                ];\r\n            }\r\n\r\n            return {\r\n                ...behavior,\r\n                parsedData: {\r\n                    ...behavior.parsedData,\r\n                    accessories\r\n                }\r\n            };\r\n        }\r\n    );\r\n}","\r\nimport { AnyAction } from \"redux\";\r\nimport {\r\n    GameObjectBehavior,\r\n    GameObject,\r\n    MinionIdentityBehavior,\r\n    AIAttributeLevelsBehavior,\r\n    BehaviorName,\r\n    AITraitsBehavior,\r\n    AIEffectsBehavior,\r\n    HealthBehavior,\r\n    AccessorizerBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { error, FAILURE_TYPE, warning } from \"../../../logging\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState, NormalizedID } from \"../state\";\r\n\r\nimport { modifyGameObject, modifyBehavior } from \"../reducer-utils\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_RENAME,\r\n    ACTION_DUPLICANT_SKILL_SET_LEVEL,\r\n    ACTION_DUPLICANT_SKILL_SET_EXPERIENCE,\r\n    ACTION_DUPLICANT_TRAITS_SET,\r\n    ACTION_DUPLICANT_EFFECTS_ADD,\r\n    ACTION_DUPLICANT_EFFECTS_SETTIME,\r\n    ACTION_DUPLICANT_EFFECTS_REMOVE,\r\n    ACTION_DUPLICANT_HEALTH_STATE_SET,\r\n    ACTION_DUPLICANT_SCALE_SET,\r\n    ACTION_DUPLICANT_GENDER_SET,\r\n    ACTION_DUPLICANT_VOICE_SET,\r\n    DuplicantActions\r\n} from \"./actions\";\r\n\r\nimport duplicantAppearanceReducer from \"./appearance/reducer\";\r\nimport duplicantResumeReducer from \"./resume/reducer\";\r\n\r\nexport default function duplicantsReducer(state: SaveEditorState = defaultSaveEditorState, action: AnyAction): SaveEditorState {\r\n    state = duplicantsRootReducer(state, action);\r\n    state = duplicantAppearanceReducer(state, action);\r\n    state = duplicantResumeReducer(state, action);\r\n    return state;\r\n}\r\n\r\nfunction duplicantsRootReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction) {\r\n    const action = _action as DuplicantActions;\r\n    switch (action.type) {\r\n        case ACTION_DUPLICANT_RENAME: {\r\n            const {\r\n                duplicantID,\r\n                name\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            name,\r\n                            // Not sure about this.  This is used to select the duplicant biography flavor text.\r\n                            //  If the value is null, it is set to NB\r\n                            // nameStringKey: \"NB\"\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SKILL_SET_LEVEL: {\r\n            const {\r\n                duplicantID,\r\n                skillId,\r\n                level\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIAttributeLevelsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const levels = behavior.parsedData.saveLoadLevels;\r\n\r\n                    const skillIndex = levels.findIndex(x => x.attributeId === skillId);\r\n                    if (skillIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIAttributeLevelsBehavior}\" does not have skill ID ${skillId}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIAttributeLevelsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadLevels: [\r\n                                ...levels.slice(0, skillIndex),\r\n                                {\r\n                                    ...levels[skillIndex],\r\n                                    level: level\r\n                                },\r\n                                ...levels.slice(skillIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SKILL_SET_EXPERIENCE: {\r\n            const {\r\n                duplicantID,\r\n                skillId,\r\n                experience\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIAttributeLevelsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const levels = behavior.parsedData.saveLoadLevels;\r\n\r\n                    const skillIndex = levels.findIndex(x => x.attributeId === skillId);\r\n                    if (skillIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIAttributeLevelsBehavior}\" does not have skill ID ${skillId}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIAttributeLevelsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadLevels: [\r\n                                ...levels.slice(0, skillIndex),\r\n                                {\r\n                                    ...levels[skillIndex],\r\n                                    experience\r\n                                },\r\n                                ...levels.slice(skillIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_TRAITS_SET: {\r\n            const {\r\n                duplicantID,\r\n                traitIDs\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AITraitsBehavior,\r\n                (behavior, gameObjectIndex) => {\r\n                    const newBehavior: AITraitsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            TraitIds: traitIDs\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_ADD: {\r\n            const {\r\n                duplicantID,\r\n                effectID,\r\n                timeRemaining\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior, gameObjectIndex) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex !== -1) {\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects,\r\n                                {\r\n                                    id: effectID,\r\n                                    timeRemaining\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_SETTIME: {\r\n            const {\r\n                duplicantID,\r\n                effectID,\r\n                timeRemaining\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIEffectsBehavior}\" does not have effect ID ${effectID}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects.slice(0, effectIndex),\r\n                                {\r\n                                    ...effects[effectIndex],\r\n                                    timeRemaining\r\n                                },\r\n                                ...effects.slice(effectIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_REMOVE: {\r\n            const {\r\n                duplicantID,\r\n                effectID\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex === -1) {\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects.slice(0, effectIndex),\r\n                                ...effects.slice(effectIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_HEALTH_STATE_SET: {\r\n            const {\r\n                duplicantID,\r\n                healthState\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                HealthBehavior,\r\n                (behavior) => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        State: healthState\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SCALE_SET: {\r\n            const {\r\n                duplicantID,\r\n                scaleX,\r\n                scaleY\r\n            } = action.payload;\r\n\r\n            return modifyGameObject(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                (gameObject) => ({\r\n                    ...gameObject,\r\n                    scale: {\r\n                        ...gameObject.scale,\r\n                        x: scaleX || gameObject.scale.x,\r\n                        y: scaleY || gameObject.scale.y\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_GENDER_SET: {\r\n            const {\r\n                duplicantID,\r\n                gender\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            gender,\r\n                            // Update the string key, so the UI shows the appropriate value.\r\n                            genderStringKey: gender\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_VOICE_SET: {\r\n            const {\r\n                duplicantID,\r\n                voiceIdx\r\n            } = action.payload;\r\n\r\n            // TODO: Export this range from oni-save-parser\r\n            if (voiceIdx < 0 || voiceIdx > 4) {\r\n                warning(`Action \"${ACTION_DUPLICANT_VOICE_SET}\" has invalid voice id ${voiceIdx}: must be between 0 and 4.`);\r\n            }\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            voiceIdx\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport { getBehavior, KPrefabIDBehavior } from \"oni-save-parser\";\r\n\r\nimport { warning, error, FAILURE_TYPE } from \"@/logging\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState, NormalizedID } from \"../state\";\r\n\r\nimport {\r\n    SavefileActions,\r\n    ACTION_SAVEFILE_LOAD,\r\n    ACTION_SAVEFILE_RECEIVED,\r\n    ACTION_SAVEFILE_SAVE_START,\r\n    ACTION_SAVEFILE_SAVE_END\r\n} from \"./actions\";\r\n\r\nexport default function saveFileReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as SavefileActions;\r\n    switch (action.type) {\r\n        case ACTION_SAVEFILE_LOAD: {\r\n            const {\r\n                file\r\n            } = action.payload;\r\n\r\n            // Also ignored in saga.\r\n            if (state.isSaving) return state;\r\n\r\n            return {\r\n                ...defaultSaveEditorState,\r\n                fileName: file.name,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case ACTION_SAVEFILE_RECEIVED: {\r\n            const {\r\n                saveGame\r\n            } = action.payload;\r\n\r\n            // Build a normalization cache of game object PrefabIDs to the\r\n            //  type and array index of the object.\r\n            // We can save a lot of work by precaching this information,\r\n            //  and we (currently) do not create / delete / reorder any objects.\r\n            const normalizedIDs: NormalizedID[] = [];\r\n            for (let prefabType in saveGame.body.gameObjects) {\r\n                const prefabs = saveGame.body.gameObjects[prefabType];\r\n                for (let i = 0; i < prefabs.length; i++) {\r\n                    const idBehavior = getBehavior(prefabs[i], KPrefabIDBehavior);\r\n                    if (!idBehavior) {\r\n                        warning(`GameObject at \"${prefabs}\":${i} has no behavior \"${KPrefabIDBehavior}\".`, FAILURE_TYPE.MISSING_BEHAVIOR);\r\n                        continue;\r\n                    }\r\n                    if (!idBehavior.parsedData || isNaN(idBehavior.parsedData.InstanceID)) {\r\n                        error(`GameObject at \"${prefabType}\":${i} has invalid data in behavior \"${KPrefabIDBehavior}\".`, FAILURE_TYPE.SAVEFILE_CORRUPT);\r\n                        continue;\r\n                    }\r\n\r\n                    normalizedIDs[idBehavior.parsedData.InstanceID] = {\r\n                        type: prefabType,\r\n                        index: i\r\n                    };\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                saveGame: action.payload.saveGame,\r\n                normalizedIDs\r\n            };\r\n        }\r\n        case ACTION_SAVEFILE_SAVE_START:\r\n            return {\r\n                ...state,\r\n                isSaving: true\r\n            }\r\n        case ACTION_SAVEFILE_SAVE_END:\r\n            return {\r\n                ...state,\r\n                isSaving: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport { SaveEditorState, defaultSaveEditorState } from \"./state\";\r\n\r\nimport saveFileReducer from \"./savefile/reducer\";\r\nimport duplicantsReducer from \"./duplicants/reducer\";\r\n\r\n/**\r\n * Flat list of reducers to run against SaveEditorState\r\n * Reducers run in-order.\r\n * \r\n * We do not split into sub-states using combineReducers, since\r\n * these need access to all of the state at this level.\r\n * \r\n * These should be broken into sub-states when we are more normalized.\r\n */\r\nconst reducers = [\r\n    saveFileReducer,\r\n    duplicantsReducer\r\n];\r\n\r\nexport default function saveEditorReducer(state: SaveEditorState = defaultSaveEditorState, action: AnyAction): SaveEditorState {\r\n    for (let reducer of reducers) {\r\n        state = reducer(state, action);\r\n    }\r\n    return state;\r\n}\r\n","\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport saveEditorReducer from \"../services/save-editor/reducer\";\r\nimport { saveEditorStateKey } from \"../services/save-editor/state\";\r\n\r\nconst reducer = combineReducers({\r\n    [saveEditorStateKey]: saveEditorReducer\r\n});\r\n\r\nexport default reducer;\r\n","\r\nimport { applyMiddleware, createStore, Middleware } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport { AppState, defaultState } from \"./state\";\r\n\r\nimport sagaMiddleware from \"./saga\";\r\n\r\nconst middleware: Middleware[] = [\r\n    sagaMiddleware\r\n];\r\n\r\nconst store = createStore(reducer, /* preloadedState, */ applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","module.exports = \"### v1.2.1\\r\\n- Fix save corruption when text with multi-byte accents are encountered.\\r\\n\\r\\n### v1.2.0\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Current Job\\r\\n    - Target Job\\r\\n    - Job Experience\\r\\n    - Job Mastery\\r\\n\\r\\n### v1.1.0\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Gender (data only; no visual effect)\\r\\n    - Voice\\r\\n    - Appearance\\r\\n- Dedicated load button (no more refreshes to edit new saves)\\r\\n\\r\\n### v1.0.0\\r\\n\\r\\nGround-up rewrite.\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Name\\r\\n    - Size (width and height)\\r\\n    - Health Status (healthy, critical, incapacitated, invulnurable, ...)\\r\\n    - Skills (level and experience)\\r\\n    - Traits\\r\\n    - Status Effects\\r\\n- New Theme\\r\\n- Non-blocking file loading and saving.  Prevents browsers from killing the process when working with large saves.\\r\\n- Internal cleanup for mantainability going forward.\"","\r\nimport * as React from \"react\";\r\nimport Markdown from \"react-markdown\";\r\n\r\nconst changelog = require(\"@/../CHANGELOG.md\");\r\n\r\nexport default class ChangelogPage extends React.Component {\r\n    render() {\r\n        return <Markdown className=\"ui-page ui-page-changelog fill-parent\" source={changelog}/>\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nclass DuplicantsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <NonIdealState className=\"ui-page ui-page-404\" visual={IconNames.ERROR}>\r\n                <div>\r\n                    <div className=\"ui-title\">I don't know how you got here...</div>\r\n                    <div className=\"ui-title-secondary\">But weasels were probably involved.</div>\r\n                </div>\r\n                <div className=\"ui-body\">\r\n                    <div>No idea what this page is supposed to be, sorry.</div>\r\n                    <div>Try choosing something else to edit.</div>\r\n                </div>\r\n            </NonIdealState>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DuplicantsPage","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { addDuplicantEffect, removeDuplicantEffect, setDuplicantEffectTime} from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    addEffect: typeof addDuplicantEffect;\r\n    removeEffect: typeof removeDuplicantEffect;\r\n    setEffectTime: typeof setDuplicantEffectTime;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        addEffect: addDuplicantEffect,\r\n        removeEffect: removeDuplicantEffect,\r\n        setEffectTime: setDuplicantEffectTime\r\n    }, dispatch);\r\n}","\r\nimport { EffectInstance } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\nimport { makeGetDuplicantEffects  } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    effects: EffectInstance[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    effects: makeGetDuplicantEffects(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { AI_EFFECT_IDS } from \"oni-save-parser\";\r\n\r\nimport { NumericInput, MenuItem, Button } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\n\r\n\r\nimport DuplicantEffectsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantEffectsProps & StateProps & DispatchProps;\r\nclass DuplicantEffects extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            effects\r\n        } = this.props;\r\n\r\n        const rows = effects.map(x =>\r\n            <DuplicantEffectRow\r\n                key={x.id}\r\n                id={x.id}\r\n                timeRemaining={x.timeRemaining}\r\n                onChangeTime={this._onEffectChangeTime}\r\n                onRemove={this._onEffectRemoved}\r\n            />);\r\n\r\n        return (\r\n            <div className={`ui-duplicant-effects fill-parent layout-vertical`}>\r\n                <div className=\"container-scroll layout-item-fill\">\r\n                    <table className=\"pt-html-table pt-html-table-striped fill-parent-width\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Effect</th>\r\n                                <th>Time Remaining (ms)</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <StringSelect\r\n                        items={AI_EFFECT_IDS}\r\n                        itemPredicate={this._filterItem}\r\n                        itemRenderer={this._renderItem}\r\n                        onItemSelect={this._onEffectSelected}\r\n                        filterable={true}\r\n                        resetOnClose={true}\r\n                        resetOnSelect={true}\r\n                        popoverProps={{ minimal: true }}\r\n                    >\r\n                        <Button rightIcon=\"caret-down\" text=\"Add a new Effect\" />\r\n                    </StringSelect>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private _filterItem(query: string, item: string) {\r\n        return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onEffectSelected(effectID: string) {\r\n        const {\r\n            duplicantID,\r\n            addEffect\r\n        } = this.props;\r\n        addEffect({ duplicantID, effectID, timeRemaining: 5000 });\r\n    }\r\n\r\n    @autobind()\r\n    private _onEffectChangeTime(effectID: string, timeRemaining: number) {\r\n        const {\r\n            duplicantID,\r\n            setEffectTime\r\n        } = this.props;\r\n        setEffectTime({ duplicantID, effectID, timeRemaining });\r\n    }\r\n\r\n    @autobind()\r\n    private _onEffectRemoved(effectID: string) {\r\n        const {\r\n            duplicantID,\r\n            removeEffect\r\n        } = this.props;\r\n        removeEffect({ duplicantID, effectID });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantEffects);\r\n\r\n\r\ninterface DuplicantEffectRowProps {\r\n    id: string;\r\n    timeRemaining: number;\r\n    onChangeTime(id: string, timeRemaining: number): void;\r\n    onRemove(id: string): void;\r\n}\r\n\r\nclass DuplicantEffectRow extends React.Component<DuplicantEffectRowProps> {\r\n    constructor(props: DuplicantEffectRowProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            id,\r\n            timeRemaining\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td>\r\n                    <NumericInput\r\n                        value={timeRemaining}\r\n                        clampValueOnBlur={true}\r\n                        min={0}\r\n                        onValueChange={this._onTimeRemainingChange}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <Button icon={IconNames.SMALL_CROSS} onClick={this._onRemove} />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onTimeRemainingChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeTime\r\n        } = this.props;\r\n\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n\r\n        onChangeTime(id, value);\r\n    }\r\n\r\n    @autobind()\r\n    private _onRemove() {\r\n        const {\r\n            id,\r\n            onRemove\r\n        } = this.props;\r\n        onRemove(id);\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantCurrentRole,\r\n    setDuplicantTargetRole,\r\n    setDuplicantRoleMastery,\r\n    setDuplicantRoleExperience\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/resume/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setCurrentRole: typeof setDuplicantCurrentRole,\r\n    setTargetRole: typeof setDuplicantTargetRole,\r\n    setMastery: typeof setDuplicantRoleMastery;\r\n    setExperience: typeof setDuplicantRoleExperience;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setCurrentRole: setDuplicantCurrentRole,\r\n        setTargetRole: setDuplicantTargetRole,\r\n        setMastery: setDuplicantRoleMastery,\r\n        setExperience: setDuplicantRoleExperience\r\n    }, dispatch);\r\n}\r\n","import { ParametricSelector, createSelector } from \"reselect\";\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { makeGetBehaviorByName } from \"../../selectors\";\r\nimport { DuplicantByIDSelector, makeGetDuplicantByID } from \"../selectors\";\r\n\r\nexport interface JobStatus {\r\n    name: string;\r\n    mastery: boolean;\r\n    experience: number;\r\n}\r\n\r\nexport function makeGetDuplicantCurrentRole<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => resumeBehavior ? resumeBehavior.parsedData.currentRole : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantTargetRole<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => resumeBehavior ? resumeBehavior.parsedData.targetRole : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantRoleDetails<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, JobStatus[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => {\r\n            if (!resumeBehavior) return [];\r\n            const {\r\n                ExperienceByRoleID,\r\n                MasteryByRoleID\r\n            } = resumeBehavior.parsedData;\r\n            const statusByKey: {[key: string]: JobStatus} = {};\r\n            for (let [key, value] of ExperienceByRoleID.entries()) {\r\n                statusByKey[key] = {\r\n                    name: key,\r\n                    experience: value,\r\n                    mastery: false\r\n                };\r\n            }\r\n            for (let [key, value] of MasteryByRoleID.entries()) {\r\n                statusByKey[key] = {\r\n                    name: key,\r\n                    experience: 0,\r\n                    ...(statusByKey[key] || {}),\r\n                    mastery: value\r\n                };\r\n            }\r\n            return Object.keys(statusByKey).map(x => statusByKey[x]);\r\n        }\r\n    );\r\n}\r\n","\r\nimport { createStructuredSelector } from \"../../../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    makeGetDuplicantByID,\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/selectors\";\r\nimport {\r\n    JobStatus,\r\n    makeGetDuplicantCurrentRole,\r\n    makeGetDuplicantTargetRole,\r\n    makeGetDuplicantRoleDetails\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/resume/selectors\";\r\n\r\nimport Props from \"./props\";\r\nimport { Vector3 } from \"oni-save-parser/dts/interfaces\";\r\n\r\nexport interface StateProps {\r\n    currentRole: string | null;\r\n    targetRole: string | null;\r\n    roles: JobStatus[];\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        currentRole: makeGetDuplicantCurrentRole(dupSelector),\r\n        targetRole: makeGetDuplicantTargetRole(dupSelector),\r\n        roles: makeGetDuplicantRoleDetails(dupSelector),\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NumericInput, Button, MenuItem } from \"@blueprintjs/core\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\n\r\nimport DuplicantJobsPageProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantJobsPageProps & StateProps & DispatchProps;\r\nclass DuplicantJobsPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            currentRole,\r\n            targetRole,\r\n            roles\r\n        } = this.props;\r\n\r\n        // Might want to make a constant for this, but this is better for future compatibility.\r\n        const knownRoles = Array.from(new Set(roles.map(x => x.name)));\r\n\r\n        const rows = roles.map(x => (\r\n            <JobRow key={x.name} jobID={x.name} mastery={x.mastery} experience={x.experience} setMastery={this._setMastery} setExperience={this._setExperience} />\r\n        ));\r\n\r\n        return (\r\n            <div className={`ui-duplicant-jobs fill-parent container-scroll`}>\r\n                <div className=\"layout-vertical\">\r\n                    <div className=\"layout-horizontal\">\r\n                        <div className=\"ui-current-role pt-form-group pt-inline\">\r\n                            <label className=\"pt-label\">\r\n                                Current Role\r\n                            </label>\r\n                            <div className=\"pt-form-content\">\r\n                                <StringSelect\r\n                                    items={knownRoles}\r\n                                    itemPredicate={this._filterItem}\r\n                                    itemRenderer={this._renderItem}\r\n                                    onItemSelect={this._onCurrentRoleSelected}\r\n                                    filterable={true}\r\n                                    resetOnClose={true}\r\n                                    resetOnSelect={true}\r\n                                    popoverProps={{ minimal: true }}\r\n                                >\r\n                                    <Button rightIcon=\"caret-down\" text={currentRole || \"[Unknown]\"} />\r\n                                </StringSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ui-target-role pt-form-group pt-inline\">\r\n                            <label className=\"pt-label\">\r\n                                Target Role\r\n                            </label>\r\n                            <div className=\"pt-form-content\">\r\n                                <StringSelect\r\n                                    items={knownRoles}\r\n                                    itemPredicate={this._filterItem}\r\n                                    itemRenderer={this._renderItem}\r\n                                    onItemSelect={this._onTargetRoleSelected}\r\n                                    filterable={true}\r\n                                    resetOnClose={true}\r\n                                    resetOnSelect={true}\r\n                                    popoverProps={{ minimal: true }}\r\n                                >\r\n                                    <Button rightIcon=\"caret-down\" text={targetRole || \"[Unknown]\"} />\r\n                                </StringSelect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"pt-html-table pt-html-table-striped fill-parent-width layout-item\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Job Name</th>\r\n                                <th>Mastery</th>\r\n                                <th>Experience</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _filterItem(query: string, item: string) {\r\n        return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onCurrentRoleSelected(roleID: string) {\r\n        const {\r\n            duplicantID,\r\n            setCurrentRole\r\n        } = this.props;\r\n        setCurrentRole({ duplicantID, roleID });\r\n    }\r\n\r\n    @autobind()\r\n    private _onTargetRoleSelected(roleID: string) {\r\n        const {\r\n            duplicantID,\r\n            setTargetRole\r\n        } = this.props;\r\n        setTargetRole({ duplicantID, roleID });\r\n    }\r\n\r\n    @autobind()\r\n    private _setMastery(roleID: string, mastery: boolean) {\r\n        const {\r\n            duplicantID,\r\n            setMastery\r\n        } = this.props;\r\n        setMastery({ duplicantID, roleID, mastery });\r\n    }\r\n\r\n    @autobind()\r\n    private _setExperience(roleID: string, experience: number) {\r\n        const {\r\n            duplicantID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience({ duplicantID, roleID, experience });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantJobsPage);\r\n\r\n\r\ninterface JobRowProps {\r\n    jobID: string;\r\n    mastery: boolean;\r\n    experience: number;\r\n    setMastery(jobID: string, mastery: boolean): void;\r\n    setExperience(jobID: string, experience: number): void;\r\n}\r\nclass JobRow extends React.Component<JobRowProps> {\r\n    render() {\r\n        const {\r\n            jobID,\r\n            mastery,\r\n            experience\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{jobID}</td>\r\n                <td>\r\n                    <label className=\"pt-control pt-checkbox\">\r\n                        <input type=\"checkbox\" checked={mastery} onChange={this._onSetMastery} />\r\n                        <span className=\"pt-control-indicator\"></span>\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <NumericInput\r\n                        value={experience}\r\n                        clampValueOnBlur={true}\r\n                        min={0}\r\n                        onValueChange={this._onSetExperience}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    _onSetMastery(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const checked = change.target.checked;\r\n        const {\r\n            jobID,\r\n            setMastery\r\n        } = this.props;\r\n        setMastery(jobID, checked);\r\n    }\r\n\r\n    @autobind()\r\n    private _onSetExperience(value: number) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n\r\n        const {\r\n            jobID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience(jobID, value);\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    Tabs,\r\n    Tab\r\n} from \"@blueprintjs/core\";\r\n\r\n\r\nimport DuplicantRolesPageProps from \"./props\";\r\n\r\n\r\nimport RolesPage from \"./pages/Roles\";\r\n\r\ntype Props = DuplicantRolesPageProps;\r\nclass DuplicantRolesPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            duplicantID\r\n        } = this.props;\r\n        return (\r\n            <div className=\"ui-duplicant-roles fill-parent\">\r\n                <Tabs className=\"fill-parent layout-horizontal\" vertical={true} renderActiveTabPanelOnly={true} id=\"DuplicantRolePages\">\r\n                    <Tab className=\"layout-item-fill\" id=\"roles\" title=\"Roles\" panel={<RolesPage duplicantID={duplicantID} />} />\r\n                    <Tab id=\"aptitudes\" title=\"Aptitudes\" disabled/>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DuplicantRolesPage;","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\n// TODO: move to oni-save-parser\r\nconst TRAITS: string[] = [\r\n    \"None\",\r\n    \"Stinky\",\r\n    \"Ellie\",\r\n    \"Joshua\",\r\n    \"Liam\",\r\n    \"CantResearch\",\r\n    \"CantBuild\",\r\n    \"CantCook\",\r\n    \"CantDig\",\r\n    \"Hemophobia\",\r\n    \"MedicalAid\",\r\n    \"ScaredyCat\",\r\n    \"MouthBreather\",\r\n    \"CalorieBurner\",\r\n    \"SmallBladder\",\r\n    \"Anemic\",\r\n    \"SlowLearner\",\r\n    \"NoodleArms\",\r\n    \"InteriorDecorator\",\r\n    \"Regeneration\",\r\n    \"DeeperDiversLungs\",\r\n    \"SunnyDisposition\",\r\n    \"RockCrusher\",\r\n    \"Uncultured\",\r\n    \"WeakImmuneSystem\",\r\n    \"IrritableBowel\",\r\n    \"Flatulence\",\r\n    \"Snorer\",\r\n    \"Narcolepsy\",\r\n    \"Twinkletoes\",\r\n    \"Greasemonkey\",\r\n    \"MoleHands\",\r\n    \"FastLearner\",\r\n    \"DiversLung\",\r\n    \"StrongArm\",\r\n    \"IronGut\",\r\n    \"StrongImmuneSystem\",\r\n    \"BedsideManner\",\r\n    \"Caring\",\r\n    \"Aggressive\",\r\n    \"UglyCrier\",\r\n    \"BingeEater\",\r\n    \"StressVomiter\",\r\n    \"EarlyBird\",\r\n    \"NightOwl\",\r\n    \"Claustrophobic\",\r\n    \"PrefersWarmer\",\r\n    \"PrefersColder\",\r\n    \"SensitiveFeet\",\r\n    \"Fashionable\",\r\n    \"Climacophobic\",\r\n    \"SolitarySleeper\",\r\n    \"Workaholic\"\r\n];\r\nexport default TRAITS;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { setDuplicantTraits } from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setTraits: typeof setDuplicantTraits\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setTraits: setDuplicantTraits\r\n    }, dispatch);\r\n}","\r\nimport { createStructuredSelector } from \"../../../../../../../../state/utils\";\r\n\r\nimport { makeGetDuplicantTraits } from \"../../../../../../../../services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    traits: string[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    traits: makeGetDuplicantTraits<Props>(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { MenuItem, Intent } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { MultiSelect, ItemRenderer, IItemRendererProps } from \"@blueprintjs/select\";\r\n\r\nimport DuplicantTraitsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\nimport TRAITS from \"./traits\";\r\n\r\n\r\nconst TraitMultiSelect = MultiSelect.ofType<string>();\r\n\r\ntype Props = DuplicantTraitsProps & StateProps & DispatchProps;\r\nclass DuplicantTraits extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            traits\r\n        } = this.props;\r\n\r\n\r\n        return (\r\n            <div className={`fill-parent ui-duplicant-traits`}>\r\n                <TraitMultiSelect\r\n                    className=\"fill-parent-width\"\r\n                    items={TRAITS}\r\n                    selectedItems={traits}\r\n                    onItemSelect={this._onTagSelected}\r\n                    itemPredicate={this._filterItem}\r\n                    itemRenderer={this._renderItem}\r\n                    tagRenderer={tag => tag}\r\n                    tagInputProps={{ onRemove: this._onTagRemoved }}\r\n                    noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                    popoverProps={{ minimal: true }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    @autobind()\r\n    private _onTagSelected(tag: string) {\r\n        const {\r\n            duplicantID,\r\n            traits,\r\n            setTraits\r\n        } = this.props;\r\n\r\n        if (traits.indexOf(tag) !== -1) {\r\n            return;\r\n        }\r\n\r\n        setTraits({ duplicantID, traitIDs: traits.concat(tag) });\r\n    }\r\n\r\n    @autobind()\r\n    private _onTagRemoved(tag: string) {\r\n        const {\r\n            duplicantID,\r\n            traits,\r\n            setTraits\r\n        } = this.props;\r\n\r\n        const index = traits.indexOf(tag);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        const newTraits = traits.slice();\r\n        newTraits.splice(index, 1);\r\n\r\n        setTraits({ duplicantID, traitIDs: newTraits });\r\n    }\r\n\r\n    private _filterItem(query: string, trait: string) {\r\n        return trait.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(trait: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        const {\r\n            traits\r\n        } = this.props;\r\n\r\n        const isSelected = traits.indexOf(trait) !== -1;\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                icon={isSelected ? IconNames.TICK : IconNames.BLANK}\r\n                key={trait}\r\n                onClick={handleClick}\r\n                text={trait}\r\n                shouldDismissPopover={false}\r\n            />\r\n        );\r\n    };\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantTraits);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { setDuplicantSkillLevel, setDuplicantSkillExperience } from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setLevel: typeof setDuplicantSkillLevel;\r\n    setExperience: typeof setDuplicantSkillExperience;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setLevel: setDuplicantSkillLevel,\r\n        setExperience: setDuplicantSkillExperience\r\n    }, dispatch);\r\n}\r\n","\r\nimport { Dispatch as TypedDispatch } from \"react-redux\";\r\n\r\nimport { Selector, createStructuredSelector as createSS, createSelector, ParametricSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"./state\";\r\n\r\nexport type Dispatch = TypedDispatch<AppState>;\r\n\r\nexport function createStructuredSelector<StateProps>(selectors: {[K in keyof StateProps]: Selector<AppState, StateProps[K]>}, selectorCreator?: typeof createSelector): Selector<AppState, StateProps>;\r\nexport function createStructuredSelector<Props, StateProps>(selectors: {[K in keyof StateProps]: ParametricSelector<AppState, Props, StateProps[K]>}, selectorCreator?: typeof createSelector): ParametricSelector<AppState, Props, StateProps>;\r\nexport function createStructuredSelector<StateProps>(selectors: any, selectorCreator?: typeof createSelector): Selector<AppState, StateProps> {\r\n    return createSS(selectors, selectorCreator);\r\n}\r\n","\r\nimport { AttributeLevel } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\nimport { makeGetDuplicantSkills } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    skills: AttributeLevel[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    skills: makeGetDuplicantSkills<Props>(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { NumericInput } from \"@blueprintjs/core\";\r\n\r\nimport DuplicantSkillsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantSkillsProps & StateProps & DispatchProps;\r\nclass DuplicantSkills extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            skills\r\n        } = this.props;\r\n\r\n        const rows = skills.map(x => \r\n            <DuplicantSkillRow\r\n                key={x.attributeId}\r\n                id={x.attributeId}\r\n                level={x.level}\r\n                experience={x.experience}\r\n                onChangeLevel={this._onChangeLevel}\r\n                onChangeExperience={this._onChangeExperience}\r\n        />);\r\n\r\n        return (\r\n            <div className={`ui-duplicant-skills fill-parent container-scroll`}>\r\n                <table className=\"pt-html-table pt-html-table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Skill</th>\r\n                            <th>Level</th>\r\n                            <th>Experience</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    @autobind()\r\n    private _onChangeLevel(id: string, level: number) {\r\n        const {\r\n            duplicantID,\r\n            setLevel\r\n        } = this.props;\r\n        setLevel({duplicantID: duplicantID, skillId: id, level});\r\n    }\r\n\r\n    @autobind()\r\n    private _onChangeExperience(id: string, experience: number) {\r\n        const {\r\n            duplicantID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience({duplicantID: duplicantID, skillId: id, experience});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantSkills);\r\n\r\n\r\ninterface DuplicantSkillRowProps {\r\n    id: string;\r\n    level: number;\r\n    experience: number;\r\n    onChangeLevel(id: string, level: number): void;\r\n    onChangeExperience(id: string, level: number): void;\r\n}\r\n\r\nclass DuplicantSkillRow extends React.Component<DuplicantSkillRowProps> {\r\n    render() {\r\n        const {\r\n            id,\r\n            level,\r\n            experience\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td><NumericInput\r\n                    value={level}\r\n                    clampValueOnBlur={true}\r\n                    min={0}\r\n                    onValueChange={this._onLevelChange}\r\n                /></td>\r\n                <td><NumericInput\r\n                    value={experience}\r\n                    clampValueOnBlur={true}\r\n                    min={0}\r\n                    onValueChange={this._onExperienceChange}\r\n                /></td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onLevelChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeLevel\r\n        } = this.props;\r\n\r\n        value = Math.round(value);\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n        \r\n        onChangeLevel(id, value);\r\n    }\r\n\r\n    @autobind()\r\n    private _onExperienceChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeExperience\r\n        } = this.props;\r\n\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n\r\n        onChangeExperience(id, value);\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantEyes,\r\n    setDuplicantHair,\r\n    setDuplicantHead,\r\n    setDuplicantMouth,\r\n    setDuplicantBody\r\n} from \"../../../../../../../../services/save-editor/duplicants/appearance/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setEyes: typeof setDuplicantEyes;\r\n    setHair: typeof setDuplicantHair;\r\n    setHead: typeof setDuplicantHead;\r\n    setMouth: typeof setDuplicantMouth;\r\n    setBody: typeof setDuplicantBody;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setEyes: setDuplicantEyes,\r\n        setHair: setDuplicantHair,\r\n        setHead: setDuplicantHead,\r\n        setMouth: setDuplicantMouth,\r\n        setBody: setDuplicantBody,\r\n    }, dispatch);\r\n}\r\n","import { ParametricSelector, createSelector } from \"reselect\";\r\nimport { AccessorizerBehavior, getAccessoryOfType } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { makeGetBehaviorByName } from \"../../selectors\";\r\nimport { DuplicantByIDSelector, makeGetDuplicantByID } from \"../selectors\";\r\n\r\nexport const makeGetDuplicantEyes = makeGetDuplicantAppearanceMaker(\"eyes\");\r\nexport const makeGetDuplicantHair = makeGetDuplicantAppearanceMaker(\"hair\");\r\nexport const makeGetDuplicantHead = makeGetDuplicantAppearanceMaker(\"headshape\");\r\nexport const makeGetDuplicantMouth = makeGetDuplicantAppearanceMaker(\"mouth\");\r\nexport const makeGetDuplicantBody = makeGetDuplicantAppearanceMaker(\"body\");\r\n\r\nfunction makeGetDuplicantAppearanceMaker(type: string) {\r\n    return function<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n        let selector: DuplicantByIDSelector<Props>;\r\n        if (typeof source === \"function\") {\r\n            selector = source;\r\n        }\r\n        else {\r\n            selector = makeGetDuplicantByID<Props>(source);\r\n        }\r\n    \r\n        return createSelector(\r\n            makeGetBehaviorByName(selector, AccessorizerBehavior),\r\n            accessorizerBehavior => {\r\n                if(!accessorizerBehavior) return null;\r\n                const accessory = getAccessoryOfType(accessorizerBehavior.parsedData.accessories, type);\r\n                if (!accessory) return null;\r\n                return accessory.guid.Guid;\r\n            }\r\n        );\r\n    }\r\n}","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\nimport {\r\n    makeGetDuplicantEyes,\r\n    makeGetDuplicantHair,\r\n    makeGetDuplicantHead,\r\n    makeGetDuplicantMouth,\r\n    makeGetDuplicantBody\r\n} from \"@/services/save-editor/duplicants/appearance/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    eyes: string | null;\r\n    hair: string | null;\r\n    head: string | null;\r\n    mouth: string | null;\r\n    body: string | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        eyes: makeGetDuplicantEyes(dupSelector),\r\n        hair: makeGetDuplicantHair(dupSelector),\r\n        head: makeGetDuplicantHead(dupSelector),\r\n        mouth: makeGetDuplicantMouth(dupSelector),\r\n        body: makeGetDuplicantBody(dupSelector)\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { Button, MenuItem } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\nimport { \r\n    ACCESSORIZER_EYE_GUIDS,\r\n    ACCESSORIZER_HAIR_GUIDS,\r\n    ACCESSORIZER_HEAD_GUIDS,\r\n    ACCESSORIZER_MOUTH_GUIDS,\r\n    ACCESSORIZER_BODY_GUIDS\r\n} from \"oni-save-parser\";\r\n\r\n\r\nimport DuplicantAccessoryPageProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantAccessoryPageProps & StateProps & DispatchProps;\r\nclass DuplicantAccessoryPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            duplicantID,\r\n            eyes,\r\n            setEyes,\r\n\r\n            hair,\r\n            setHair,\r\n\r\n            head,\r\n            setHead,\r\n            \r\n            mouth,\r\n            setMouth,\r\n\r\n            body,\r\n            setBody,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={`ui-duplicant-accessories fill-parent layout-vertical container-scroll`}>\r\n                <AppearanceGroup name=\"Eyes\" duplicantID={duplicantID} value={eyes} accessories={ACCESSORIZER_EYE_GUIDS} onSet={setEyes}/>\r\n                <AppearanceGroup name=\"Head\" duplicantID={duplicantID} value={head} accessories={ACCESSORIZER_HEAD_GUIDS} onSet={setHead}/>\r\n                <AppearanceGroup name=\"Hair\" duplicantID={duplicantID} value={hair} accessories={ACCESSORIZER_HAIR_GUIDS} onSet={setHair}/>\r\n                <AppearanceGroup name=\"Mouth\" duplicantID={duplicantID} value={mouth} accessories={ACCESSORIZER_MOUTH_GUIDS} onSet={setMouth}/>\r\n                <AppearanceGroup name=\"Body\" duplicantID={duplicantID} value={body} accessories={ACCESSORIZER_BODY_GUIDS} onSet={setBody}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantAccessoryPage);\r\n\r\n\r\ninterface AppearanceGroupProps {\r\n    duplicantID: number;\r\n    name: string;\r\n    accessories: string[];\r\n    value: string | null;\r\n    onSet({duplicantID, accessoryID}: {duplicantID: number, accessoryID: string}): void\r\n}\r\nclass AppearanceGroup extends React.Component<AppearanceGroupProps> {\r\n    render() {\r\n        const {\r\n            name,\r\n            accessories,\r\n            value\r\n        } = this.props;\r\n        return (\r\n            <div className=\"pt-form-group pt-inline\">\r\n            <label className=\"pt-label\">\r\n                {name}\r\n            </label>\r\n            <div className=\"pt-form-content\">\r\n                <StringSelect\r\n                    items={accessories}\r\n                    itemRenderer={this._renderItem}\r\n                    onItemSelect={this._onSet}\r\n                    filterable={false}\r\n                    resetOnClose={true}\r\n                    resetOnSelect={true}\r\n                    popoverProps={{ minimal: true }}\r\n                >\r\n                    <Button rightIcon=\"caret-down\" text={value || \"[Accessory not Found]\"} />\r\n                </StringSelect>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(accessoryID: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={accessoryID}\r\n                onClick={handleClick}\r\n                text={accessoryID}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onSet(accessoryID: string) {\r\n        const {\r\n            duplicantID,\r\n            onSet\r\n        } = this.props;\r\n        onSet({duplicantID, accessoryID});\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantGender,\r\n    setDuplicantVoice,\r\n    setDuplicantScale,\r\n    setDuplicantHealthState,\r\n} from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setGender: typeof setDuplicantGender;\r\n    setVoice: typeof setDuplicantVoice;\r\n    setScale: typeof setDuplicantScale;\r\n    setHealthState: typeof setDuplicantHealthState;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setGender: setDuplicantGender,\r\n        setVoice: setDuplicantVoice,\r\n        setScale: setDuplicantScale,\r\n        setHealthState: setDuplicantHealthState\r\n    }, dispatch);\r\n}\r\n","\r\nimport { MinionGender, Vector3, AttributeLevel } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport {\r\n    makeGetDuplicantByID,\r\n    makeGetDuplicantGender,\r\n    makeGetDuplicantVoice,\r\n    makeGetDuplicantScale,\r\n    makeGetDuplicantHealthState\r\n} from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    gender: MinionGender | null;\r\n    voiceIdx: number | null;\r\n    scale: Vector3 | null;\r\n    healthState: number | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        gender: makeGetDuplicantGender(dupSelector),\r\n        voiceIdx: makeGetDuplicantVoice(dupSelector),\r\n        scale: makeGetDuplicantScale(dupSelector),\r\n        healthState: makeGetDuplicantHealthState(dupSelector)\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { HEALTH_STATE_NAMES, MINION_IDENTITY_GENDERS, MinionGender } from \"oni-save-parser\";\r\n\r\nimport { Button, MenuItem, NumericInput } from \"@blueprintjs/core\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\nconst NumberSelect = Select.ofType<number>();\r\n\r\n\r\nimport DuplicantGeneralProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\n// We only care about > 0\r\nconst MIN_SCALE = Number.EPSILON;\r\n\r\ntype Props = DuplicantGeneralProps & StateProps & DispatchProps;\r\nclass DuplicantGeneralPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            gender,\r\n            scale,\r\n            healthState,\r\n            voiceIdx\r\n        } = this.props;\r\n\r\n        const scaleX = scale ? scale.x : 1;\r\n        const scaleY = scale ? scale.y : 1;\r\n\r\n        let healthStateStr: string;\r\n        if (healthState != null && healthState >= 0 && healthState < HEALTH_STATE_NAMES.length) {\r\n            healthStateStr = HEALTH_STATE_NAMES[healthState];\r\n        }\r\n        else {\r\n            healthStateStr = `<Unknown Health State ${healthState}>`;\r\n        }\r\n\r\n        return (\r\n            <div className=\"fill-parent\">\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Gender\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <StringSelect\r\n                            // TODO: Export from oni-save-parser\r\n                            items={MINION_IDENTITY_GENDERS}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onGenderSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={gender || \"MALE\"} />\r\n                        </StringSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Voice\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <NumberSelect\r\n                            // TODO: get from oni-save-parser\r\n                            items={[0, 1, 2, 3, 4]}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onVoiceSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={`Voice ${voiceIdx || 0}`} />\r\n                        </NumberSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Scale\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Horizontal</span>\r\n                            <NumericInput min={MIN_SCALE} clampValueOnBlur={true} value={scaleX} onValueChange={this._onScaleX} />\r\n                        </div>\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Vertical</span>\r\n                            <NumericInput min={MIN_SCALE} clampValueOnBlur={true} value={scaleY} onValueChange={this._onScaleY} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Health State\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <StringSelect\r\n                            items={HEALTH_STATE_NAMES}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onHealthStateSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={healthStateStr} />\r\n                        </StringSelect>\r\n                        <div className=\"pt-form-helper-text\">The duplicant's current overall health condition.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string | number, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onHealthStateSelected(healthState: string) {\r\n        const {\r\n            duplicantID,\r\n            setHealthState\r\n        } = this.props;\r\n\r\n        // Need to get the enum value of the display text.\r\n        const stateIndex = HEALTH_STATE_NAMES.indexOf(healthState);\r\n        if (stateIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        setHealthState({ duplicantID, healthState: stateIndex });\r\n    }\r\n\r\n    @autobind()\r\n    private _onGenderSelected(gender: string) {\r\n        const {\r\n            duplicantID,\r\n            setGender\r\n        } = this.props;\r\n        setGender({duplicantID, gender: gender as MinionGender});\r\n    }\r\n\r\n    @autobind()\r\n    private _onVoiceSelected(voiceIdx: number) {\r\n        const {\r\n            duplicantID,\r\n            setVoice\r\n        } = this.props;\r\n        setVoice({duplicantID, voiceIdx});\r\n    }\r\n\r\n    @autobind()\r\n    private _onScaleX(value: number) {\r\n        const {\r\n            duplicantID,\r\n            setScale\r\n        } = this.props;\r\n\r\n        // Negative numbers dont render; probably because sprite normal faces\r\n        //  away from game camera.\r\n        if (value === 0 || isNaN(value)) {\r\n            value = 1;\r\n        }\r\n\r\n        setScale({ duplicantID, scaleX: value });\r\n    }\r\n\r\n    @autobind()\r\n    private _onScaleY(value: number) {\r\n        const {\r\n            duplicantID,\r\n            setScale\r\n        } = this.props;\r\n\r\n        // Negative numbers dont render; probably because sprite normal faces\r\n        //  away from game camera.\r\n        if (value <= 0 || isNaN(value)) {\r\n            value = 1;\r\n        }\r\n\r\n        setScale({ duplicantID, scaleY: value });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantGeneralPage);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../state/utils\";\r\n\r\nimport { renameDuplicant } from \"../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    renameDuplicant: typeof renameDuplicant;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        renameDuplicant\r\n    }, dispatch);\r\n}","\r\nimport { MinionIdentityBehavior } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetBehaviorByName } from \"@/services/save-editor/selectors\";\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    identityBehavior: MinionIdentityBehavior | null;\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    identityBehavior: makeGetBehaviorByName(makeGetDuplicantByID<Props>(\"duplicantID\"), MinionIdentityBehavior)\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n    EditableText,\r\n    Tabs,\r\n    Tab,\r\n    NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport { error, FAILURE_TYPE } from \"../../../../../../logging\";\r\n\r\n\r\nimport DuplicantEditorProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\nimport GeneralPage from \"./pages/General\";\r\nimport AppearancePage from \"./pages/Appearance\";\r\nimport SkillsPage from \"./pages/Skills\";\r\nimport TraitsPage from \"./pages/Traits\";\r\nimport JobsPage from \"./pages/Jobs\";\r\nimport EffectsPage from \"./pages/Effects\";\r\n\r\n\r\ntype Props = DuplicantEditorProps & StateProps & DispatchProps;\r\ninterface State {\r\n    rename: string | null;\r\n}\r\nclass DuplicantEditor extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rename: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            duplicantID,\r\n            identityBehavior\r\n        } = this.props;\r\n\r\n        const {\r\n            rename\r\n        } = this.state;\r\n\r\n        if (!identityBehavior) {\r\n            error(\"Duplicant identity behavior missing\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            return (\r\n                <NonIdealState visual={IconNames.ERROR}>\r\n                    Duplicant has no identity behavior.\r\n                </NonIdealState>\r\n            )\r\n        }\r\n        \r\n        const name = rename || identityBehavior.parsedData.name;\r\n        \r\n        return (\r\n            <div className={`ui-duplicant-editor layout-vertical ${className}`}>\r\n                <div className=\"layout-item\">\r\n                    <h1 className=\"ui-title\">\r\n                        <EditableText\r\n                            value={name}\r\n                            onChange={this._onNameChange}\r\n                            onConfirm={this._onRename}\r\n                        />\r\n                    </h1> <span className=\"pt-text-muted\">(click to edit name)</span>\r\n                </div>\r\n                <div className=\"layout-item-fill\">\r\n                    <Tabs id=\"DuplicantEditCategories\" className=\"ui-category-tabs fill-parent layout-vertical\" renderActiveTabPanelOnly={true}>\r\n                        <Tab className=\"layout-item-fill\" id=\"general\" title=\"General\" panel={<GeneralPage duplicantID={duplicantID} />} />\r\n                        <Tab className=\"layout-item-fill\" id=\"appearance\" title=\"Appearance\" panel={<AppearancePage duplicantID={duplicantID} />} />\r\n                        <Tab className=\"layout-item-fill\" id=\"skills\" title=\"Skills\" panel={<SkillsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"traits\" title=\"Traits\" panel={<TraitsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"jobs\" title=\"Jobs\" panel={<JobsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"effects\" title=\"Effects\" panel={<EffectsPage duplicantID={duplicantID}/>} />\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onNameChange(str: string) {\r\n        this.setState(s => ({\r\n            ...s,\r\n            rename: str\r\n        }));\r\n    }\r\n\r\n    @autobind()\r\n    private _onRename() {\r\n        const name = this.state.rename;\r\n        if (!name) return;\r\n        this.props.renameDuplicant({duplicantID: this.props.duplicantID, name});\r\n        this.setState(s => ({\r\n            ...s,\r\n            rename: null\r\n        }));\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantEditor);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"../../../../../../state/utils\";\r\n\r\nimport { duplicantsIDs } from \"../../../../../../services/save-editor/duplicants/selectors\";\r\n\r\nexport interface StateProps {\r\n    duplicantsIDs: number[];\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    duplicantsIDs\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport { GameObject } from \"oni-save-parser\";\r\nimport { createSelector, ParametricSelector } from \"reselect\";\r\nimport {\r\n    MinionGender,\r\n    Vector3,\r\n    KPrefabIDBehavior,\r\n    MinionIdentityBehavior,\r\n    AIAttributeLevelsBehavior,\r\n    AttributeLevel,\r\n    AITraitsBehavior,\r\n    AIEffectsBehavior,\r\n    EffectInstance,\r\n    HealthBehavior,\r\n    AccessorizerBehavior,\r\n    Accessory,\r\n    getBehavior,\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"../../../state\";\r\n\r\nimport { makeGetGameObjectsByType, makeGetBehaviorByName } from \"../selectors\";\r\n\r\n\r\n\r\n\r\nexport const duplicants = makeGetGameObjectsByType(\"Minion\");\r\nexport const duplicantsIDs = createSelector(\r\n    duplicants,\r\n    duplicants => {\r\n        const ids: number[] = [];\r\n        for (let duplicant of duplicants) {\r\n            const idBehavior = getBehavior(duplicant, KPrefabIDBehavior);\r\n            if (idBehavior && idBehavior.parsedData) {\r\n                ids.push(idBehavior.parsedData.InstanceID);\r\n            }\r\n        }\r\n        return ids;\r\n    }\r\n);\r\n\r\nexport const duplicantsMap = createSelector(\r\n    duplicants,\r\n    duplicants => {\r\n        const dups: {[key: number]: GameObject} = {};\r\n        for (let duplicant of duplicants) {\r\n            const idBehavior = getBehavior(duplicant, KPrefabIDBehavior);\r\n            if (idBehavior && idBehavior.parsedData) {\r\n                dups[idBehavior.parsedData.InstanceID] = duplicant;\r\n            }\r\n        }\r\n        return dups;\r\n    }\r\n)\r\n\r\nexport function makeGetDuplicantByID<Props>(propKey: keyof Props): ParametricSelector<AppState, Props, GameObject | null> {\r\n    return createSelector(\r\n        duplicantsMap,\r\n        // We know the type of Props, but we need to have TS validate it as a string somehow...\r\n        (_: AppState, props: any) => props[propKey],\r\n        (duplicantsMap, id) => {\r\n            if (!Object.prototype.hasOwnProperty.call(duplicantsMap, id)) {\r\n                return null;\r\n            }\r\n            return duplicantsMap[id];\r\n        }\r\n    );\r\n};\r\nexport type DuplicantByIDSelector<Props> = ParametricSelector<AppState, Props, GameObject | null>;\r\n\r\nexport function makeGetDuplicantSkills<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, AttributeLevel[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AIAttributeLevelsBehavior),\r\n        levelBehavior => levelBehavior ? levelBehavior.parsedData.saveLoadLevels : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantTraits<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AITraitsBehavior),\r\n        traitsBehavior => traitsBehavior ? traitsBehavior.parsedData.TraitIds : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantEffects<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, EffectInstance[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AIEffectsBehavior),\r\n        effectsBehavior => effectsBehavior ? effectsBehavior.parsedData.saveLoadEffects : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantHealthState<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, number | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, HealthBehavior),\r\n        healthBehavior => healthBehavior ? healthBehavior.parsedData.State : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantScale<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, Vector3 | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        selector,\r\n        gameObject => gameObject ? gameObject.scale : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantGender<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, MinionGender | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionIdentityBehavior),\r\n        identityBehavior => identityBehavior ? identityBehavior.parsedData.gender : null\r\n    );\r\n}\r\nexport function makeGetDuplicantVoice<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, number | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionIdentityBehavior),\r\n        identityBehavior => identityBehavior ? identityBehavior.parsedData.voiceIdx : null\r\n    );\r\n}\r\n","\r\nimport { createSelector } from \"reselect\";\r\nimport { MinionIdentityBehavior, MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetBehaviorByName } from \"@/services/save-editor/selectors\";\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    identityBehavior: MinionIdentityBehavior | null;\r\n    resumeBehavior: MinionResumeBehavior | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const duplicant = makeGetDuplicantByID<Props>(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        identityBehavior: makeGetBehaviorByName(duplicant, MinionIdentityBehavior),\r\n        resumeBehavior: makeGetBehaviorByName(duplicant, MinionResumeBehavior)\r\n    })\r\n};\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { Card } from \"@blueprintjs/core\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { error, FAILURE_TYPE } from \"../../../../../../logging\";\r\n\r\n\r\n\r\nimport DuplicantPortraitProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\ntype Props = DuplicantPortraitProps & StateProps;\r\nclass DuplicantPortrait extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            className,\r\n            identityBehavior,\r\n            resumeBehavior\r\n        } = this.props;\r\n\r\n        let outerClassName = `ui-duplicant-portrait ${className}`;\r\n\r\n        let name: string;\r\n        let role: string;\r\n\r\n        if (identityBehavior) {\r\n            name = identityBehavior.parsedData.name;\r\n        }\r\n        else {\r\n            error(\"Duplicant not found or identity behavior missing.\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            name = \"[IDENTITY MISSING]\";\r\n        }\r\n\r\n        if (resumeBehavior) {\r\n            role = resumeBehavior.parsedData.currentRole\r\n        }\r\n        else {\r\n            error(\"resume behavior missing.\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            role = \"[RESUME MISSING]\";\r\n        }\r\n\r\n        return (\r\n            <Card className={outerClassName} interactive={true} onClick={this._onClick}>\r\n                <h5 className=\"ui-duplicant-name\">{name}</h5>\r\n                {/* TODO render a picture.  Plenty of data in identity to do so.  Also see Accessorizer */}\r\n                <div className=\"ui-duplicant-role\">{role}</div>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onClick() {\r\n        const {\r\n            duplicantID,\r\n            onClick\r\n        } = this.props;\r\n        if (onClick) onClick(duplicantID);\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantPortrait);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport DuplicantPortrait from \"../DuplicantPortrait\";\r\n\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\nexport interface DuplicantsListProps {\r\n    className?: string;\r\n    selectedDuplicantID?: number | null;\r\n    onDuplicantClick?(duplicantID: number): void;\r\n}\r\n\r\ntype Props = DuplicantsListProps & StateProps;\r\nclass DuplicantsList extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            className,\r\n            duplicantsIDs,\r\n            selectedDuplicantID\r\n        } = this.props;\r\n\r\n        const elements = duplicantsIDs.map(x => <DuplicantPortrait key={x} className={x === selectedDuplicantID ? \"pt-active\" : \"\"} duplicantID={x} onClick={this._onDuplicantClick} />);\r\n\r\n        return (\r\n            <div className={`${className || ''} ui-duplicant-list`}>\r\n                <div className={`fill-parent layout-horizontal layout-wrap container-scroll`}>\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onDuplicantClick(duplicantID: number) {\r\n        const {\r\n            onDuplicantClick\r\n        } = this.props;\r\n\r\n        if (onDuplicantClick) {\r\n            onDuplicantClick(duplicantID);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantsList);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { NonIdealState } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\n\r\nimport DuplicantsList from \"./components/DuplicantsList\";\r\nimport DuplicantEditor from \"./components/DuplicantEditor\";\r\n\r\n\r\ntype Props = {};\r\ninterface State {\r\n    selectedDuplicantID: number | null;\r\n}\r\nclass DuplicantsPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDuplicantID: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedDuplicantID\r\n        } = this.state;\r\n\r\n        let content: React.ReactFragment;\r\n        if (selectedDuplicantID != null) {\r\n            content = <DuplicantEditor className=\"fill-parent\" duplicantID={selectedDuplicantID}/>\r\n        }\r\n        else {\r\n            content = (\r\n                <NonIdealState visual={IconNames.MUGSHOT}>\r\n                    Select a duplicant to edit\r\n                </NonIdealState>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui-page ui-page-duplicants fill-parent layout-vertical\">\r\n                <DuplicantsList className=\"layout-item\" selectedDuplicantID={selectedDuplicantID} onDuplicantClick={this._onDuplicantSelected} />\r\n                <div className=\"layout-item-fill\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onDuplicantSelected(duplicantID: number) {\r\n        this.setState(s => ({\r\n            ...s,\r\n            selectedDuplicantID: duplicantID\r\n        }));\r\n    }\r\n}\r\n\r\nexport default DuplicantsPage\r\n\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Spinner,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default class LoadingSaveFilePageComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <NonIdealState>\r\n                <Text>Loading File</Text>\r\n                <div>\r\n                    <Spinner large={true}/>\r\n                </div>\r\n                <Text>TODO progress here</Text>\r\n            </NonIdealState>\r\n        );\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { Dispatch } from \"@/state/utils\";\r\n\r\nexport interface DispatchProps { }\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return {}\r\n}","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { loadError } from \"@/services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    loadError: Error | null;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    loadError\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass ErrorPageComponent extends React.Component<Props> {\r\n    render() {\r\n        let {\r\n            loadError\r\n        } = this.props;\r\n\r\n        if (!loadError) {\r\n            loadError = new Error(\"Well, this is weird... The Error page loaded, but there is no error.\");\r\n            loadError.stack = \"I really don't know what to do about this...\"\r\n        }\r\n\r\n        return (\r\n            <NonIdealState visual={IconNames.ERROR} description=\"An Error Occurred\">\r\n                <Text>{loadError.message}</Text>\r\n                <div>\r\n                    <code>{loadError.stack}</code>\r\n                </div>\r\n            </NonIdealState>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorPageComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"@/state/utils\";\r\n\r\nimport { loadSavefile } from \"@/services/save-editor/savefile/actions\";\r\n\r\nexport interface DispatchProps {\r\n    loadSavefile: typeof loadSavefile;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        loadSavefile\r\n    }, dispatch);\r\n}","\r\nexport interface StateProps {\r\n\r\n}\r\n\r\nexport default function(): StateProps {\r\n    return {};\r\n}\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Button,\r\n    Intent\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\nconst saveDescription = \"Oxygen Not Included saves can be found in your documents folder under\";\r\n\r\n// TODO: Show correct path based on user's OS.\r\nconst savePath = \"Klei/OxygenNotIncluded/save_files\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass NoSaveLoadedPageComponent extends React.Component<Props> {\r\n    private _input: HTMLInputElement | null = null;\r\n    \r\n    render() {\r\n        const {\r\n            loadSavefile\r\n        } = this.props;\r\n        return (\r\n            <NonIdealState\r\n                visual={IconNames.FLOPPY_DISK}\r\n                action={\r\n                    <Button intent={Intent.PRIMARY} onClick={this._onLoadClick}>Load a .sav file</Button>\r\n                }\r\n                description=\"No save has been loaded.\"\r\n            >\r\n                <div>{saveDescription} <code>{savePath}</code></div>\r\n                <input\r\n                    ref={el => this._input = el}\r\n                    style={{display: \"none\"}}\r\n                    className=\"pt-button pt-intent-primary\"\r\n                    type=\"file\"\r\n                    accept=\".sav\"\r\n                    onChange={this._onLoadFile}\r\n                />\r\n            </NonIdealState>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadClick() {\r\n        if (!this._input) return;\r\n        this._input.click();\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadFile(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const files = change.target.files;\r\n        if (!files || files.length === 0) return;\r\n        this.props.loadSavefile({file: files[0]});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoSaveLoadedPageComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport {\r\n    isSaveChosen,\r\n    isSaveLoading,\r\n    loadError\r\n} from \"@/services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    isSaveChosen: boolean;\r\n    isSaveLoading: boolean;\r\n    loadError: Error | null;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    isSaveChosen,\r\n    isSaveLoading,\r\n    loadError\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\n\r\nimport {\r\n    Card,\r\n    Elevation,\r\n    Menu,\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\nimport NoSaveLoadedPage from \"./components/NoSaveLoaded\";\r\nimport ErrorPage from \"./components/Error\";\r\nimport LoadingSaveFilePage from \"./components/LoadingSaveFile\";\r\n\r\nimport DuplicantsPage from \"./pages/Duplicants\";\r\n\r\nimport Error404Page from \"../404\";\r\n\r\ntype Props = StateProps;\r\nclass SaveEditorPageComponent extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            loadError,\r\n            isSaveChosen,\r\n            isSaveLoading\r\n        } = this.props;\r\n\r\n        let rootComponent: React.ReactChild;\r\n\r\n        if (loadError) {\r\n            // Show error screen\r\n            return <ErrorPage/>;\r\n        }\r\n\r\n        if (!isSaveChosen) {\r\n            return <NoSaveLoadedPage/>\r\n        }\r\n\r\n        else if (isSaveLoading) {\r\n            return <LoadingSaveFilePage/>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui-page ui-page-saveeditor fill-parent\">\r\n                <Switch>\r\n                    <Redirect exact from=\"/editor\" to=\"/editor/duplicants\" />\r\n                    <Route exact path=\"/editor/duplicants\" component={DuplicantsPage} />\r\n                    <Route component={Error404Page}/>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SaveEditorPageComponent);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Link, LinkProps } from \"react-router-dom\"\r\nimport { autobind } from \"core-decorators\";\r\n\r\nexport interface ActiveAwareLinkProps extends LinkProps {\r\n    exact?: boolean;\r\n}\r\ntype Props = ActiveAwareLinkProps & RouteComponentProps<{}>;\r\nclass ActiveAwareLink extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            to,\r\n            location,\r\n            children,\r\n            onClick,\r\n            className,\r\n            exact,\r\n\r\n            // Need to strip this out of passed props\r\n            staticContext,\r\n            ...other\r\n        } = this.props\r\n        const pathName = location.pathname;\r\n        let match: boolean;\r\n        \r\n        if (exact) match = to === pathName;\r\n        else match = matchPartialPath(pathName, to.toString());\r\n\r\n        if (match) {\r\n            return <span className={`pt-active pt-intent-primary ${className || \"\"}`}>{children}</span>;\r\n        }\r\n\r\n        return <Link to={to} className={className || \"\"} {...other} onClick={this._onClick}>{children}</Link>;\r\n    }\r\n\r\n    @autobind()\r\n    private _onClick(event: React.MouseEvent<HTMLAnchorElement>) {\r\n        const {\r\n            exact,\r\n            location,\r\n            to,\r\n            onClick\r\n        } = this.props;\r\n        const pathName = location.pathname;\r\n\r\n        let match: boolean;\r\n        if (exact) match = to === pathName;\r\n        else match = matchPartialPath(pathName, to.toString());\r\n\r\n        if (match) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        }\r\n    }\r\n}\r\nexport default withRouter(ActiveAwareLink);\r\n\r\nfunction matchPartialPath(pathName: string, to: string): boolean {\r\n    if (pathName === to) return true;\r\n\r\n    if (!pathName.startsWith(to)) return false;\r\n\r\n    // Need to make sure we matched up to a path seperator.\r\n    if (pathName[to.length] !== '/') return false;\r\n    return true;\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\n\r\nimport {\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport ActiveAwareLink from \"../ActiveAwareLink\";\r\n\r\nimport { AppNavMenuProps } from \"./props\";\r\nimport { NavMenuEntry } from \"./interfaces\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nclass AppNavMenu extends React.Component<AppNavMenuProps & RouteComponentProps<any>> {\r\n    render() {\r\n        const {\r\n            className,\r\n            entries\r\n        } = this.props;\r\n\r\n        const links = this._renderEntries(entries);\r\n        return (\r\n            <div className={`ui-nav-menu ${className || \"\"}`}>\r\n                {links}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderEntries(entries: NavMenuEntry[], key?: any): React.ReactChild[] {\r\n        key = key ? String(key) + \"-\" : \"\";\r\n\r\n        const fragments: React.ReactChild[] = [];\r\n        let previousWasGroup = false;\r\n\r\n        entries.forEach((entry, i) => {\r\n            const rendered = this._renderEntry(entry, key + i);\r\n            if (!rendered) return;\r\n            \r\n            if (previousWasGroup) {\r\n                fragments.push(<MenuDivider key={key + (i - 1) + \"-divider\"}/>)\r\n            }\r\n\r\n            if (Array.isArray(rendered)) {\r\n                fragments.push(...rendered);\r\n                previousWasGroup = rendered.length > 0;\r\n            }\r\n            else {\r\n                fragments.push(rendered);\r\n            }\r\n        });\r\n\r\n        return fragments;\r\n    }\r\n\r\n    private _renderEntry(entry: NavMenuEntry, key: any): React.ReactChild | React.ReactChild[] {\r\n        switch(entry.type) {\r\n            case \"group\": {\r\n                const rendered = this._renderEntries(entry.entries, key);\r\n                if (entry.name) {\r\n                    rendered.unshift(\r\n                        <div key={`${key}-header`} className=\"pt-menu-header\"><h6>{entry.name}</h6></div>\r\n                    );\r\n                }\r\n                return rendered;\r\n            }\r\n            case \"link\": {\r\n                const pathName = this.props.location.pathname;\r\n                const {\r\n                    name,\r\n                    path,\r\n                    subEntries,\r\n                    collapse\r\n                } = entry;\r\n                const primaryLink = <ActiveAwareLink key={key} exact={subEntries != null} className=\"pt-menu-item\" to={path}>{name}</ActiveAwareLink>;\r\n                if (!subEntries || (collapse && !matchPartialPath(pathName, path))) {\r\n                    return primaryLink;\r\n                }\r\n                else {\r\n                    return [\r\n                        primaryLink,\r\n                        <ul key={`${key}-list`}>\r\n                            {this._renderEntries(subEntries).map((x, i) => <li key={`${key}-${i}`}>{x}</li>)}\r\n                        </ul>\r\n                    ];\r\n                }\r\n            }\r\n            default: \r\n                return throwUnknownMenuEntry(entry);\r\n        }\r\n    }\r\n}\r\nexport default withRouter(AppNavMenu);\r\n\r\nfunction throwUnknownMenuEntry(entry: never): never {\r\n    throw new Error(`Unknown entry type \"${(entry as NavMenuEntry).type}\".`);\r\n}\r\n\r\n\r\nfunction matchPartialPath(pathName: string, to: string): boolean {\r\n    if (pathName === to) return true;\r\n\r\n    if (!pathName.startsWith(to)) return false;\r\n\r\n    // Need to make sure we matched up to a path seperator.\r\n    if (pathName[to.length] !== '/') return false;\r\n    return true;\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    saveFileName,\r\n    isSaveEnabled\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    saveFileName: string | null;\r\n    isSaveEnabled: boolean;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    saveFileName,\r\n    isSaveEnabled\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../state/utils\";\r\n\r\nimport { loadSavefile, saveSavefile } from \"../../services/save-editor/savefile/actions\";\r\n\r\nexport interface DispatchProps {\r\n    loadSavefile: typeof loadSavefile;\r\n    saveSavefile: typeof saveSavefile;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        loadSavefile,\r\n        saveSavefile\r\n    }, dispatch);\r\n}\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport {\r\n    Navbar,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Text,\r\n    Button,\r\n    Alignment\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport { AppNavBarProps } from \"./props\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\ntype Props = AppNavBarProps & StateProps & DispatchProps;\r\nclass AppNavBar extends React.Component<Props> {\r\n    private _input: HTMLElement | null = null;\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            saveFileName,\r\n            isSaveEnabled\r\n        } = this.props;\r\n\r\n        return (\r\n            <Navbar className={`ui-app-navbar ${className || \"\"}`}>\r\n                <NavbarGroup>\r\n                    <NavbarHeading>ONI Save Editor</NavbarHeading>\r\n                    <Text ellipsize={true}>{saveFileName || \"\"}</Text>\r\n                </NavbarGroup>\r\n                <NavbarGroup align={Alignment.RIGHT}>\r\n                    <Button icon={IconNames.UPLOAD} onClick={this._onLoadClick}>Load</Button>\r\n                    <Button icon={IconNames.FLOPPY_DISK} disabled={!isSaveEnabled} onClick={this._onSaveClick}>Save</Button>\r\n                    <input\r\n                        ref={el => this._input = el}\r\n                        style={{ display: \"none\" }}\r\n                        className=\"pt-button pt-intent-primary\"\r\n                        type=\"file\"\r\n                        accept=\".sav\"\r\n                        onChange={this._onLoadFile}\r\n                    />\r\n                </NavbarGroup>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onSaveClick() {\r\n        this.props.saveSavefile({});\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadClick() {\r\n        if (!this._input) return;\r\n        this._input.click();\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadFile(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const files = change.target.files;\r\n        if (!files || files.length === 0) return;\r\n        this.props.loadSavefile({file: files[0]});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavBar);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    saveFileName,\r\n    isSaveSaving\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    saveFileName: string | null;\r\n    isSaveSaving: boolean;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    saveFileName,\r\n    isSaveSaving\r\n});\r\nexport default mapStateToProps;\r\n\r\n// Was pretty sure this used to work, once upon a time.\r\n//export type StateProps = typeof mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, Switch, withRouter } from \"react-router\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Text,\r\n    Dialog,\r\n    Button,\r\n    Alignment,\r\n    Spinner,\r\n    NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\nimport AppNavBar from \"../AppNavBar\";\r\nimport AppNavMenu from \"../AppNavMenu\";\r\n\r\nimport SaveEditorPage from \"../../pages/SaveEditor\";\r\nimport ChangelogPage from \"../../pages/Changelog\";\r\nimport Error404Page from \"../../pages/404\";\r\nimport { NavMenuEntry } from \"../AppNavMenu/interfaces\";\r\n\r\ntype OwnProps = StateProps;\r\nclass AppComponent extends React.Component<OwnProps> {\r\n    private _input: HTMLInputElement | null = null;\r\n\r\n    render() {\r\n        const {\r\n            saveFileName,\r\n            isSaveSaving\r\n        } = this.props;\r\n\r\n        const navMenuEntries: NavMenuEntry[] = [\r\n            {\r\n                // Save Editor\r\n                type: \"link\",\r\n                path: \"/editor\",\r\n                name: \"Save Editor\",\r\n                subEntries: [\r\n                    {\r\n                        type: \"link\",\r\n                        path: \"/editor/duplicants\",\r\n                        name: \"Duplicants\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                // Utility items\r\n                type: \"group\",\r\n                entries: [\r\n                    \r\n                ]\r\n            },\r\n            {\r\n                type: \"link\",\r\n                path: \"/changelog\",\r\n                name: \"Duplicity Changelog\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"ui-app-root pt-app pt-dark fill-parent layout-vertical\">\r\n                <AppNavBar className=\"layout-item\"/>\r\n                <div className=\"layout-item-fill layout-horizontal\">\r\n                    <AppNavMenu className=\"layout-item\" entries={navMenuEntries} />\r\n                    <div className=\"layout-item-fill\">\r\n                        <Switch>\r\n                            <Route path=\"/editor\" component={SaveEditorPage}/>\r\n                            <Route exact path=\"/404\" component={Error404Page}/>\r\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\r\n                            <Redirect exact from=\"/\" to=\"/editor\"/>\r\n                            <Route component={Error404Page}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n                <Dialog isOpen={isSaveSaving} title=\"Saving File\" icon={IconNames.SAVED} isCloseButtonShown={false}>\r\n                    <NonIdealState>\r\n                        <div>\r\n                            <Spinner large={true}/>\r\n                        </div>\r\n                        <div>\r\n                            Saving <code>{saveFileName}</code>\r\n                        </div>\r\n                    </NonIdealState>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps)(AppComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { hot } from \"react-hot-loader\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n// react-router wants to wrap every element we have in a new element.  Because composability!\r\n//  without wrapping this in a <Route/> from the outside, the PureComponent hot will not see\r\n//  any changes, and the broken context system is ignored.\r\n//  Every other library out their uses an external context store similar to the new react context\r\n//  pattern, but router just blames everyone else for honoring shouldComponentUpdate and says wontfix.\r\n// Might be better off removing route altogether and staying a SPA.\r\nexport default withRouter(hot(module)(App) as any);\r\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, #root {\\n  height: 100%;\\n  width: 100%; }\\n\\nbody {\\n  margin: 0;\\n  padding: 0; }\\n\\n.fill-parent, .fill-parent-width, .fill-parent-height {\\n  /* Fill parent to our outsides.*/\\n  box-sizing: border-box; }\\n\\n.fill-parent, .fill-parent-width {\\n  width: 100%; }\\n\\n.fill-parent, .fill-parent-height {\\n  height: 100%; }\\n\\n.layout-wrap {\\n  flex-wrap: wrap; }\\n\\n/*\\r\\n============================================================================\\r\\nHorizontal and Vertical Layouts\\r\\n============================================================================\\r\\n*/\\n/* Container for items that can fill up the available space, and optionally be constrained by it. */\\n.layout-vertical {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.layout-horizontal {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.layout-item, .layout-item-fill {\\n  box-sizing: border-box; }\\n\\n.layout-vertical > div, .layout-horizontal > div, .layout-vertical > .layout-item, .layout-horizontal > .layout-item {\\n  flex: none; }\\n\\n.layout-vertical > .layout-item-fill, .layout-horizontal > .layout-item-fill {\\n  flex: 1 1 auto; }\\n\\n.layout-vertical > .layout-item-constrain, .layout-horizontal > .layout-item-constrain {\\n  flex: 0 1 auto; }\\n\\n.layout-vertical > .layout-item-fill, .layout-vertical > .layout-item-constrain {\\n  /* Flex sets min-height to auto, we need to allow it to shrink down */\\n  min-height: 0;\\n  /*\\r\\n    Maintain some sort of inner css specified (vs actual?) value for height, so that \\r\\n    child elements can use height percentages and fill their parent (us)\\r\\n    */\\n  height: 100%; }\\n\\n.layout-horizontal > .layout-item-fill, .layout-horizontal > .layout-item-constrain {\\n  min-width: 0;\\n  width: 100%; }\\n\\n/*\\r\\n============================================================================\\r\\nContent Containers\\r\\n============================================================================\\r\\n*/\\n.container-scroll {\\n  overflow: auto; }\\n\\n/*\\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\\n */\\n.ui-app-root {\\n  background-color: #182026; }\\n\\n.pt-navbar.ui-app-navbar {\\n  background-color: #2965cc; }\\n  .pt-navbar.ui-app-navbar .pt-navbar-group .pt-button {\\n    margin: 0 4px; }\\n\\n.ui-page-404 .ui-title {\\n  font-size: 20pt; }\\n\\n.ui-page-404 .ui-title-secondary {\\n  font-size: 12pt; }\\n\\n.ui-page-404 .ui-body {\\n  margin-top: 8px; }\\n\\n.ui-nav-menu {\\n  padding: 15px;\\n  background-color: #394b59; }\\n\\n.ui-page-duplicants .ui-duplicant-list {\\n  background-color: #bfccd6;\\n  height: 340px; }\\n  .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait {\\n    width: 150px;\\n    height: 150px;\\n    margin: 10px;\\n    cursor: pointer; }\\n    .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait .ui-duplicant-name {\\n      text-align: center; }\\n    .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait .ui-duplicant-role {\\n      text-align: center; }\\n  .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait.pt-active {\\n    background-color: #f29d49; }\\n\\n.ui-page-duplicants .ui-duplicant-editor {\\n  box-sizing: border-box;\\n  padding: 5px; }\\n  .ui-page-duplicants .ui-duplicant-editor .ui-title {\\n    display: inline-block;\\n    width: auto; }\\n\\n.ui-page-duplicants .ui-duplicant-skills .pt-html-table {\\n  width: 100%;\\n  max-height: 100%; }\\n\\n.ui-page-duplicants .ui-duplicant-effects .pt-html-table {\\n  width: 100%;\\n  max-height: 100%; }\\n\\n.ui-page-duplicants .ui-duplicant-jobs .ui-current-role, .ui-page-duplicants .ui-duplicant-jobs .ui-target-role {\\n  padding: 5px; }\\n\\n.ui-page-changelog {\\n  padding: 15px; }\\n\\n.pt-multi-select-popover .pt-menu, .pt-select-popover .pt-menu {\\n  max-width: 400px;\\n  max-height: 300px;\\n  overflow: auto; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n import \"@blueprintjs/core/lib/css/blueprint.css\";\r\n import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\n\r\nimport \"./root.scss\";\r\n","\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport \"./css\";\r\n\r\n\r\nimport App from \"./app\";\r\n\r\nimport store from \"./state/store\";\r\n\r\nimport { runSaga } from \"./state/saga\";\r\nrunSaga();\r\n\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>,\r\n    rootEl\r\n);\r\n","\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nexport interface SaveEditorState {\r\n    fileName: string | null;\r\n    isLoading: boolean;\r\n    isSaving: boolean;\r\n    loadError: Error | null;\r\n    saveGame: SaveGame | null;\r\n\r\n    // A sparse array keyed by prefab ID, specifying the type and index (in the typed game object array) of the game object.\r\n    normalizedIDs: NormalizedID[]\r\n}\r\nexport interface NormalizedID {\r\n    type: string;\r\n    index: number;\r\n}\r\n\r\n\r\nexport const defaultSaveEditorState: SaveEditorState = {\r\n    fileName: null,\r\n    isLoading: false,\r\n    isSaving: false,\r\n    loadError: null,\r\n    saveGame: null,\r\n\r\n    normalizedIDs: []\r\n};\r\n\r\nexport const saveEditorStateKey = \"saveEditor\";\r\n","\r\nimport { KPrefabID, MinionGender } from \"oni-save-parser\";\r\n\r\nimport { createAction } from \"../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_RENAME = \"@save-editor/duplicants/rename\";\r\nexport const renameDuplicant = createAction(ACTION_DUPLICANT_RENAME, (x: {duplicantID: KPrefabID, name: string}) => x);\r\nexport type RenameDuplicantAction = ReturnType<typeof renameDuplicant>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_SKILL_SET_LEVEL = \"@save-editor/duplicants/skills/set-level\";\r\nexport const setDuplicantSkillLevel = createAction(ACTION_DUPLICANT_SKILL_SET_LEVEL, (x: {duplicantID: KPrefabID, skillId: string, level: number}) => x);\r\nexport type SetDuplicantSkillLevelAction = ReturnType<typeof setDuplicantSkillLevel>;\r\n\r\nexport const ACTION_DUPLICANT_SKILL_SET_EXPERIENCE = \"@save-editor/duplicants/skills/set-experience\";\r\nexport const setDuplicantSkillExperience = createAction(ACTION_DUPLICANT_SKILL_SET_EXPERIENCE, (x: {duplicantID: KPrefabID, skillId: string, experience: number}) => x);\r\nexport type SetDuplicantSkillExperienceAction = ReturnType<typeof setDuplicantSkillExperience>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_TRAITS_SET = \"@save-editor/duplicants/traits/set\";\r\nexport const setDuplicantTraits = createAction(ACTION_DUPLICANT_TRAITS_SET, (x: {duplicantID: KPrefabID, traitIDs: string[]}) => x);\r\nexport type SetDuplicantTraitsAction = ReturnType<typeof setDuplicantTraits>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_ADD = \"@save-editor/duplicants/effects/add\";\r\nexport const addDuplicantEffect = createAction(ACTION_DUPLICANT_EFFECTS_ADD, (x: {duplicantID: KPrefabID, effectID: string, timeRemaining: number}) => x);\r\nexport type AddDuplicantEffectAction = ReturnType<typeof addDuplicantEffect>;\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_SETTIME = \"@save-editor/duplicants/effects/set-time\";\r\nexport const setDuplicantEffectTime = createAction(ACTION_DUPLICANT_EFFECTS_SETTIME, (x: {duplicantID: KPrefabID, effectID: string, timeRemaining: number}) => x);\r\nexport type SetDuplicantEffectTimeAction = ReturnType<typeof setDuplicantEffectTime>;\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_REMOVE = \"@save-editor/duplicants/effects/remove\";\r\nexport const removeDuplicantEffect = createAction(ACTION_DUPLICANT_EFFECTS_REMOVE, (x: {duplicantID: KPrefabID, effectID: string}) => x);\r\nexport type RemoveDuplicantEffectAction = ReturnType<typeof removeDuplicantEffect>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_HEALTH_STATE_SET = \"@save-editor/duplicants/health/state/set\";\r\nexport const setDuplicantHealthState = createAction(ACTION_DUPLICANT_HEALTH_STATE_SET, (x: {duplicantID: KPrefabID, healthState: number}) => x);\r\nexport type SetDuplicantHealthStateAction = ReturnType<typeof setDuplicantHealthState>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_SCALE_SET = \"@save-editor/duplicants/scale/set\";\r\nexport const setDuplicantScale = createAction(ACTION_DUPLICANT_SCALE_SET, (x: {duplicantID: KPrefabID, scaleX?: number, scaleY?: number}) => x);\r\nexport type SetDuplicantScaleAction = ReturnType<typeof setDuplicantScale>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_GENDER_SET = \"@save-editor/duplicants/gender/set\";\r\nexport const setDuplicantGender = createAction(ACTION_DUPLICANT_GENDER_SET, (x: {duplicantID: KPrefabID, gender: MinionGender}) => x);\r\nexport type SetDuplicantGenderAction = ReturnType<typeof setDuplicantGender>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_VOICE_SET = \"@save-editor/duplicants/voice/set\";\r\nexport const setDuplicantVoice = createAction(ACTION_DUPLICANT_VOICE_SET, (x: {duplicantID: KPrefabID, voiceIdx: number}) => x);\r\nexport type SetDuplicantVoiceAction = ReturnType<typeof setDuplicantVoice>;\r\n\r\n\r\n\r\n\r\nexport type DuplicantActions =\r\n    RenameDuplicantAction\r\n    | SetDuplicantSkillLevelAction\r\n    | SetDuplicantSkillExperienceAction\r\n    | SetDuplicantTraitsAction\r\n    | AddDuplicantEffectAction\r\n    | SetDuplicantEffectTimeAction\r\n    | RemoveDuplicantEffectAction\r\n    | SetDuplicantHealthStateAction\r\n    | SetDuplicantScaleAction\r\n    | SetDuplicantGenderAction\r\n    | SetDuplicantVoiceAction;\r\n","\r\nconst failureType = {\r\n    ACTION_INVALID: \"action-invalid\" as \"action-invalid\",\r\n    SAVEFILE_CORRUPT: \"savefile-corrupt\" as \"savefile-corrupt\",\r\n    STATE_CORRUPT: \"state-corrupt\" as \"state-corrupt\",\r\n    MISSING_BEHAVIOR: \"missing-behavior\" as \"missing-behavior\"\r\n};\r\nObject.freeze(failureType);\r\nObject.seal(failureType);\r\n\r\nexport type FailureType = (typeof failureType)[keyof typeof failureType];\r\nexport const FAILURE_TYPE: Readonly<typeof failureType> = failureType;\r\n\r\n\r\nexport function warning(message: string, failureType?: FailureType) {\r\n    // TODO: Log to user console.\r\n    console.warn(`(${failureType}):`, message);\r\n}\r\n\r\nexport function error(message: string, failureType?: FailureType) {\r\n    // TODO: Log to user console.\r\n    console.error(`(${failureType}):`, message);\r\n}","\r\nimport { Selector, createSelector, ParametricSelector } from \"reselect\";\r\nimport {\r\n    GameObject,\r\n    GameObjectBehavior,\r\n    BehaviorName,\r\n    MinionIdentityBehavior,\r\n    KPrefabIDBehavior,\r\n    getBehavior    \r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"../../state\";\r\n\r\n\r\nexport const saveEditor = (state: AppState) => state.saveEditor;\r\n\r\n// TODO: Lots of data can be precalculated here, but then we have to update\r\n//  it when the game objects are modified.\r\n// May want to investigate normalizing the save file then de-normalizing it\r\n//  to save.  This is blocked currently by needing a very deeply nested value (KPrefabID) as the\r\n//  ID to the game object.\r\n\r\nconst saveGame = createSelector(saveEditor, saveEditor => saveEditor.saveGame);\r\n\r\nexport const gameObjects = createSelector(saveGame, saveGame => saveGame ? saveGame.body.gameObjects : null);\r\n\r\nexport function makeGetGameObjectsByType(type: string): Selector<AppState, GameObject[]> {\r\n    return createSelector(\r\n        gameObjects,\r\n        gameObjects => gameObjects ? gameObjects[type] || [] : []\r\n    );\r\n}\r\n\r\n// We can handle parametric or non-parametric input selectors.  We do not use the parameter, but createSelector will pass the params as required.\r\nexport function makeGetBehaviorByName<T extends GameObjectBehavior>(gameObjectSelector: Selector<AppState, GameObject | null>, behaviorName: BehaviorName<T>): Selector<AppState, T | null>;\r\nexport function makeGetBehaviorByName<Props, T extends GameObjectBehavior>(gameObjectSelector: ParametricSelector<AppState, Props, GameObject | null>, behaviorName: BehaviorName<T>): ParametricSelector<AppState, Props, T | null>;\r\nexport function makeGetBehaviorByName<T extends GameObjectBehavior>(\r\n    gameObjectSelector: (Selector<AppState, GameObject | null> | ParametricSelector<AppState, any, GameObject | null>),\r\n    behaviorName: BehaviorName<T>\r\n): ParametricSelector<AppState, any, T | null> {\r\n    return createSelector(\r\n        gameObjectSelector,\r\n        (gameObject) => (gameObject && gameObject.behaviors.find(x => x.name === behaviorName) as T) || null\r\n    );\r\n}","\r\nimport { createAction as createReduxAction } from \"redux-actions\";\r\n\r\n// We can do this better than the Action type of redux-actions:\r\n//  - Create a discriminated union on explicit 'type' types for use in reducers.\r\n//  - inferr the action typedef and payload shape using TS 2.8's ReturnType / infer keyword.\r\n// This gets us very close, but hides the parameter names for our payload creator.\r\n//  To get around this, we just use one argument that contains the payload.  This\r\n//  lets us expose the names as well as the types, at the cost of having to pass in data\r\n//  in object form.\r\n\r\n\r\nexport interface NamedAction<TName extends string, TPayload> {\r\n    type: TName;\r\n    payload: TPayload;\r\n}\r\n\r\n\r\nexport function createAction<TName extends string, TPayload, T1>(name: TName, payloadCreator: (arg1: T1) => TPayload): (arg1: T1) => NamedAction<TName, TPayload>;\r\nexport function createAction<TName extends string, TPayload>(name: TName, payloadCreator: (...args: any[]) => TPayload): (...args: any[]) => NamedAction<TName, TPayload> {\r\n    return createReduxAction(name, payloadCreator) as any;\r\n}\r\n","\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nimport { createAction } from \"../../../action-utils\";\r\n\r\nexport const ACTION_SAVEFILE_LOAD = \"@save-editor/savefile/load\";\r\nexport const loadSavefile = createAction(ACTION_SAVEFILE_LOAD, (x: {file: File}) => x);\r\nexport type LoadSavefileAction = ReturnType<typeof loadSavefile>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE = \"@save-editor/savefile/save\";\r\nexport const saveSavefile = createAction(ACTION_SAVEFILE_SAVE, (x: {fileName?: string}) => x);\r\nexport type SaveSavefileAction = ReturnType<typeof saveSavefile>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE_START = \"@save-editor/savefile/save/start\";\r\nexport const saveSavefileStarted = createAction(ACTION_SAVEFILE_SAVE_START, () => {});\r\nexport type SaveSavefileStartedAction = ReturnType<typeof saveSavefileStarted>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE_END = \"@save-editor/savefile/save/end\";\r\nexport const saveSavefileEnded = createAction(ACTION_SAVEFILE_SAVE_END, () => {});\r\nexport type SaveSavefileEndedAction = ReturnType<typeof saveSavefileEnded>;\r\n\r\n\r\nexport const ACTION_SAVEFILE_RECEIVED = \"@save-editor/savefile/received\";\r\nexport const savefileReceived = createAction(ACTION_SAVEFILE_RECEIVED, (x: {saveGame: SaveGame}) => x);\r\nexport type SavefileReceivedAction = ReturnType<typeof savefileReceived>;\r\n\r\nexport type SavefileActions = LoadSavefileAction | SaveSavefileAction | SaveSavefileStartedAction | SaveSavefileEndedAction | SavefileReceivedAction;\r\n","\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { saveEditor } from \"../selectors\";\r\n\r\nexport const isSaveChosen = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName != null));\r\nexport const saveFileName = createSelector(saveEditor, saveEditor => saveEditor.fileName);\r\nexport const isSaveLoaded = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName != null && !saveEditor.isLoading));\r\nexport const isSaveLoading = createSelector(saveEditor, saveEditor => saveEditor.isLoading);\r\nexport const isSaveSaving = createSelector(saveEditor, saveEditor => saveEditor.isSaving);\r\nexport const isSaveEnabled = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName && saveEditor.isLoading == false));\r\nexport const loadError = createSelector(saveEditor, saveEditor => saveEditor.loadError);\r\n","\r\nimport { BehaviorName } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, NormalizedID } from \"./state\";\r\nimport { AnyAction } from \"redux\";\r\nimport { GameObject, GameObjectBehavior } from \"oni-save-parser\";\r\nimport { error, FAILURE_TYPE } from \"../../logging\";\r\n\r\n\r\nexport function modifyGameObject(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    prefabID: number,\r\n    modifier: (gameObject: GameObject, normalizedId: NormalizedID) => GameObject\r\n) {\r\n    const saveGame = state.saveGame;\r\n    if (!saveGame) {\r\n        error(`Action \"${action.type}\" called before a save game is available.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const location = state.normalizedIDs[prefabID];\r\n    if (!location) {\r\n        error(`Action \"${action.type}\" requested prefabID ${prefabID}, which is not in the normalized ID table.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const {\r\n        type,\r\n        index\r\n    } = location;\r\n\r\n    if (type !== \"Minion\") {\r\n        error(`Action \"${action.type}\" requested prefabID ${prefabID}, which is not a duplicant.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const gameObject = saveGame.body.gameObjects[type][index];\r\n    if (!gameObject) {\r\n        error(`Action \"${action.type}\" prefabID ${prefabID} mapped to prefab \"${type}\":${index}, which does not exist.`, FAILURE_TYPE.STATE_CORRUPT);\r\n        return state;\r\n    }\r\n\r\n    const newGameObject = modifier(gameObject, location);\r\n\r\n    // Aarrrgggh, normalize!\r\n    return {\r\n        ...state,\r\n        saveGame: {\r\n            ...saveGame,\r\n            body: {\r\n                ...saveGame.body,\r\n                gameObjects: {\r\n                    ...saveGame.body.gameObjects,\r\n                    [type]: [\r\n                        ...saveGame.body.gameObjects[type].slice(0, index),\r\n                        newGameObject,\r\n                        ...saveGame.body.gameObjects[type].slice(index + 1)\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function modifyBehavior<T extends GameObjectBehavior>(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    prefabID: number,\r\n    behaviorName: BehaviorName<T>,\r\n    modifier: (behavior: T, normalizedId: NormalizedID) => T\r\n): SaveEditorState {\r\n    return modifyGameObject(\r\n        state,\r\n        action,\r\n        prefabID,\r\n        (gameObject, normalizedId) => {\r\n            const behaviorIndex = gameObject.behaviors.findIndex(x => x.name === behaviorName);\r\n            if (behaviorIndex === -1) {\r\n                error(`Action \"${action.type}\" prefabID ${prefabID} prefab \"${normalizedId.type}\":${normalizedId.index} does not have behavior \"${behaviorName}\".`, FAILURE_TYPE.SAVEFILE_CORRUPT);\r\n                return gameObject;\r\n            }\r\n            const behavior = gameObject.behaviors[behaviorIndex] as T;\r\n\r\n            const newBehavior = modifier(behavior, normalizedId);\r\n\r\n            const newGameObject: GameObject = {\r\n                ...gameObject,\r\n                behaviors: [\r\n                    ...gameObject.behaviors.slice(0, behaviorIndex),\r\n                    newBehavior,\r\n                    ...gameObject.behaviors.slice(behaviorIndex + 1)\r\n\r\n                ]\r\n            }\r\n            return newGameObject\r\n        }\r\n    );\r\n}\r\n"],"sourceRoot":""}