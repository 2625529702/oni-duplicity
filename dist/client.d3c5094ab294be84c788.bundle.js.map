{"version":3,"sources":["webpack:///./src/components/App/App.tsx","webpack:///./src/components/App/index.ts","webpack:///./src/root.tsx","webpack:///./src/index.tsx"],"names":["React","__importStar","__webpack_require__","core_decorators_1","react_files_1","__importDefault","oni_save_parser_1","App","Component","[object Object]","props","super","this","state","error","saveGame","createElement","stack","message","String","JSON","stringify","Object","assign","world","streamed","undefined","default","accepts","clickable","onChange","_onFilesChanged","files","readFile","then","data","parseSaveGame","setState","catch","key","code","eval","file","reader","FileReader","Promise","accept","reject","onload","result","onerror","readAsArrayBuffer","__decorate","autobind","exports","App_1","react_hot_loader_1","hot","module","ReactDOM","root_1","rootEl","document","getElementById","render"],"mappings":"u5BAAA,MAAAA,MAAAC,aAAAC,oBAAA,IAEAC,kBAAAD,oBAAA,IAEAE,cAAAC,gBAAAH,oBAAA,KAEAI,kBAAAJ,oBAAA,UAOAK,YAAiCP,MAAMQ,UACrCC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,OACHC,MAAO,KACPC,SAAU,MAGdN,SACE,MAAMK,MAAEA,EAAFC,SAASA,GAAaH,KAAKC,MAEjC,OAAIC,EAEAd,MAAAgB,cAAA,WACEhB,MAAAgB,cAAA,mBACAhB,MAAAgB,cAAA,YAAOF,EAAMG,OAASH,EAAMI,SAAWC,OAAOL,KAIhDC,EAEAf,MAAAgB,cAAA,WACEhB,MAAAgB,cAAA,YACGI,KAAKC,UAASC,OAAAC,UAERR,GACHS,MAAKF,OAAAC,UACAR,EAASS,OACZC,cAAUC,MAGd,KACA,KAON1B,MAAAgB,cAACZ,cAAAuB,SAAMC,SAAU,QAASC,WAAS,EAACC,SAAUlB,KAAKmB,iBAAe,8BAQhEtB,gBAAgBuB,GACtBC,SAASD,EAAM,IACZE,KAAKC,GAAQ7B,kBAAA8B,cAAcD,IAC3BD,KAAKnB,IACJH,KAAKyB,UACHtB,eAGHuB,MAAMxB,IACLF,KAAKyB,UACHvB,YA1DoDL,iCAAA8B,IAAAC,MAAA5B,KAAA2B,KAAAE,KAAAD,OAgE9D,SAAAP,SAAkBS,GAChB,MAAMC,EAAS,IAAIC,WACnB,OAAO,IAAIC,QAAqB,CAACC,EAAQC,KACvCJ,EAAOK,OAAS,MACdF,EAAOH,EAAOM,UAEhBN,EAAOO,QAAU,MACfH,EAAOJ,EAAO7B,SAEhB6B,EAAOQ,kBAAkBT,oCAzB3BU,YADCjD,kBAAAkD,4CAcA,MA7DHC,QAAA3B,QAAApB,2eAbAP,uGAIAI,uHASAG,mGAgEA0B,0WC7EA,MAAAsB,EAAAlD,EAAAH,EAAA,aACAoD,EAAA3B,QAAe4B,EAAA5B,0JADf4B,2TCAA,MAAAC,EAAAtD,EAAA,GAEAqD,EAAAlD,EAAAH,EAAA,aAEAoD,EAAA3B,QAAe6B,EAAAC,IAAIC,EAAJF,CAAYD,EAAA5B,4IAF3B4B,qdCFA,MAAAvD,EAAAC,EAAAC,EAAA,IACAyD,EAAA1D,EAAAC,EAAA,KAEA0D,EAAAvD,EAAAH,EAAA,KAEM2D,EAASC,SAASC,eAAe,gBAEvCJ,EAASK,OAAOhE,EAAAgB,cAAC4C,EAAAjC,QAAI,MAAKkC,uNAP1B7D,yEACA2D,4EAEAC,0EAEMC","file":"client.d3c5094ab294be84c788.bundle.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Files from \"react-files\";\r\n\r\nimport { SaveGame, parseSaveGame } from \"oni-save-parser\";\r\n\r\ntype Props = {};\r\ninterface State {\r\n  error: Error | null;\r\n  saveGame: SaveGame | null;\r\n}\r\nexport default class App extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      saveGame: null\r\n    };\r\n  }\r\n  render() {\r\n    const { error, saveGame } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          <h2>Error</h2>\r\n          <code>{error.stack || error.message || String(error)}</code>\r\n        </div>\r\n      );\r\n    }\r\n    if (saveGame) {\r\n      return (\r\n        <pre>\r\n          <code>\r\n            {JSON.stringify(\r\n              {\r\n                ...saveGame,\r\n                world: {\r\n                  ...saveGame.world,\r\n                  streamed: undefined\r\n                }\r\n              },\r\n              null,\r\n              2\r\n            )}\r\n          </code>\r\n        </pre>\r\n      );\r\n    } else {\r\n      return (\r\n        <Files accepts={[\".sav\"]} clickable onChange={this._onFilesChanged}>\r\n          Click or drag file to load\r\n        </Files>\r\n      );\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onFilesChanged(files: File[]) {\r\n    readFile(files[0])\r\n      .then(data => parseSaveGame(data))\r\n      .then(saveGame => {\r\n        this.setState({\r\n          saveGame\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nfunction readFile(file: File): Promise<ArrayBuffer> {\r\n  const reader = new FileReader();\r\n  return new Promise<ArrayBuffer>((accept, reject) => {\r\n    reader.onload = () => {\r\n      accept(reader.result);\r\n    };\r\n    reader.onerror = () => {\r\n      reject(reader.error);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n","import App from \"./App\";\r\nexport default App;\r\n","import { hot } from \"react-hot-loader\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nexport default hot(module)(App);\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport Root from \"./root\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<Root />, rootEl);\r\n"],"sourceRoot":""}