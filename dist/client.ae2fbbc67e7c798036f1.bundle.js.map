{"version":3,"sources":["webpack:///./src/state/utils.ts","webpack:///./src/services/save-editor/duplicants/selectors.ts","webpack:///./src/services/save-editor/state.ts","webpack:///./src/services/save-editor/selectors.ts","webpack:///./src/services/save-editor/duplicants/actions.ts","webpack:///./src/logging/index.ts","webpack:///./src/action-utils.ts","webpack:///./src/services/save-editor/savefile/actions.ts","webpack:///./src/services/save-editor/savefile/selectors.ts","webpack:///./src/services/save-editor/reducer-utils.ts","webpack:///./src/state/saga.ts","webpack:///./src/pages/404/index.ts","webpack:///./src/services/save-editor/duplicants/resume/actions.ts","webpack:///./src/services/save-editor/duplicants/appearance/actions.ts","webpack:///./src/services/save-editor/general/actions.ts","webpack:///./src/services/save-editor/savefile/save-loader.worker.ts","webpack:///./src/services/save-editor/savefile/saga.ts","webpack:///./src/services/save-editor/saga.ts","webpack:///./src/services/save-editor/duplicants/resume/reducer.ts","webpack:///./src/services/save-editor/duplicants/appearance/reducer.ts","webpack:///./src/services/save-editor/duplicants/reducer.ts","webpack:///./src/services/save-editor/general/reducer.ts","webpack:///./src/services/save-editor/savefile/reducer.ts","webpack:///./src/services/save-editor/reducer.ts","webpack:///./src/state/reducer.ts","webpack:///./src/state/store.ts","webpack:///./CHANGELOG.md","webpack:///./src/pages/Changelog/component.tsx","webpack:///./src/pages/Changelog/index.ts","webpack:///./src/pages/404/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Effects/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/dispatch.tsx","webpack:///./src/services/save-editor/duplicants/resume/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/pages/Roles/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Jobs/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/traits.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Traits/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Skills/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/dispatch.ts","webpack:///./src/services/save-editor/duplicants/appearance/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/Appearance/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/pages/General/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/dispatch.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantEditor/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/selectors.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantPortrait/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/components/DuplicantsList/index.ts","webpack:///./src/pages/SaveEditor/pages/Duplicants/component.tsx","webpack:///./src/pages/SaveEditor/pages/Duplicants/index.ts","webpack:///./src/pages/SaveEditor/pages/General/dispatch.ts","webpack:///./src/services/save-editor/general/selectors.ts","webpack:///./src/pages/SaveEditor/pages/General/selectors.ts","webpack:///./src/pages/SaveEditor/pages/General/component.tsx","webpack:///./src/pages/SaveEditor/pages/General/index.ts","webpack:///./src/pages/SaveEditor/components/LoadingSaveFile/component.tsx","webpack:///./src/pages/SaveEditor/components/LoadingSaveFile/index.ts","webpack:///./src/pages/SaveEditor/components/Error/dispatch.ts","webpack:///./src/pages/SaveEditor/components/Error/selectors.ts","webpack:///./src/pages/SaveEditor/components/Error/component.tsx","webpack:///./src/pages/SaveEditor/components/Error/index.ts","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/dispatch.ts","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/selectors.ts","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/component.tsx","webpack:///./src/pages/SaveEditor/components/NoSaveLoaded/index.ts","webpack:///./src/pages/SaveEditor/selectors.ts","webpack:///./src/pages/SaveEditor/component.tsx","webpack:///./src/pages/SaveEditor/index.ts","webpack:///./src/components/ActiveAwareLink/component.tsx","webpack:///./src/components/ActiveAwareLink/index.ts","webpack:///./src/components/AppNavMenu/component.tsx","webpack:///./src/components/AppNavMenu/index.ts","webpack:///./src/components/AppNavBar/selectors.ts","webpack:///./src/components/AppNavBar/dispatch.ts","webpack:///./src/components/AppNavBar/component.tsx","webpack:///./src/components/AppNavBar/index.ts","webpack:///./src/components/App/selectors.ts","webpack:///./src/components/App/component.tsx","webpack:///./src/components/App/index.ts","webpack:///./src/app.tsx","webpack:///./src/css/root.scss","webpack:///./src/css/root.scss?3097","webpack:///./src/css/index.ts","webpack:///./src/index.tsx"],"names":["reselect_1","__webpack_require__","createStructuredSelector","selectors","selectorCreator","exports","oni_save_parser_1","selectors_1","makeGetDuplicantByID","propKey","createSelector","duplicantsMap","_","props","id","Object","prototype","hasOwnProperty","call","makeGetDuplicantSkills","source","selector","makeGetBehaviorByName","AIAttributeLevelsBehavior","levelBehavior","parsedData","saveLoadLevels","makeGetDuplicantTraits","AITraitsBehavior","traitsBehavior","TraitIds","makeGetDuplicantEffects","AIEffectsBehavior","effectsBehavior","saveLoadEffects","makeGetDuplicantHealthState","HealthBehavior","healthBehavior","State","makeGetDuplicantScale","gameObject","scale","makeGetDuplicantGender","MinionIdentityBehavior","identityBehavior","gender","makeGetDuplicantVoice","voiceIdx","duplicants","makeGetGameObjectsByType","duplicantsIDs","ids","duplicant","idBehavior","getBehavior","KPrefabIDBehavior","push","InstanceID","dups","defaultSaveEditorState","fileName","isLoading","isSaving","loadError","saveGame","normalizedIDs","saveEditorStateKey","saveEditor","state","type","gameObjects","gameObjectSelector","behaviorName","behaviors","find","x","name","body","action_utils_1","ACTION_DUPLICANT_RENAME","renameDuplicant","createAction","ACTION_DUPLICANT_SKILL_SET_LEVEL","setDuplicantSkillLevel","ACTION_DUPLICANT_SKILL_SET_EXPERIENCE","setDuplicantSkillExperience","ACTION_DUPLICANT_TRAITS_SET","setDuplicantTraits","ACTION_DUPLICANT_EFFECTS_ADD","addDuplicantEffect","ACTION_DUPLICANT_EFFECTS_SETTIME","setDuplicantEffectTime","ACTION_DUPLICANT_EFFECTS_REMOVE","removeDuplicantEffect","ACTION_DUPLICANT_HEALTH_STATE_SET","setDuplicantHealthState","ACTION_DUPLICANT_SCALE_SET","setDuplicantScale","ACTION_DUPLICANT_GENDER_SET","setDuplicantGender","ACTION_DUPLICANT_VOICE_SET","setDuplicantVoice","failureType","ACTION_INVALID","SAVEFILE_CORRUPT","STATE_CORRUPT","MISSING_BEHAVIOR","warning","message","console","warn","error","freeze","seal","FAILURE_TYPE","redux_actions_1","payloadCreator","ACTION_SAVEFILE_LOAD","loadSavefile","ACTION_SAVEFILE_SAVE","saveSavefile","ACTION_SAVEFILE_SAVE_START","saveSavefileStarted","ACTION_SAVEFILE_SAVE_END","saveSavefileEnded","ACTION_SAVEFILE_RECEIVED","savefileReceived","isSaveChosen","Boolean","saveFileName","isSaveLoaded","isSaveLoading","isSaveSaving","isSaveEnabled","logging_1","modifyGameObject","action","prefabID","modifier","location","index","newGameObject","assign","[object Object]","slice","modifyBehavior","normalizedId","behaviorIndex","findIndex","behavior","newBehavior","redux_saga_1","__importDefault","effects_1","saga_1","sagaMiddleware","default","runSaga","run","fork","component_1","ACTION_DUPLICANT_ROLE_CURRENT_SET","setDuplicantCurrentRole","ACTION_DUPLICANT_ROLE_TARGET_SET","setDuplicantTargetRole","ACTION_DUPLICANT_ROLE_MASTERY_SET","setDuplicantRoleMastery","ACTION_DUPLICANT_ROLE_EXPERIENCE_SET","setDuplicantRoleExperience","ACTION_DUPLICANT_APPEARANCE_EYES_SET","setDuplicantEyes","ACTION_DUPLICANT_APPEARANCE_HAIR_SET","setDuplicantHair","ACTION_DUPLICANT_APPEARANCE_HEAD_SET","setDuplicantHead","ACTION_DUPLICANT_APPEARANCE_MOUTH_SET","setDuplicantMouth","ACTION_DUPLICANT_APPEARANCE_BODY_SET","setDuplicantBody","ACTION_CYCLE_SET","setCycle","ACTION_IMMIGRATION_TIMER_SET","setImmigrationTimer","ACTION_IMMIGRATION_READY_SET","setImmigrationReady","module","Worker","p","file_saver_1","actions_1","save_loader_worker_1","worker","loadSaveFile","file","payload","reader","FileReader","loadGamePromise","Promise","accept","reject","onload","result","onerror","readAsArrayBuffer","then","buffer","e","onmessage","data","cmd","command","postMessage","put","err","log","select","saveDataPromise","save","saveData","blob","Blob","saveAs","handleSaveOrLoad","take","default_1","state_1","reducer_utils_1","duplicantAccessoriesReducer","_action","duplicantID","roleID","MinionResumeBehavior","currentRole","targetRole","mastery","MasteryByRoleID","Map","Array","from","entries","concat","experience","ExperienceByRoleID","accessoryID","modifyAccessory","ordinal","getAccessoryOrdinal","makeAccessoryID","accessoryType","AccessorizerBehavior","oldAccessories","accessories","accIndex","getIndexOfAccessoryType","newAccessory","guid","Guid","reducer_1","reducer_2","duplicantsReducer","duplicantsRootReducer","skillId","level","levels","skillIndex","attributeId","traitIDs","gameObjectIndex","effectID","timeRemaining","effects","effectIndex","healthState","scaleX","scaleY","y","genderStringKey","generalReducer","cycle","saveGameRoot","saveGameObject","length","SaveGame","time","timeBeforeSpawn","ready","bImmigrantAvailable","saveFileReducer","prefabType","prefabs","i","isNaN","reducer_3","reducers","saveEditorReducer","reducer","redux_1","combineReducers","middleware","store","createStore","applyMiddleware","React","__importStar","react_markdown_1","changelog","ChangelogPage","Component","createElement","className","core_1","icons_1","DuplicantsPage","NonIdealState","visual","IconNames","ERROR","mapDispatchToProps","dispatch","bindActionCreators","addEffect","removeEffect","setEffectTime","utils_1","mapStateToProps","react_redux_1","core_decorators_1","select_1","StringSelect","Select","ofType","dispatch_1","DuplicantEffects","this","rows","map","DuplicantEffectRow","key","onChangeTime","_onEffectChangeTime","onRemove","_onEffectRemoved","items","AI_EFFECT_IDS","itemPredicate","_filterItem","itemRenderer","_renderItem","onItemSelect","_onEffectSelected","filterable","resetOnClose","resetOnSelect","popoverProps","minimal","Button","rightIcon","text","query","item","toLowerCase","indexOf","effect","itemProps","modifiers","handleClick","matchesPredicate","MenuItem","active","onClick","__decorate","autobind","connect","super","NumericInput","value","clampValueOnBlur","min","onValueChange","_onTimeRemainingChange","icon","SMALL_CROSS","_onRemove","setCurrentRole","setTargetRole","setMastery","setExperience","selectors_2","makeGetDuplicantCurrentRole","resumeBehavior","makeGetDuplicantTargetRole","makeGetDuplicantRoleDetails","statusByKey","keys","dupSelector","roles","DuplicantJobsPage","knownRoles","Set","JobRow","jobID","_setMastery","_setExperience","_onCurrentRoleSelected","_onTargetRoleSelected","checked","onChange","_onSetMastery","_onSetExperience","change","target","Roles_1","DuplicantRolesPage","Tabs","vertical","renderActiveTabPanelOnly","Tab","title","panel","disabled","TRAITS","setTraits","traits","traits_1","TraitMultiSelect","MultiSelect","DuplicantTraits","selectedItems","_onTagSelected","tagRenderer","tag","tagInputProps","_onTagRemoved","noResults","newTraits","splice","trait","isSelected","TICK","BLANK","shouldDismissPopover","setLevel","skills","DuplicantSkills","DuplicantSkillRow","onChangeLevel","_onChangeLevel","onChangeExperience","_onChangeExperience","_onLevelChange","_onExperienceChange","Math","round","setEyes","setHair","setHead","setMouth","setBody","makeGetDuplicantAppearanceMaker","accessorizerBehavior","accessory","getAccessoryOfType","makeGetDuplicantEyes","makeGetDuplicantHair","makeGetDuplicantHead","makeGetDuplicantMouth","makeGetDuplicantBody","eyes","hair","head","mouth","DuplicantAccessoryPage","AppearanceGroup","ACCESSORIZER_EYE_GUIDS","onSet","ACCESSORIZER_HEAD_GUIDS","ACCESSORIZER_HAIR_GUIDS","ACCESSORIZER_MOUTH_GUIDS","ACCESSORIZER_BODY_GUIDS","_onSet","setGender","setVoice","setScale","setHealthState","NumberSelect","MIN_SCALE","Number","EPSILON","DuplicantGeneralPage","healthStateStr","HEALTH_STATE_NAMES","MINION_IDENTITY_GENDERS","_onGenderSelected","_onVoiceSelected","_onScaleX","_onScaleY","_onHealthStateSelected","stateIndex","General_1","Appearance_1","Skills_1","Traits_1","Jobs_1","Effects_1","DuplicantEditor","rename","EditableText","_onNameChange","onConfirm","_onRename","str","setState","s","DuplicantPortrait","role","outerClassName","Card","interactive","_onClick","DuplicantPortrait_1","DuplicantsList","selectedDuplicantID","elements","_onDuplicantClick","onDuplicantClick","DuplicantsList_1","DuplicantEditor_1","content","MUGSHOT","_onDuplicantSelected","objects","gameClockBehavior","cycles","immigrationBehavior","nextSpawn","isSpawnReady","GeneralPage","_onCycleChange","_nextSpawnChange","_spawnReadyChange","LoadingSaveFilePageComponent","Text","Spinner","large","ErrorPageComponent","Error","stack","description","saveDescription","savePath","NoSaveLoadedPageComponent","_input","FLOPPY_DISK","intent","Intent","PRIMARY","_onLoadClick","ref","el","style","display","_onLoadFile","click","files","react_router_1","NoSaveLoaded_1","Error_1","LoadingSaveFile_1","Duplicants_1","_404_1","SaveEditorPageComponent","Switch","Redirect","exact","to","Route","path","component","react_router_dom_1","ActiveAwareLink","_a","children","staticContext","other","__rest","pathName","pathname","match","matchPartialPath","toString","Link","event","preventDefault","startsWith","withRouter","ActiveAwareLink_1","AppNavMenu","links","_renderEntries","String","fragments","previousWasGroup","forEach","entry","rendered","_renderEntry","MenuDivider","isArray","unshift","subEntries","collapse","primaryLink","throwUnknownMenuEntry","AppNavBar","Navbar","NavbarGroup","NavbarHeading","ellipsize","align","Alignment","RIGHT","UPLOAD","_onSaveClick","AppNavBar_1","AppNavMenu_1","SaveEditor_1","Changelog_1","AppComponent","Dialog","isOpen","SAVED","isCloseButtonShown","react_hot_loader_1","App_1","hot","options","hmr","transform","insertInto","undefined","locals","ReactDOM","app_1","store_1","rootEl","document","getElementById","render","Provider","HashRouter"],"mappings":"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","file":"client.ae2fbbc67e7c798036f1.bundle.js","sourcesContent":["\r\nimport { Dispatch as TypedDispatch } from \"react-redux\";\r\n\r\nimport { Selector, createStructuredSelector as createSS, createSelector, ParametricSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"./state\";\r\n\r\nexport type Dispatch = TypedDispatch<AppState>;\r\n\r\nexport function createStructuredSelector<StateProps>(selectors: {[K in keyof StateProps]: Selector<AppState, StateProps[K]>}, selectorCreator?: typeof createSelector): Selector<AppState, StateProps>;\r\nexport function createStructuredSelector<Props, StateProps>(selectors: {[K in keyof StateProps]: ParametricSelector<AppState, Props, StateProps[K]>}, selectorCreator?: typeof createSelector): ParametricSelector<AppState, Props, StateProps>;\r\nexport function createStructuredSelector<StateProps>(selectors: any, selectorCreator?: typeof createSelector): Selector<AppState, StateProps> {\r\n    return createSS(selectors, selectorCreator);\r\n}\r\n","\r\nimport { GameObject } from \"oni-save-parser\";\r\nimport { createSelector, ParametricSelector } from \"reselect\";\r\nimport {\r\n    MinionGender,\r\n    Vector3,\r\n    KPrefabIDBehavior,\r\n    MinionIdentityBehavior,\r\n    AIAttributeLevelsBehavior,\r\n    AttributeLevel,\r\n    AITraitsBehavior,\r\n    AIEffectsBehavior,\r\n    EffectInstance,\r\n    HealthBehavior,\r\n    AccessorizerBehavior,\r\n    Accessory,\r\n    getBehavior,\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"../../../state\";\r\n\r\nimport { makeGetGameObjectsByType, makeGetBehaviorByName } from \"../selectors\";\r\n\r\n\r\n\r\n\r\nexport const duplicants = makeGetGameObjectsByType(\"Minion\");\r\nexport const duplicantsIDs = createSelector(\r\n    duplicants,\r\n    duplicants => {\r\n        const ids: number[] = [];\r\n        for (let duplicant of duplicants) {\r\n            const idBehavior = getBehavior(duplicant, KPrefabIDBehavior);\r\n            if (idBehavior && idBehavior.parsedData) {\r\n                ids.push(idBehavior.parsedData.InstanceID);\r\n            }\r\n        }\r\n        return ids;\r\n    }\r\n);\r\n\r\nexport const duplicantsMap = createSelector(\r\n    duplicants,\r\n    duplicants => {\r\n        const dups: {[key: number]: GameObject} = {};\r\n        for (let duplicant of duplicants) {\r\n            const idBehavior = getBehavior(duplicant, KPrefabIDBehavior);\r\n            if (idBehavior && idBehavior.parsedData) {\r\n                dups[idBehavior.parsedData.InstanceID] = duplicant;\r\n            }\r\n        }\r\n        return dups;\r\n    }\r\n)\r\n\r\nexport function makeGetDuplicantByID<Props>(propKey: keyof Props): ParametricSelector<AppState, Props, GameObject | null> {\r\n    return createSelector(\r\n        duplicantsMap,\r\n        // We know the type of Props, but we need to have TS validate it as a string somehow...\r\n        (_: AppState, props: any) => props[propKey],\r\n        (duplicantsMap, id) => {\r\n            if (!Object.prototype.hasOwnProperty.call(duplicantsMap, id)) {\r\n                return null;\r\n            }\r\n            return duplicantsMap[id];\r\n        }\r\n    );\r\n};\r\nexport type DuplicantByIDSelector<Props> = ParametricSelector<AppState, Props, GameObject | null>;\r\n\r\nexport function makeGetDuplicantSkills<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, AttributeLevel[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AIAttributeLevelsBehavior),\r\n        levelBehavior => levelBehavior ? levelBehavior.parsedData.saveLoadLevels : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantTraits<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AITraitsBehavior),\r\n        traitsBehavior => traitsBehavior ? traitsBehavior.parsedData.TraitIds : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantEffects<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, EffectInstance[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, AIEffectsBehavior),\r\n        effectsBehavior => effectsBehavior ? effectsBehavior.parsedData.saveLoadEffects : []\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantHealthState<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, number | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, HealthBehavior),\r\n        healthBehavior => healthBehavior ? healthBehavior.parsedData.State : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantScale<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, Vector3 | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        selector,\r\n        gameObject => gameObject ? gameObject.scale : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantGender<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, MinionGender | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionIdentityBehavior),\r\n        identityBehavior => identityBehavior ? identityBehavior.parsedData.gender : null\r\n    );\r\n}\r\nexport function makeGetDuplicantVoice<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, number | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionIdentityBehavior),\r\n        identityBehavior => identityBehavior ? identityBehavior.parsedData.voiceIdx : null\r\n    );\r\n}\r\n","\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nexport interface SaveEditorState {\r\n    fileName: string | null;\r\n    isLoading: boolean;\r\n    isSaving: boolean;\r\n    loadError: Error | null;\r\n    saveGame: SaveGame | null;\r\n\r\n    // A sparse array keyed by prefab ID, specifying the type and index (in the typed game object array) of the game object.\r\n    normalizedIDs: NormalizedID[]\r\n}\r\nexport interface NormalizedID {\r\n    type: string;\r\n    index: number;\r\n}\r\n\r\n\r\nexport const defaultSaveEditorState: SaveEditorState = {\r\n    fileName: null,\r\n    isLoading: false,\r\n    isSaving: false,\r\n    loadError: null,\r\n    saveGame: null,\r\n\r\n    normalizedIDs: []\r\n};\r\n\r\nexport const saveEditorStateKey = \"saveEditor\";\r\n","\r\nimport { Selector, createSelector, ParametricSelector } from \"reselect\";\r\nimport {\r\n    GameObject,\r\n    GameObjectBehavior,\r\n    BehaviorName,\r\n    MinionIdentityBehavior,\r\n    KPrefabIDBehavior,\r\n    getBehavior    \r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"../../state\";\r\n\r\n\r\nexport const saveEditor = (state: AppState) => state.saveEditor;\r\n\r\n// TODO: Lots of data can be precalculated here, but then we have to update\r\n//  it when the game objects are modified.\r\n// May want to investigate normalizing the save file then de-normalizing it\r\n//  to save.  This is blocked currently by needing a very deeply nested value (KPrefabID) as the\r\n//  ID to the game object.\r\n\r\nconst saveGame = createSelector(saveEditor, saveEditor => saveEditor.saveGame);\r\n\r\nexport const gameObjects = createSelector(saveGame, saveGame => saveGame ? saveGame.body.gameObjects : null);\r\n\r\nexport function makeGetGameObjectsByType(type: string): Selector<AppState, GameObject[]> {\r\n    return createSelector(\r\n        gameObjects,\r\n        gameObjects => gameObjects ? gameObjects[type] || [] : []\r\n    );\r\n}\r\n\r\n// We can handle parametric or non-parametric input selectors.  We do not use the parameter, but createSelector will pass the params as required.\r\nexport function makeGetBehaviorByName<T extends GameObjectBehavior>(gameObjectSelector: Selector<AppState, GameObject | null>, behaviorName: BehaviorName<T>): Selector<AppState, T | null>;\r\nexport function makeGetBehaviorByName<Props, T extends GameObjectBehavior>(gameObjectSelector: ParametricSelector<AppState, Props, GameObject | null>, behaviorName: BehaviorName<T>): ParametricSelector<AppState, Props, T | null>;\r\nexport function makeGetBehaviorByName<T extends GameObjectBehavior>(\r\n    gameObjectSelector: (Selector<AppState, GameObject | null> | ParametricSelector<AppState, any, GameObject | null>),\r\n    behaviorName: BehaviorName<T>\r\n): ParametricSelector<AppState, any, T | null> {\r\n    return createSelector(\r\n        gameObjectSelector,\r\n        (gameObject) => (gameObject && gameObject.behaviors.find(x => x.name === behaviorName) as T) || null\r\n    );\r\n}","\r\nimport { KPrefabID, MinionGender } from \"oni-save-parser\";\r\n\r\nimport { createAction } from \"@/action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_RENAME = \"@save-editor/duplicants/rename\";\r\nexport const renameDuplicant = createAction(ACTION_DUPLICANT_RENAME, (x: {duplicantID: KPrefabID, name: string}) => x);\r\nexport type RenameDuplicantAction = ReturnType<typeof renameDuplicant>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_SKILL_SET_LEVEL = \"@save-editor/duplicants/skills/set-level\";\r\nexport const setDuplicantSkillLevel = createAction(ACTION_DUPLICANT_SKILL_SET_LEVEL, (x: {duplicantID: KPrefabID, skillId: string, level: number}) => x);\r\nexport type SetDuplicantSkillLevelAction = ReturnType<typeof setDuplicantSkillLevel>;\r\n\r\nexport const ACTION_DUPLICANT_SKILL_SET_EXPERIENCE = \"@save-editor/duplicants/skills/set-experience\";\r\nexport const setDuplicantSkillExperience = createAction(ACTION_DUPLICANT_SKILL_SET_EXPERIENCE, (x: {duplicantID: KPrefabID, skillId: string, experience: number}) => x);\r\nexport type SetDuplicantSkillExperienceAction = ReturnType<typeof setDuplicantSkillExperience>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_TRAITS_SET = \"@save-editor/duplicants/traits/set\";\r\nexport const setDuplicantTraits = createAction(ACTION_DUPLICANT_TRAITS_SET, (x: {duplicantID: KPrefabID, traitIDs: string[]}) => x);\r\nexport type SetDuplicantTraitsAction = ReturnType<typeof setDuplicantTraits>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_ADD = \"@save-editor/duplicants/effects/add\";\r\nexport const addDuplicantEffect = createAction(ACTION_DUPLICANT_EFFECTS_ADD, (x: {duplicantID: KPrefabID, effectID: string, timeRemaining: number}) => x);\r\nexport type AddDuplicantEffectAction = ReturnType<typeof addDuplicantEffect>;\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_SETTIME = \"@save-editor/duplicants/effects/set-time\";\r\nexport const setDuplicantEffectTime = createAction(ACTION_DUPLICANT_EFFECTS_SETTIME, (x: {duplicantID: KPrefabID, effectID: string, timeRemaining: number}) => x);\r\nexport type SetDuplicantEffectTimeAction = ReturnType<typeof setDuplicantEffectTime>;\r\n\r\nexport const ACTION_DUPLICANT_EFFECTS_REMOVE = \"@save-editor/duplicants/effects/remove\";\r\nexport const removeDuplicantEffect = createAction(ACTION_DUPLICANT_EFFECTS_REMOVE, (x: {duplicantID: KPrefabID, effectID: string}) => x);\r\nexport type RemoveDuplicantEffectAction = ReturnType<typeof removeDuplicantEffect>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_HEALTH_STATE_SET = \"@save-editor/duplicants/health/state/set\";\r\nexport const setDuplicantHealthState = createAction(ACTION_DUPLICANT_HEALTH_STATE_SET, (x: {duplicantID: KPrefabID, healthState: number}) => x);\r\nexport type SetDuplicantHealthStateAction = ReturnType<typeof setDuplicantHealthState>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_SCALE_SET = \"@save-editor/duplicants/scale/set\";\r\nexport const setDuplicantScale = createAction(ACTION_DUPLICANT_SCALE_SET, (x: {duplicantID: KPrefabID, scaleX?: number, scaleY?: number}) => x);\r\nexport type SetDuplicantScaleAction = ReturnType<typeof setDuplicantScale>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_GENDER_SET = \"@save-editor/duplicants/gender/set\";\r\nexport const setDuplicantGender = createAction(ACTION_DUPLICANT_GENDER_SET, (x: {duplicantID: KPrefabID, gender: MinionGender}) => x);\r\nexport type SetDuplicantGenderAction = ReturnType<typeof setDuplicantGender>;\r\n\r\n\r\nexport const ACTION_DUPLICANT_VOICE_SET = \"@save-editor/duplicants/voice/set\";\r\nexport const setDuplicantVoice = createAction(ACTION_DUPLICANT_VOICE_SET, (x: {duplicantID: KPrefabID, voiceIdx: number}) => x);\r\nexport type SetDuplicantVoiceAction = ReturnType<typeof setDuplicantVoice>;\r\n\r\n\r\n\r\n\r\nexport type DuplicantActions =\r\n    RenameDuplicantAction\r\n    | SetDuplicantSkillLevelAction\r\n    | SetDuplicantSkillExperienceAction\r\n    | SetDuplicantTraitsAction\r\n    | AddDuplicantEffectAction\r\n    | SetDuplicantEffectTimeAction\r\n    | RemoveDuplicantEffectAction\r\n    | SetDuplicantHealthStateAction\r\n    | SetDuplicantScaleAction\r\n    | SetDuplicantGenderAction\r\n    | SetDuplicantVoiceAction;\r\n","\r\nconst failureType = {\r\n    ACTION_INVALID: \"action-invalid\" as \"action-invalid\",\r\n    SAVEFILE_CORRUPT: \"savefile-corrupt\" as \"savefile-corrupt\",\r\n    STATE_CORRUPT: \"state-corrupt\" as \"state-corrupt\",\r\n    MISSING_BEHAVIOR: \"missing-behavior\" as \"missing-behavior\"\r\n};\r\nObject.freeze(failureType);\r\nObject.seal(failureType);\r\n\r\nexport type FailureType = (typeof failureType)[keyof typeof failureType];\r\nexport const FAILURE_TYPE: Readonly<typeof failureType> = failureType;\r\n\r\n\r\nexport function warning(message: string, failureType?: FailureType) {\r\n    // TODO: Log to user console.\r\n    console.warn(`(${failureType}):`, message);\r\n}\r\n\r\nexport function error(message: string, failureType?: FailureType) {\r\n    // TODO: Log to user console.\r\n    console.error(`(${failureType}):`, message);\r\n}","\r\nimport { createAction as createReduxAction } from \"redux-actions\";\r\n\r\n// We can do this better than the Action type of redux-actions:\r\n//  - Create a discriminated union on explicit 'type' types for use in reducers.\r\n//  - inferr the action typedef and payload shape using TS 2.8's ReturnType / infer keyword.\r\n// This gets us very close, but hides the parameter names for our payload creator.\r\n//  To get around this, we just use one argument that contains the payload.  This\r\n//  lets us expose the names as well as the types, at the cost of having to pass in data\r\n//  in object form.\r\n\r\n\r\nexport interface NamedAction<TName extends string, TPayload> {\r\n    type: TName;\r\n    payload: TPayload;\r\n}\r\n\r\n\r\nexport function createAction<TName extends string, TPayload, T1>(name: TName, payloadCreator: (arg1: T1) => TPayload): (arg1: T1) => NamedAction<TName, TPayload>;\r\nexport function createAction<TName extends string, TPayload>(name: TName, payloadCreator: (...args: any[]) => TPayload): (...args: any[]) => NamedAction<TName, TPayload> {\r\n    return createReduxAction(name, payloadCreator) as any;\r\n}\r\n","\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nimport { createAction } from \"../../../action-utils\";\r\n\r\nexport const ACTION_SAVEFILE_LOAD = \"@save-editor/savefile/load\";\r\nexport const loadSavefile = createAction(ACTION_SAVEFILE_LOAD, (x: {file: File}) => x);\r\nexport type LoadSavefileAction = ReturnType<typeof loadSavefile>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE = \"@save-editor/savefile/save\";\r\nexport const saveSavefile = createAction(ACTION_SAVEFILE_SAVE, (x: {fileName?: string}) => x);\r\nexport type SaveSavefileAction = ReturnType<typeof saveSavefile>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE_START = \"@save-editor/savefile/save/start\";\r\nexport const saveSavefileStarted = createAction(ACTION_SAVEFILE_SAVE_START, () => {});\r\nexport type SaveSavefileStartedAction = ReturnType<typeof saveSavefileStarted>;\r\n\r\nexport const ACTION_SAVEFILE_SAVE_END = \"@save-editor/savefile/save/end\";\r\nexport const saveSavefileEnded = createAction(ACTION_SAVEFILE_SAVE_END, () => {});\r\nexport type SaveSavefileEndedAction = ReturnType<typeof saveSavefileEnded>;\r\n\r\n\r\nexport const ACTION_SAVEFILE_RECEIVED = \"@save-editor/savefile/received\";\r\nexport const savefileReceived = createAction(ACTION_SAVEFILE_RECEIVED, (x: {saveGame: SaveGame}) => x);\r\nexport type SavefileReceivedAction = ReturnType<typeof savefileReceived>;\r\n\r\nexport type SavefileActions = LoadSavefileAction | SaveSavefileAction | SaveSavefileStartedAction | SaveSavefileEndedAction | SavefileReceivedAction;\r\n","\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { saveEditor } from \"../selectors\";\r\n\r\nexport const isSaveChosen = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName != null));\r\nexport const saveFileName = createSelector(saveEditor, saveEditor => saveEditor.fileName);\r\nexport const isSaveLoaded = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName != null && !saveEditor.isLoading));\r\nexport const isSaveLoading = createSelector(saveEditor, saveEditor => saveEditor.isLoading);\r\nexport const isSaveSaving = createSelector(saveEditor, saveEditor => saveEditor.isSaving);\r\nexport const isSaveEnabled = createSelector(saveEditor, saveEditor => Boolean(saveEditor.fileName && saveEditor.isLoading == false));\r\nexport const loadError = createSelector(saveEditor, saveEditor => saveEditor.loadError);\r\n","\r\nimport { BehaviorName } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, NormalizedID } from \"./state\";\r\nimport { AnyAction } from \"redux\";\r\nimport { GameObject, GameObjectBehavior } from \"oni-save-parser\";\r\nimport { error, FAILURE_TYPE } from \"../../logging\";\r\n\r\n\r\nexport function modifyGameObject(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    prefabID: number,\r\n    modifier: (gameObject: GameObject, normalizedId: NormalizedID) => GameObject\r\n) {\r\n    const saveGame = state.saveGame;\r\n    if (!saveGame) {\r\n        error(`Action \"${action.type}\" called before a save game is available.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const location = state.normalizedIDs[prefabID];\r\n    if (!location) {\r\n        error(`Action \"${action.type}\" requested prefabID ${prefabID}, which is not in the normalized ID table.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const {\r\n        type,\r\n        index\r\n    } = location;\r\n\r\n    if (type !== \"Minion\") {\r\n        error(`Action \"${action.type}\" requested prefabID ${prefabID}, which is not a duplicant.`, FAILURE_TYPE.ACTION_INVALID);\r\n        return state;\r\n    }\r\n\r\n    const gameObject = saveGame.body.gameObjects[type][index];\r\n    if (!gameObject) {\r\n        error(`Action \"${action.type}\" prefabID ${prefabID} mapped to prefab \"${type}\":${index}, which does not exist.`, FAILURE_TYPE.STATE_CORRUPT);\r\n        return state;\r\n    }\r\n\r\n    const newGameObject = modifier(gameObject, location);\r\n\r\n    // Aarrrgggh, normalize!\r\n    return {\r\n        ...state,\r\n        saveGame: {\r\n            ...saveGame,\r\n            body: {\r\n                ...saveGame.body,\r\n                gameObjects: {\r\n                    ...saveGame.body.gameObjects,\r\n                    [type]: [\r\n                        ...saveGame.body.gameObjects[type].slice(0, index),\r\n                        newGameObject,\r\n                        ...saveGame.body.gameObjects[type].slice(index + 1)\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function modifyBehavior<T extends GameObjectBehavior>(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    prefabID: number,\r\n    behaviorName: BehaviorName<T>,\r\n    modifier: (behavior: T, normalizedId: NormalizedID) => T\r\n): SaveEditorState {\r\n    return modifyGameObject(\r\n        state,\r\n        action,\r\n        prefabID,\r\n        (gameObject, normalizedId) => {\r\n            const behaviorIndex = gameObject.behaviors.findIndex(x => x.name === behaviorName);\r\n            if (behaviorIndex === -1) {\r\n                error(`Action \"${action.type}\" prefabID ${prefabID} prefab \"${normalizedId.type}\":${normalizedId.index} does not have behavior \"${behaviorName}\".`, FAILURE_TYPE.SAVEFILE_CORRUPT);\r\n                return gameObject;\r\n            }\r\n            const behavior = gameObject.behaviors[behaviorIndex] as T;\r\n\r\n            const newBehavior = modifier(behavior, normalizedId);\r\n\r\n            const newGameObject: GameObject = {\r\n                ...gameObject,\r\n                behaviors: [\r\n                    ...gameObject.behaviors.slice(0, behaviorIndex),\r\n                    newBehavior,\r\n                    ...gameObject.behaviors.slice(behaviorIndex + 1)\r\n\r\n                ]\r\n            }\r\n            return newGameObject\r\n        }\r\n    );\r\n}\r\n","\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fork } from \"redux-saga/effects\"\r\n\r\nimport saveEditorSaga from \"../services/save-editor/saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default sagaMiddleware;\r\n\r\nexport function runSaga() {\r\n    sagaMiddleware.run(function*() {\r\n        yield fork(saveEditorSaga);\r\n    });\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { KPrefabID } from \"oni-save-parser\";\r\nimport { createAction } from \"../../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_ROLE_CURRENT_SET = \"@save-editor/duplicants/role/current/set\";\r\nexport const setDuplicantCurrentRole = createAction(ACTION_DUPLICANT_ROLE_CURRENT_SET, (x: { duplicantID: KPrefabID, roleID: string }) => x);\r\nexport type SetDuplicantCurrentRoleAction = ReturnType<typeof setDuplicantCurrentRole>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_TARGET_SET = \"@save-editor/duplicants/role/target/set\";\r\nexport const setDuplicantTargetRole = createAction(ACTION_DUPLICANT_ROLE_TARGET_SET, (x: { duplicantID: KPrefabID, roleID: string }) => x);\r\nexport type SetDuplicantTargetRoleAction = ReturnType<typeof setDuplicantTargetRole>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_MASTERY_SET = \"@save-editor/duplicants/role/mastery/set\";\r\nexport const setDuplicantRoleMastery = createAction(ACTION_DUPLICANT_ROLE_MASTERY_SET, (x: { duplicantID: KPrefabID, roleID: string, mastery: boolean }) => x);\r\nexport type SetDuplicantRoleMasteryAction = ReturnType<typeof setDuplicantRoleMastery>;\r\n\r\nexport const ACTION_DUPLICANT_ROLE_EXPERIENCE_SET = \"@save-editor/duplicants/role/experience/set\";\r\nexport const setDuplicantRoleExperience = createAction(ACTION_DUPLICANT_ROLE_EXPERIENCE_SET, (x: { duplicantID: KPrefabID, roleID: string, experience: number }) => x);\r\nexport type SetDuplicantRoleExperienceAction = ReturnType<typeof setDuplicantRoleExperience>;\r\n\r\n\r\nexport type DuplicantResumeActions =\r\n    SetDuplicantCurrentRoleAction\r\n    | SetDuplicantTargetRoleAction\r\n    | SetDuplicantRoleMasteryAction\r\n    | SetDuplicantRoleExperienceAction;\r\n","\r\nimport { KPrefabID } from \"oni-save-parser\";\r\nimport { createAction } from \"../../../../action-utils\";\r\n\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_EYES_SET = \"@save-editor/duplicants/appearance/eyes/set\";\r\nexport const setDuplicantEyes = createAction(ACTION_DUPLICANT_APPEARANCE_EYES_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantEyesAction = ReturnType<typeof setDuplicantEyes>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_HAIR_SET = \"@save-editor/duplicants/appearance/hair/set\";\r\nexport const setDuplicantHair = createAction(ACTION_DUPLICANT_APPEARANCE_HAIR_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantHairAction = ReturnType<typeof setDuplicantHair>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_HEAD_SET = \"@save-editor/duplicants/appearance/head/set\";\r\nexport const setDuplicantHead = createAction(ACTION_DUPLICANT_APPEARANCE_HEAD_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantHeadAction = ReturnType<typeof setDuplicantHead>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_MOUTH_SET = \"@save-editor/duplicants/appearance/mouth/set\";\r\nexport const setDuplicantMouth = createAction(ACTION_DUPLICANT_APPEARANCE_MOUTH_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantMouthAction = ReturnType<typeof setDuplicantMouth>;\r\n\r\nexport const ACTION_DUPLICANT_APPEARANCE_BODY_SET = \"@save-editor/duplicants/appearance/body/set\";\r\nexport const setDuplicantBody = createAction(ACTION_DUPLICANT_APPEARANCE_BODY_SET, (x: {duplicantID: KPrefabID, accessoryID: string}) => x);\r\nexport type SetDuplicantBodyAction = ReturnType<typeof setDuplicantBody>;\r\n\r\n\r\nexport type DuplicantAppearanceActions =\r\n    SetDuplicantEyesAction\r\n    | SetDuplicantHairAction\r\n    | SetDuplicantHeadAction\r\n    | SetDuplicantMouthAction\r\n    | SetDuplicantBodyAction;\r\n","import { createAction } from \"@/action-utils\";\r\n\r\nexport const ACTION_CYCLE_SET = \"@save-editor/general/cycle/set\";\r\nexport const setCycle = createAction(ACTION_CYCLE_SET, (x: {cycle: number}) => x);\r\nexport type SetCycleAction = ReturnType<typeof setCycle>;\r\n\r\nexport const ACTION_IMMIGRATION_TIMER_SET = \"@save-editor/immigration/timer/set\";\r\nexport const setImmigrationTimer = createAction(ACTION_IMMIGRATION_TIMER_SET, (x: {time: number}) => x);\r\nexport type SetImmigrationTimerAction = ReturnType<typeof setImmigrationTimer>;\r\n\r\nexport const ACTION_IMMIGRATION_READY_SET = \"@save-editor/immigration/ready/set\";\r\nexport const setImmigrationReady = createAction(ACTION_IMMIGRATION_READY_SET, (x: {ready: boolean}) => x);\r\nexport type SetImmigrationReadyAction = ReturnType<typeof setImmigrationReady>;\r\n\r\nexport type GeneralActions =\r\n    SetCycleAction\r\n    | SetImmigrationTimerAction\r\n    | SetImmigrationReadyAction;","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2b9bad58b63253c0beb9.worker.js\");\n};","\r\nimport { take, fork, call, put, select } from \"redux-saga/effects\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\n\r\nimport {\r\n    ACTION_SAVEFILE_LOAD,\r\n    ACTION_SAVEFILE_SAVE,\r\n    LoadSavefileAction,\r\n    SaveSavefileAction,\r\n    savefileReceived,\r\n    saveSavefileStarted,\r\n    saveSavefileEnded\r\n} from \"./actions\";\r\n\r\nimport SaveLoadWorker from \"worker-loader!./save-loader.worker\";\r\nimport { LoadCommandData, SaveCommandData } from \"./save-loader.worker\";\r\nimport { Action } from \"redux\";\r\nimport { AppState } from \"../../../state\";\r\nimport { error } from \"../../../logging\";\r\n\r\n\r\nconst worker = new SaveLoadWorker();\r\n\r\nfunction* loadSaveFile(action: LoadSavefileAction) {\r\n    const {\r\n        file\r\n    } = action.payload;\r\n\r\n    const reader = new FileReader();\r\n    const loadGamePromise = new Promise<File>((accept, reject) => {\r\n        reader.onload = () => {\r\n            accept(reader.result);\r\n        };\r\n        reader.onerror = () => {\r\n            reject(reader.error);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }).then(buffer => {\r\n        return new Promise((accept, reject) => {\r\n            worker.onerror = (e: ErrorEvent) => { reject(e.error) };\r\n            worker.onmessage = (e: MessageEvent) => {\r\n                const {\r\n                    saveGame,\r\n                    error\r\n                } = e.data;\r\n                if (error) reject(error);\r\n                else accept(saveGame);\r\n            };\r\n\r\n            const cmd: LoadCommandData = {\r\n                command: \"load\",\r\n                buffer: reader.result\r\n            };\r\n            worker.postMessage(cmd);\r\n        });\r\n    });\r\n\r\n    try {\r\n        const saveGame: SaveGame = yield call(() => loadGamePromise);\r\n        yield put(savefileReceived({ saveGame }));\r\n    }\r\n    catch (err) {\r\n        // TODO: either send with savefileReceived error key, or make a new action for this.\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* saveSavefile(action: SaveSavefileAction) {\r\n    const {\r\n        fileName\r\n    } = action.payload;\r\n\r\n    const state: AppState = yield select();\r\n\r\n    const saveGame = state.saveEditor.saveGame;\r\n    if (!saveGame) {\r\n        return;\r\n    }\r\n\r\n    yield put(saveSavefileStarted({}));\r\n\r\n    try {\r\n        const saveDataPromise = new Promise<ArrayBuffer>((accept, reject) => {\r\n            worker.onerror = (e: ErrorEvent) => { reject(e.error) };\r\n            worker.onmessage = (e: MessageEvent) => {\r\n                const {\r\n                    buffer,\r\n                    error\r\n                } = e.data;\r\n                if (error) reject(error);\r\n                else accept(buffer);\r\n            };\r\n\r\n            const cmd: SaveCommandData = {\r\n                command: \"save\",\r\n                save: saveGame\r\n            };\r\n            worker.postMessage(cmd);\r\n        });\r\n\r\n        const saveData: ArrayBuffer = yield call(() => saveDataPromise);\r\n        const blob = new Blob([saveData]);\r\n\r\n        saveAs(blob, fileName || state.saveEditor.fileName || \"my-file.sav\");\r\n    }\r\n    catch (e) {\r\n        error(\"Failed to save file: \" + e.message);\r\n    }\r\n\r\n    yield put(saveSavefileEnded({}));\r\n}\r\n\r\nfunction* handleSaveOrLoad() {\r\n    // Take a save or load, then block until we complete.\r\n    //  This will effectively ignore save/load calls happening while we are working.\r\n    while (true) {\r\n        const action: LoadSavefileAction | SaveSavefileAction = yield take([ACTION_SAVEFILE_LOAD, ACTION_SAVEFILE_SAVE]);\r\n        switch (action.type) {\r\n            case ACTION_SAVEFILE_LOAD:\r\n                yield call<LoadSavefileAction>(loadSaveFile, action);\r\n                continue;\r\n            case ACTION_SAVEFILE_SAVE:\r\n                yield call<SaveSavefileAction>(saveSavefile, action);\r\n                continue;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function* () {\r\n    yield fork(handleSaveOrLoad);\r\n}\r\n","\r\nimport { fork } from \"redux-saga/effects\";\r\n\r\nimport saveFileSaga from \"./savefile/saga\";\r\n\r\nexport default function* () {\r\n    yield fork(saveFileSaga);\r\n}","import { AnyAction } from \"redux\";\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../../state\";\r\n\r\nimport { modifyBehavior } from \"../../reducer-utils\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_ROLE_MASTERY_SET,\r\n    ACTION_DUPLICANT_ROLE_EXPERIENCE_SET,\r\n    DuplicantResumeActions,\r\n    ACTION_DUPLICANT_ROLE_TARGET_SET,\r\n    ACTION_DUPLICANT_ROLE_CURRENT_SET\r\n} from \"./actions\";\r\n\r\n\r\nexport default function duplicantAccessoriesReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as DuplicantResumeActions;\r\n    switch(action.type) {\r\n        case ACTION_DUPLICANT_ROLE_CURRENT_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        currentRole: roleID\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_TARGET_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        targetRole: roleID\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_MASTERY_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n                mastery\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        MasteryByRoleID: new Map<string, boolean>(Array.from(behavior.parsedData.MasteryByRoleID.entries()).concat([[roleID, mastery]]))\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_ROLE_EXPERIENCE_SET: {\r\n            const {\r\n                duplicantID,\r\n                roleID,\r\n                experience\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionResumeBehavior,\r\n                behavior => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        ExperienceByRoleID: new Map<string, number>(Array.from(behavior.parsedData.ExperienceByRoleID.entries()).concat([[roleID, experience]]))\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../../state\";\r\n\r\nimport { modifyBehavior } from \"../../reducer-utils\";\r\n\r\nimport {\r\n    AccessorizerBehavior,\r\n    Accessory,\r\n    getIndexOfAccessoryType,\r\n    getAccessoryOrdinal,\r\n    makeAccessoryID\r\n} from \"oni-save-parser\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_APPEARANCE_EYES_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_HAIR_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_HEAD_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_MOUTH_SET,\r\n    ACTION_DUPLICANT_APPEARANCE_BODY_SET,\r\n    DuplicantAppearanceActions\r\n} from \"./actions\";\r\n\r\n\r\nexport default function duplicantAccessoriesReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as DuplicantAppearanceActions;\r\n    switch(action.type) {\r\n        case ACTION_DUPLICANT_APPEARANCE_EYES_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"eyes\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_HAIR_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"hair\",\r\n                accessoryID\r\n            );\r\n\r\n            const ordinal = getAccessoryOrdinal(accessoryID);\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"hat_hair\",\r\n                makeAccessoryID(\"hat_hair\", ordinal || 1)\r\n            );\r\n\r\n            // TODO: Also hair_always?  Seems that way from MinionStartingStates CreateBodyData,\r\n            //  but saved dups have a DEFAULT here\r\n\r\n            return state;\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_HEAD_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"headshape\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_MOUTH_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            return modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"mouth\",\r\n                accessoryID\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_APPEARANCE_BODY_SET: {\r\n            const {\r\n                duplicantID,\r\n                accessoryID\r\n            } = action.payload;\r\n\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"body\",\r\n                accessoryID\r\n            );\r\n\r\n            const ordinal = getAccessoryOrdinal(accessoryID);\r\n            state = modifyAccessory(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                \"arm\",\r\n                makeAccessoryID(\"arm\", ordinal || 1)\r\n            );\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction modifyAccessory(\r\n    state: SaveEditorState,\r\n    action: AnyAction,\r\n    duplicantID: number,\r\n    accessoryType: string,\r\n    accessoryID: string\r\n): SaveEditorState {\r\n    return modifyBehavior(\r\n        state,\r\n        action,\r\n        duplicantID,\r\n        AccessorizerBehavior,\r\n        behavior => {\r\n            const oldAccessories = behavior.parsedData!.accessories;\r\n            const accIndex = getIndexOfAccessoryType(oldAccessories, accessoryType);\r\n            const newAccessory: Accessory = {\r\n                guid: {\r\n                    Guid: accessoryID\r\n                }\r\n            };\r\n            let accessories: Accessory[];\r\n            if (accIndex !== -1) {\r\n                accessories = [\r\n                    ...oldAccessories.slice(0, accIndex),\r\n                    newAccessory,\r\n                    ...oldAccessories.slice(accIndex + 1)\r\n                ];\r\n            }\r\n            else {\r\n                accessories = [\r\n                    ...oldAccessories,\r\n                    newAccessory\r\n                ];\r\n            }\r\n\r\n            return {\r\n                ...behavior,\r\n                parsedData: {\r\n                    ...behavior.parsedData,\r\n                    accessories\r\n                }\r\n            };\r\n        }\r\n    );\r\n}","\r\nimport { AnyAction } from \"redux\";\r\nimport {\r\n    GameObjectBehavior,\r\n    GameObject,\r\n    MinionIdentityBehavior,\r\n    AIAttributeLevelsBehavior,\r\n    BehaviorName,\r\n    AITraitsBehavior,\r\n    AIEffectsBehavior,\r\n    HealthBehavior,\r\n    AccessorizerBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { error, FAILURE_TYPE, warning } from \"../../../logging\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState, NormalizedID } from \"../state\";\r\n\r\nimport { modifyGameObject, modifyBehavior } from \"../reducer-utils\";\r\n\r\nimport {\r\n    ACTION_DUPLICANT_RENAME,\r\n    ACTION_DUPLICANT_SKILL_SET_LEVEL,\r\n    ACTION_DUPLICANT_SKILL_SET_EXPERIENCE,\r\n    ACTION_DUPLICANT_TRAITS_SET,\r\n    ACTION_DUPLICANT_EFFECTS_ADD,\r\n    ACTION_DUPLICANT_EFFECTS_SETTIME,\r\n    ACTION_DUPLICANT_EFFECTS_REMOVE,\r\n    ACTION_DUPLICANT_HEALTH_STATE_SET,\r\n    ACTION_DUPLICANT_SCALE_SET,\r\n    ACTION_DUPLICANT_GENDER_SET,\r\n    ACTION_DUPLICANT_VOICE_SET,\r\n    DuplicantActions\r\n} from \"./actions\";\r\n\r\nimport duplicantAppearanceReducer from \"./appearance/reducer\";\r\nimport duplicantResumeReducer from \"./resume/reducer\";\r\n\r\nexport default function duplicantsReducer(state: SaveEditorState = defaultSaveEditorState, action: AnyAction): SaveEditorState {\r\n    state = duplicantsRootReducer(state, action);\r\n    state = duplicantAppearanceReducer(state, action);\r\n    state = duplicantResumeReducer(state, action);\r\n    return state;\r\n}\r\n\r\nfunction duplicantsRootReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction) {\r\n    const action = _action as DuplicantActions;\r\n    switch (action.type) {\r\n        case ACTION_DUPLICANT_RENAME: {\r\n            const {\r\n                duplicantID,\r\n                name\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            name,\r\n                            // Not sure about this.  This is used to select the duplicant biography flavor text.\r\n                            //  If the value is null, it is set to NB\r\n                            // nameStringKey: \"NB\"\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SKILL_SET_LEVEL: {\r\n            const {\r\n                duplicantID,\r\n                skillId,\r\n                level\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIAttributeLevelsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const levels = behavior.parsedData.saveLoadLevels;\r\n\r\n                    const skillIndex = levels.findIndex(x => x.attributeId === skillId);\r\n                    if (skillIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIAttributeLevelsBehavior}\" does not have skill ID ${skillId}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIAttributeLevelsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadLevels: [\r\n                                ...levels.slice(0, skillIndex),\r\n                                {\r\n                                    ...levels[skillIndex],\r\n                                    level: level\r\n                                },\r\n                                ...levels.slice(skillIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SKILL_SET_EXPERIENCE: {\r\n            const {\r\n                duplicantID,\r\n                skillId,\r\n                experience\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIAttributeLevelsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const levels = behavior.parsedData.saveLoadLevels;\r\n\r\n                    const skillIndex = levels.findIndex(x => x.attributeId === skillId);\r\n                    if (skillIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIAttributeLevelsBehavior}\" does not have skill ID ${skillId}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIAttributeLevelsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadLevels: [\r\n                                ...levels.slice(0, skillIndex),\r\n                                {\r\n                                    ...levels[skillIndex],\r\n                                    experience\r\n                                },\r\n                                ...levels.slice(skillIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_TRAITS_SET: {\r\n            const {\r\n                duplicantID,\r\n                traitIDs\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AITraitsBehavior,\r\n                (behavior, gameObjectIndex) => {\r\n                    const newBehavior: AITraitsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            TraitIds: traitIDs\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_ADD: {\r\n            const {\r\n                duplicantID,\r\n                effectID,\r\n                timeRemaining\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior, gameObjectIndex) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex !== -1) {\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects,\r\n                                {\r\n                                    id: effectID,\r\n                                    timeRemaining\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_SETTIME: {\r\n            const {\r\n                duplicantID,\r\n                effectID,\r\n                timeRemaining\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior, normalizedId) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex === -1) {\r\n                        error(`Action \"${action.type}\" prefabID ${duplicantID} prefab \"${normalizedId.type}\":${normalizedId.index} behavior \"${AIEffectsBehavior}\" does not have effect ID ${effectID}.`, FAILURE_TYPE.ACTION_INVALID);\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects.slice(0, effectIndex),\r\n                                {\r\n                                    ...effects[effectIndex],\r\n                                    timeRemaining\r\n                                },\r\n                                ...effects.slice(effectIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_EFFECTS_REMOVE: {\r\n            const {\r\n                duplicantID,\r\n                effectID\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                AIEffectsBehavior,\r\n                (behavior) => {\r\n                    const effects = behavior.parsedData.saveLoadEffects;\r\n\r\n                    const effectIndex = effects.findIndex(x => x.id === effectID);\r\n                    if (effectIndex === -1) {\r\n                        return behavior;\r\n                    }\r\n\r\n                    const newBehavior: AIEffectsBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            saveLoadEffects: [\r\n                                ...effects.slice(0, effectIndex),\r\n                                ...effects.slice(effectIndex + 1)\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_HEALTH_STATE_SET: {\r\n            const {\r\n                duplicantID,\r\n                healthState\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                HealthBehavior,\r\n                (behavior) => ({\r\n                    ...behavior,\r\n                    parsedData: {\r\n                        ...behavior.parsedData,\r\n                        State: healthState\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_SCALE_SET: {\r\n            const {\r\n                duplicantID,\r\n                scaleX,\r\n                scaleY\r\n            } = action.payload;\r\n\r\n            return modifyGameObject(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                (gameObject) => ({\r\n                    ...gameObject,\r\n                    scale: {\r\n                        ...gameObject.scale,\r\n                        x: scaleX || gameObject.scale.x,\r\n                        y: scaleY || gameObject.scale.y\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_GENDER_SET: {\r\n            const {\r\n                duplicantID,\r\n                gender\r\n            } = action.payload;\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            gender,\r\n                            // Update the string key, so the UI shows the appropriate value.\r\n                            genderStringKey: gender\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        case ACTION_DUPLICANT_VOICE_SET: {\r\n            const {\r\n                duplicantID,\r\n                voiceIdx\r\n            } = action.payload;\r\n\r\n            // TODO: Export this range from oni-save-parser\r\n            if (voiceIdx < 0 || voiceIdx > 4) {\r\n                warning(`Action \"${ACTION_DUPLICANT_VOICE_SET}\" has invalid voice id ${voiceIdx}: must be between 0 and 4.`);\r\n            }\r\n\r\n            return modifyBehavior(\r\n                state,\r\n                action,\r\n                duplicantID,\r\n                MinionIdentityBehavior,\r\n                (behavior) => {\r\n                    const newBehavior: MinionIdentityBehavior = {\r\n                        ...behavior,\r\n                        parsedData: {\r\n                            ...behavior.parsedData,\r\n                            voiceIdx\r\n                        }\r\n                    };\r\n                    return newBehavior;\r\n                }\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport { GameObjectBehavior, GameObject } from \"oni-save-parser\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState } from \"../state\";\r\n\r\nimport {\r\n    ACTION_CYCLE_SET,\r\n    ACTION_IMMIGRATION_TIMER_SET,\r\n    ACTION_IMMIGRATION_READY_SET,\r\n    GeneralActions\r\n} from \"./actions\";\r\n\r\n\r\nexport default function generalReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as GeneralActions;\r\n    switch(action.type) {\r\n        case ACTION_CYCLE_SET: {\r\n            const {\r\n                cycle\r\n            } = action.payload;\r\n\r\n            const saveGameRoot = state.saveGame;\r\n            if (!saveGameRoot) return state;\r\n            const saveGameObject = saveGameRoot.body.gameObjects[\"SaveGame\"];\r\n            if (!saveGameObject || saveGameObject.length !== 1) return state;\r\n            const gameObject = saveGameObject[0];\r\n            const behaviorIndex = gameObject.behaviors.findIndex(x => x.name === \"GameClock\");\r\n            if (behaviorIndex === -1) return state;\r\n            const behavior = gameObject.behaviors[behaviorIndex];\r\n\r\n            const newBehavior: GameObjectBehavior = {\r\n                ...behavior,\r\n                parsedData: {\r\n                    ...behavior.parsedData,\r\n                    cycle\r\n                }\r\n            };\r\n\r\n            const newGameObject: GameObject = {\r\n                ...gameObject,\r\n                behaviors: [\r\n                    ...gameObject.behaviors.slice(0, behaviorIndex),\r\n                    newBehavior,\r\n                    ...gameObject.behaviors.slice(behaviorIndex + 1)\r\n                ]\r\n            };\r\n        \r\n            return {\r\n                ...state,\r\n                saveGame: {\r\n                    ...saveGameRoot,\r\n                    body: {\r\n                        ...saveGameRoot.body,\r\n                        gameObjects: {\r\n                            ...saveGameRoot.body.gameObjects,\r\n                            SaveGame: [\r\n                                newGameObject\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ACTION_IMMIGRATION_TIMER_SET: {\r\n            const {\r\n                time\r\n            } = action.payload;\r\n\r\n            const saveGameRoot = state.saveGame;\r\n            if (!saveGameRoot) return state;\r\n            const saveGameObject = saveGameRoot.body.gameObjects[\"SaveGame\"];\r\n            if (!saveGameObject || saveGameObject.length !== 1) return state;\r\n            const gameObject = saveGameObject[0];\r\n            const behaviorIndex = gameObject.behaviors.findIndex(x => x.name === \"Immigration\");\r\n            if (behaviorIndex === -1) return state;\r\n            const behavior = gameObject.behaviors[behaviorIndex];\r\n\r\n            const newBehavior: GameObjectBehavior = {\r\n                ...behavior,\r\n                parsedData: {\r\n                    ...behavior.parsedData,\r\n                    timeBeforeSpawn: time\r\n                }\r\n            };\r\n\r\n            const newGameObject: GameObject = {\r\n                ...gameObject,\r\n                behaviors: [\r\n                    ...gameObject.behaviors.slice(0, behaviorIndex),\r\n                    newBehavior,\r\n                    ...gameObject.behaviors.slice(behaviorIndex + 1)\r\n                ]\r\n            };\r\n        \r\n            return {\r\n                ...state,\r\n                saveGame: {\r\n                    ...saveGameRoot,\r\n                    body: {\r\n                        ...saveGameRoot.body,\r\n                        gameObjects: {\r\n                            ...saveGameRoot.body.gameObjects,\r\n                            SaveGame: [\r\n                                newGameObject\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ACTION_IMMIGRATION_READY_SET: {\r\n            const {\r\n                ready\r\n            } = action.payload;\r\n\r\n            const saveGameRoot = state.saveGame;\r\n            if (!saveGameRoot) return state;\r\n            const saveGameObject = saveGameRoot.body.gameObjects[\"SaveGame\"];\r\n            if (!saveGameObject || saveGameObject.length !== 1) return state;\r\n            const gameObject = saveGameObject[0];\r\n            const behaviorIndex = gameObject.behaviors.findIndex(x => x.name === \"Immigration\");\r\n            if (behaviorIndex === -1) return state;\r\n            const behavior = gameObject.behaviors[behaviorIndex];\r\n\r\n            const newBehavior: GameObjectBehavior = {\r\n                ...behavior,\r\n                parsedData: {\r\n                    ...behavior.parsedData,\r\n                    bImmigrantAvailable: ready\r\n                }\r\n            };\r\n\r\n            const newGameObject: GameObject = {\r\n                ...gameObject,\r\n                behaviors: [\r\n                    ...gameObject.behaviors.slice(0, behaviorIndex),\r\n                    newBehavior,\r\n                    ...gameObject.behaviors.slice(behaviorIndex + 1)\r\n                ]\r\n            };\r\n        \r\n            return {\r\n                ...state,\r\n                saveGame: {\r\n                    ...saveGameRoot,\r\n                    body: {\r\n                        ...saveGameRoot.body,\r\n                        gameObjects: {\r\n                            ...saveGameRoot.body.gameObjects,\r\n                            SaveGame: [\r\n                                newGameObject\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport { getBehavior, KPrefabIDBehavior } from \"oni-save-parser\";\r\n\r\nimport { warning, error, FAILURE_TYPE } from \"@/logging\";\r\n\r\nimport { SaveEditorState, defaultSaveEditorState, NormalizedID } from \"../state\";\r\n\r\nimport {\r\n    SavefileActions,\r\n    ACTION_SAVEFILE_LOAD,\r\n    ACTION_SAVEFILE_RECEIVED,\r\n    ACTION_SAVEFILE_SAVE_START,\r\n    ACTION_SAVEFILE_SAVE_END\r\n} from \"./actions\";\r\n\r\nexport default function saveFileReducer(state: SaveEditorState = defaultSaveEditorState, _action: AnyAction): SaveEditorState {\r\n    const action = _action as SavefileActions;\r\n    switch (action.type) {\r\n        case ACTION_SAVEFILE_LOAD: {\r\n            const {\r\n                file\r\n            } = action.payload;\r\n\r\n            // Also ignored in saga.\r\n            if (state.isSaving) return state;\r\n\r\n            return {\r\n                ...defaultSaveEditorState,\r\n                fileName: file.name,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case ACTION_SAVEFILE_RECEIVED: {\r\n            const {\r\n                saveGame\r\n            } = action.payload;\r\n\r\n            // Build a normalization cache of game object PrefabIDs to the\r\n            //  type and array index of the object.\r\n            // We can save a lot of work by precaching this information,\r\n            //  and we (currently) do not create / delete / reorder any objects.\r\n            const normalizedIDs: NormalizedID[] = [];\r\n            for (let prefabType in saveGame.body.gameObjects) {\r\n                const prefabs = saveGame.body.gameObjects[prefabType];\r\n                for (let i = 0; i < prefabs.length; i++) {\r\n                    const idBehavior = getBehavior(prefabs[i], KPrefabIDBehavior);\r\n                    if (!idBehavior) {\r\n                        warning(`GameObject at \"${prefabs}\":${i} has no behavior \"${KPrefabIDBehavior}\".`, FAILURE_TYPE.MISSING_BEHAVIOR);\r\n                        continue;\r\n                    }\r\n                    if (!idBehavior.parsedData || isNaN(idBehavior.parsedData.InstanceID)) {\r\n                        error(`GameObject at \"${prefabType}\":${i} has invalid data in behavior \"${KPrefabIDBehavior}\".`, FAILURE_TYPE.SAVEFILE_CORRUPT);\r\n                        continue;\r\n                    }\r\n\r\n                    normalizedIDs[idBehavior.parsedData.InstanceID] = {\r\n                        type: prefabType,\r\n                        index: i\r\n                    };\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                saveGame: action.payload.saveGame,\r\n                normalizedIDs\r\n            };\r\n        }\r\n        case ACTION_SAVEFILE_SAVE_START:\r\n            return {\r\n                ...state,\r\n                isSaving: true\r\n            }\r\n        case ACTION_SAVEFILE_SAVE_END:\r\n            return {\r\n                ...state,\r\n                isSaving: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { AnyAction } from \"redux\";\r\nimport { SaveEditorState, defaultSaveEditorState } from \"./state\";\r\n\r\nimport saveFileReducer from \"./savefile/reducer\";\r\nimport generalReducer from \"./general/reducer\";\r\nimport duplicantsReducer from \"./duplicants/reducer\";\r\n\r\n/**\r\n * Flat list of reducers to run against SaveEditorState\r\n * Reducers run in-order.\r\n * \r\n * We do not split into sub-states using combineReducers, since\r\n * these need access to all of the state at this level.\r\n * \r\n * These should be broken into sub-states when we are more normalized.\r\n */\r\nconst reducers = [\r\n    saveFileReducer,\r\n    generalReducer,\r\n    duplicantsReducer\r\n];\r\n\r\nexport default function saveEditorReducer(state: SaveEditorState = defaultSaveEditorState, action: AnyAction): SaveEditorState {\r\n    for (let reducer of reducers) {\r\n        state = reducer(state, action);\r\n    }\r\n    return state;\r\n}\r\n","\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport saveEditorReducer from \"../services/save-editor/reducer\";\r\nimport { saveEditorStateKey } from \"../services/save-editor/state\";\r\n\r\nconst reducer = combineReducers({\r\n    [saveEditorStateKey]: saveEditorReducer\r\n});\r\n\r\nexport default reducer;\r\n","\r\nimport { applyMiddleware, createStore, Middleware } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport { AppState, defaultState } from \"./state\";\r\n\r\nimport sagaMiddleware from \"./saga\";\r\n\r\nconst middleware: Middleware[] = [\r\n    sagaMiddleware\r\n];\r\n\r\nconst store = createStore(reducer, /* preloadedState, */ applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","module.exports = \"\\r\\n### v1.3.0\\r\\n- Edit current cycle.\\r\\n- Edit duplicant printer\\r\\n    - Next duplicant ready\\r\\n    - Time to next duplicant\\r\\n\\r\\n### v1.2.1\\r\\n- Fix save corruption when text with multi-byte accents are encountered.\\r\\n- Refactor URL layout to make way for future utilities.\\r\\n\\r\\n### v1.2.0\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Current Job\\r\\n    - Target Job\\r\\n    - Job Experience\\r\\n    - Job Mastery\\r\\n\\r\\n### v1.1.0\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Gender (data only; no visual effect)\\r\\n    - Voice\\r\\n    - Appearance\\r\\n- Dedicated load button (no more refreshes to edit new saves)\\r\\n\\r\\n### v1.0.0\\r\\n\\r\\nGround-up rewrite.\\r\\n\\r\\n- Edit Duplicants\\r\\n    - Name\\r\\n    - Size (width and height)\\r\\n    - Health Status (healthy, critical, incapacitated, invulnurable, ...)\\r\\n    - Skills (level and experience)\\r\\n    - Traits\\r\\n    - Status Effects\\r\\n- New Theme\\r\\n- Non-blocking file loading and saving.  Prevents browsers from killing the process when working with large saves.\\r\\n- Internal cleanup for mantainability going forward.\"","\r\nimport * as React from \"react\";\r\nimport Markdown from \"react-markdown\";\r\n\r\nconst changelog = require(\"@/../CHANGELOG.md\");\r\n\r\nexport default class ChangelogPage extends React.Component {\r\n    render() {\r\n        return <Markdown className=\"ui-page ui-page-changelog fill-parent\" source={changelog}/>\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nclass DuplicantsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <NonIdealState className=\"ui-page ui-page-404\" visual={IconNames.ERROR}>\r\n                <div>\r\n                    <div className=\"ui-title\">I don't know how you got here...</div>\r\n                    <div className=\"ui-title-secondary\">But weasels were probably involved.</div>\r\n                </div>\r\n                <div className=\"ui-body\">\r\n                    <div>No idea what this page is supposed to be, sorry.</div>\r\n                    <div>Try choosing something else to edit.</div>\r\n                </div>\r\n            </NonIdealState>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DuplicantsPage","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { addDuplicantEffect, removeDuplicantEffect, setDuplicantEffectTime} from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    addEffect: typeof addDuplicantEffect;\r\n    removeEffect: typeof removeDuplicantEffect;\r\n    setEffectTime: typeof setDuplicantEffectTime;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        addEffect: addDuplicantEffect,\r\n        removeEffect: removeDuplicantEffect,\r\n        setEffectTime: setDuplicantEffectTime\r\n    }, dispatch);\r\n}","\r\nimport { EffectInstance } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\nimport { makeGetDuplicantEffects  } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    effects: EffectInstance[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    effects: makeGetDuplicantEffects(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { AI_EFFECT_IDS } from \"oni-save-parser\";\r\n\r\nimport { NumericInput, MenuItem, Button } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\n\r\n\r\nimport DuplicantEffectsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantEffectsProps & StateProps & DispatchProps;\r\nclass DuplicantEffects extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            effects\r\n        } = this.props;\r\n\r\n        const rows = effects.map(x =>\r\n            <DuplicantEffectRow\r\n                key={x.id}\r\n                id={x.id}\r\n                timeRemaining={x.timeRemaining}\r\n                onChangeTime={this._onEffectChangeTime}\r\n                onRemove={this._onEffectRemoved}\r\n            />);\r\n\r\n        return (\r\n            <div className={`ui-duplicant-effects fill-parent layout-vertical`}>\r\n                <div className=\"container-scroll layout-item-fill\">\r\n                    <table className=\"pt-html-table pt-html-table-striped fill-parent-width\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Effect</th>\r\n                                <th>Time Remaining (ms)</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <StringSelect\r\n                        items={AI_EFFECT_IDS}\r\n                        itemPredicate={this._filterItem}\r\n                        itemRenderer={this._renderItem}\r\n                        onItemSelect={this._onEffectSelected}\r\n                        filterable={true}\r\n                        resetOnClose={true}\r\n                        resetOnSelect={true}\r\n                        popoverProps={{ minimal: true }}\r\n                    >\r\n                        <Button rightIcon=\"caret-down\" text=\"Add a new Effect\" />\r\n                    </StringSelect>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private _filterItem(query: string, item: string) {\r\n        return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onEffectSelected(effectID: string) {\r\n        const {\r\n            duplicantID,\r\n            addEffect\r\n        } = this.props;\r\n        addEffect({ duplicantID, effectID, timeRemaining: 5000 });\r\n    }\r\n\r\n    @autobind()\r\n    private _onEffectChangeTime(effectID: string, timeRemaining: number) {\r\n        const {\r\n            duplicantID,\r\n            setEffectTime\r\n        } = this.props;\r\n        setEffectTime({ duplicantID, effectID, timeRemaining });\r\n    }\r\n\r\n    @autobind()\r\n    private _onEffectRemoved(effectID: string) {\r\n        const {\r\n            duplicantID,\r\n            removeEffect\r\n        } = this.props;\r\n        removeEffect({ duplicantID, effectID });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantEffects);\r\n\r\n\r\ninterface DuplicantEffectRowProps {\r\n    id: string;\r\n    timeRemaining: number;\r\n    onChangeTime(id: string, timeRemaining: number): void;\r\n    onRemove(id: string): void;\r\n}\r\n\r\nclass DuplicantEffectRow extends React.Component<DuplicantEffectRowProps> {\r\n    constructor(props: DuplicantEffectRowProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            id,\r\n            timeRemaining\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td>\r\n                    <NumericInput\r\n                        value={timeRemaining}\r\n                        clampValueOnBlur={true}\r\n                        min={0}\r\n                        onValueChange={this._onTimeRemainingChange}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <Button icon={IconNames.SMALL_CROSS} onClick={this._onRemove} />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onTimeRemainingChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeTime\r\n        } = this.props;\r\n\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n\r\n        onChangeTime(id, value);\r\n    }\r\n\r\n    @autobind()\r\n    private _onRemove() {\r\n        const {\r\n            id,\r\n            onRemove\r\n        } = this.props;\r\n        onRemove(id);\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantCurrentRole,\r\n    setDuplicantTargetRole,\r\n    setDuplicantRoleMastery,\r\n    setDuplicantRoleExperience\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/resume/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setCurrentRole: typeof setDuplicantCurrentRole,\r\n    setTargetRole: typeof setDuplicantTargetRole,\r\n    setMastery: typeof setDuplicantRoleMastery;\r\n    setExperience: typeof setDuplicantRoleExperience;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setCurrentRole: setDuplicantCurrentRole,\r\n        setTargetRole: setDuplicantTargetRole,\r\n        setMastery: setDuplicantRoleMastery,\r\n        setExperience: setDuplicantRoleExperience\r\n    }, dispatch);\r\n}\r\n","import { ParametricSelector, createSelector } from \"reselect\";\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { makeGetBehaviorByName } from \"../../selectors\";\r\nimport { DuplicantByIDSelector, makeGetDuplicantByID } from \"../selectors\";\r\n\r\nexport interface JobStatus {\r\n    name: string;\r\n    mastery: boolean;\r\n    experience: number;\r\n}\r\n\r\nexport function makeGetDuplicantCurrentRole<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => resumeBehavior ? resumeBehavior.parsedData.currentRole : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantTargetRole<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => resumeBehavior ? resumeBehavior.parsedData.targetRole : null\r\n    );\r\n}\r\n\r\nexport function makeGetDuplicantRoleDetails<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, JobStatus[]> {\r\n    let selector: DuplicantByIDSelector<Props>;\r\n    if (typeof source === \"function\") {\r\n        selector = source;\r\n    }\r\n    else {\r\n        selector = makeGetDuplicantByID<Props>(source);\r\n    }\r\n\r\n    return createSelector(\r\n        makeGetBehaviorByName(selector, MinionResumeBehavior),\r\n        resumeBehavior => {\r\n            if (!resumeBehavior) return [];\r\n            const {\r\n                ExperienceByRoleID,\r\n                MasteryByRoleID\r\n            } = resumeBehavior.parsedData;\r\n            const statusByKey: {[key: string]: JobStatus} = {};\r\n            for (let [key, value] of ExperienceByRoleID.entries()) {\r\n                statusByKey[key] = {\r\n                    name: key,\r\n                    experience: value,\r\n                    mastery: false\r\n                };\r\n            }\r\n            for (let [key, value] of MasteryByRoleID.entries()) {\r\n                statusByKey[key] = {\r\n                    name: key,\r\n                    experience: 0,\r\n                    ...(statusByKey[key] || {}),\r\n                    mastery: value\r\n                };\r\n            }\r\n            return Object.keys(statusByKey).map(x => statusByKey[x]);\r\n        }\r\n    );\r\n}\r\n","\r\nimport { createStructuredSelector } from \"../../../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    makeGetDuplicantByID,\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/selectors\";\r\nimport {\r\n    JobStatus,\r\n    makeGetDuplicantCurrentRole,\r\n    makeGetDuplicantTargetRole,\r\n    makeGetDuplicantRoleDetails\r\n} from \"../../../../../../../../../../services/save-editor/duplicants/resume/selectors\";\r\n\r\nimport Props from \"./props\";\r\nimport { Vector3 } from \"oni-save-parser/dts/interfaces\";\r\n\r\nexport interface StateProps {\r\n    currentRole: string | null;\r\n    targetRole: string | null;\r\n    roles: JobStatus[];\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        currentRole: makeGetDuplicantCurrentRole(dupSelector),\r\n        targetRole: makeGetDuplicantTargetRole(dupSelector),\r\n        roles: makeGetDuplicantRoleDetails(dupSelector),\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NumericInput, Button, MenuItem } from \"@blueprintjs/core\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\n\r\nimport DuplicantJobsPageProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantJobsPageProps & StateProps & DispatchProps;\r\nclass DuplicantJobsPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            currentRole,\r\n            targetRole,\r\n            roles\r\n        } = this.props;\r\n\r\n        // Might want to make a constant for this, but this is better for future compatibility.\r\n        const knownRoles = Array.from(new Set(roles.map(x => x.name)));\r\n\r\n        const rows = roles.map(x => (\r\n            <JobRow key={x.name} jobID={x.name} mastery={x.mastery} experience={x.experience} setMastery={this._setMastery} setExperience={this._setExperience} />\r\n        ));\r\n\r\n        return (\r\n            <div className={`ui-duplicant-jobs fill-parent container-scroll`}>\r\n                <div className=\"layout-vertical\">\r\n                    <div className=\"layout-horizontal\">\r\n                        <div className=\"ui-current-role pt-form-group pt-inline\">\r\n                            <label className=\"pt-label\">\r\n                                Current Role\r\n                            </label>\r\n                            <div className=\"pt-form-content\">\r\n                                <StringSelect\r\n                                    items={knownRoles}\r\n                                    itemPredicate={this._filterItem}\r\n                                    itemRenderer={this._renderItem}\r\n                                    onItemSelect={this._onCurrentRoleSelected}\r\n                                    filterable={true}\r\n                                    resetOnClose={true}\r\n                                    resetOnSelect={true}\r\n                                    popoverProps={{ minimal: true }}\r\n                                >\r\n                                    <Button rightIcon=\"caret-down\" text={currentRole || \"[Unknown]\"} />\r\n                                </StringSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ui-target-role pt-form-group pt-inline\">\r\n                            <label className=\"pt-label\">\r\n                                Target Role\r\n                            </label>\r\n                            <div className=\"pt-form-content\">\r\n                                <StringSelect\r\n                                    items={knownRoles}\r\n                                    itemPredicate={this._filterItem}\r\n                                    itemRenderer={this._renderItem}\r\n                                    onItemSelect={this._onTargetRoleSelected}\r\n                                    filterable={true}\r\n                                    resetOnClose={true}\r\n                                    resetOnSelect={true}\r\n                                    popoverProps={{ minimal: true }}\r\n                                >\r\n                                    <Button rightIcon=\"caret-down\" text={targetRole || \"[Unknown]\"} />\r\n                                </StringSelect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"pt-html-table pt-html-table-striped fill-parent-width layout-item\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Job Name</th>\r\n                                <th>Mastery</th>\r\n                                <th>Experience</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _filterItem(query: string, item: string) {\r\n        return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onCurrentRoleSelected(roleID: string) {\r\n        const {\r\n            duplicantID,\r\n            setCurrentRole\r\n        } = this.props;\r\n        setCurrentRole({ duplicantID, roleID });\r\n    }\r\n\r\n    @autobind()\r\n    private _onTargetRoleSelected(roleID: string) {\r\n        const {\r\n            duplicantID,\r\n            setTargetRole\r\n        } = this.props;\r\n        setTargetRole({ duplicantID, roleID });\r\n    }\r\n\r\n    @autobind()\r\n    private _setMastery(roleID: string, mastery: boolean) {\r\n        const {\r\n            duplicantID,\r\n            setMastery\r\n        } = this.props;\r\n        setMastery({ duplicantID, roleID, mastery });\r\n    }\r\n\r\n    @autobind()\r\n    private _setExperience(roleID: string, experience: number) {\r\n        const {\r\n            duplicantID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience({ duplicantID, roleID, experience });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantJobsPage);\r\n\r\n\r\ninterface JobRowProps {\r\n    jobID: string;\r\n    mastery: boolean;\r\n    experience: number;\r\n    setMastery(jobID: string, mastery: boolean): void;\r\n    setExperience(jobID: string, experience: number): void;\r\n}\r\nclass JobRow extends React.Component<JobRowProps> {\r\n    render() {\r\n        const {\r\n            jobID,\r\n            mastery,\r\n            experience\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{jobID}</td>\r\n                <td>\r\n                    <label className=\"pt-control pt-checkbox\">\r\n                        <input type=\"checkbox\" checked={mastery} onChange={this._onSetMastery} />\r\n                        <span className=\"pt-control-indicator\"></span>\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <NumericInput\r\n                        value={experience}\r\n                        clampValueOnBlur={true}\r\n                        min={0}\r\n                        onValueChange={this._onSetExperience}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    _onSetMastery(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const checked = change.target.checked;\r\n        const {\r\n            jobID,\r\n            setMastery\r\n        } = this.props;\r\n        setMastery(jobID, checked);\r\n    }\r\n\r\n    @autobind()\r\n    private _onSetExperience(value: number) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n\r\n        const {\r\n            jobID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience(jobID, value);\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    Tabs,\r\n    Tab\r\n} from \"@blueprintjs/core\";\r\n\r\n\r\nimport DuplicantRolesPageProps from \"./props\";\r\n\r\n\r\nimport RolesPage from \"./pages/Roles\";\r\n\r\ntype Props = DuplicantRolesPageProps;\r\nclass DuplicantRolesPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            duplicantID\r\n        } = this.props;\r\n        return (\r\n            <div className=\"ui-duplicant-roles fill-parent\">\r\n                <Tabs className=\"fill-parent layout-horizontal\" vertical={true} renderActiveTabPanelOnly={true} id=\"DuplicantRolePages\">\r\n                    <Tab className=\"layout-item-fill\" id=\"roles\" title=\"Roles\" panel={<RolesPage duplicantID={duplicantID} />} />\r\n                    <Tab id=\"aptitudes\" title=\"Aptitudes\" disabled/>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DuplicantRolesPage;","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\n// TODO: move to oni-save-parser\r\nconst TRAITS: string[] = [\r\n    \"None\",\r\n    \"Stinky\",\r\n    \"Ellie\",\r\n    \"Joshua\",\r\n    \"Liam\",\r\n    \"CantResearch\",\r\n    \"CantBuild\",\r\n    \"CantCook\",\r\n    \"CantDig\",\r\n    \"Hemophobia\",\r\n    \"MedicalAid\",\r\n    \"ScaredyCat\",\r\n    \"MouthBreather\",\r\n    \"CalorieBurner\",\r\n    \"SmallBladder\",\r\n    \"Anemic\",\r\n    \"SlowLearner\",\r\n    \"NoodleArms\",\r\n    \"InteriorDecorator\",\r\n    \"Regeneration\",\r\n    \"DeeperDiversLungs\",\r\n    \"SunnyDisposition\",\r\n    \"RockCrusher\",\r\n    \"Uncultured\",\r\n    \"WeakImmuneSystem\",\r\n    \"IrritableBowel\",\r\n    \"Flatulence\",\r\n    \"Snorer\",\r\n    \"Narcolepsy\",\r\n    \"Twinkletoes\",\r\n    \"Greasemonkey\",\r\n    \"MoleHands\",\r\n    \"FastLearner\",\r\n    \"DiversLung\",\r\n    \"StrongArm\",\r\n    \"IronGut\",\r\n    \"StrongImmuneSystem\",\r\n    \"BedsideManner\",\r\n    \"Caring\",\r\n    \"Aggressive\",\r\n    \"UglyCrier\",\r\n    \"BingeEater\",\r\n    \"StressVomiter\",\r\n    \"EarlyBird\",\r\n    \"NightOwl\",\r\n    \"Claustrophobic\",\r\n    \"PrefersWarmer\",\r\n    \"PrefersColder\",\r\n    \"SensitiveFeet\",\r\n    \"Fashionable\",\r\n    \"Climacophobic\",\r\n    \"SolitarySleeper\",\r\n    \"Workaholic\"\r\n];\r\nexport default TRAITS;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { setDuplicantTraits } from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setTraits: typeof setDuplicantTraits\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setTraits: setDuplicantTraits\r\n    }, dispatch);\r\n}","\r\nimport { createStructuredSelector } from \"../../../../../../../../state/utils\";\r\n\r\nimport { makeGetDuplicantTraits } from \"../../../../../../../../services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    traits: string[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    traits: makeGetDuplicantTraits<Props>(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { MenuItem, Intent } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { MultiSelect, ItemRenderer, IItemRendererProps } from \"@blueprintjs/select\";\r\n\r\nimport DuplicantTraitsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\nimport TRAITS from \"./traits\";\r\n\r\n\r\nconst TraitMultiSelect = MultiSelect.ofType<string>();\r\n\r\ntype Props = DuplicantTraitsProps & StateProps & DispatchProps;\r\nclass DuplicantTraits extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            traits\r\n        } = this.props;\r\n\r\n\r\n        return (\r\n            <div className={`fill-parent ui-duplicant-traits`}>\r\n                <TraitMultiSelect\r\n                    className=\"fill-parent-width\"\r\n                    items={TRAITS}\r\n                    selectedItems={traits}\r\n                    onItemSelect={this._onTagSelected}\r\n                    itemPredicate={this._filterItem}\r\n                    itemRenderer={this._renderItem}\r\n                    tagRenderer={tag => tag}\r\n                    tagInputProps={{ onRemove: this._onTagRemoved }}\r\n                    noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                    popoverProps={{ minimal: true }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    @autobind()\r\n    private _onTagSelected(tag: string) {\r\n        const {\r\n            duplicantID,\r\n            traits,\r\n            setTraits\r\n        } = this.props;\r\n\r\n        if (traits.indexOf(tag) !== -1) {\r\n            return;\r\n        }\r\n\r\n        setTraits({ duplicantID, traitIDs: traits.concat(tag) });\r\n    }\r\n\r\n    @autobind()\r\n    private _onTagRemoved(tag: string) {\r\n        const {\r\n            duplicantID,\r\n            traits,\r\n            setTraits\r\n        } = this.props;\r\n\r\n        const index = traits.indexOf(tag);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        const newTraits = traits.slice();\r\n        newTraits.splice(index, 1);\r\n\r\n        setTraits({ duplicantID, traitIDs: newTraits });\r\n    }\r\n\r\n    private _filterItem(query: string, trait: string) {\r\n        return trait.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(trait: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        const {\r\n            traits\r\n        } = this.props;\r\n\r\n        const isSelected = traits.indexOf(trait) !== -1;\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                icon={isSelected ? IconNames.TICK : IconNames.BLANK}\r\n                key={trait}\r\n                onClick={handleClick}\r\n                text={trait}\r\n                shouldDismissPopover={false}\r\n            />\r\n        );\r\n    };\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantTraits);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport { setDuplicantSkillLevel, setDuplicantSkillExperience } from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setLevel: typeof setDuplicantSkillLevel;\r\n    setExperience: typeof setDuplicantSkillExperience;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setLevel: setDuplicantSkillLevel,\r\n        setExperience: setDuplicantSkillExperience\r\n    }, dispatch);\r\n}\r\n","\r\nimport { AttributeLevel } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\nimport { makeGetDuplicantSkills } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    skills: AttributeLevel[];\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    skills: makeGetDuplicantSkills<Props>(\"duplicantID\")\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { NumericInput } from \"@blueprintjs/core\";\r\n\r\nimport DuplicantSkillsProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantSkillsProps & StateProps & DispatchProps;\r\nclass DuplicantSkills extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            skills\r\n        } = this.props;\r\n\r\n        const rows = skills.map(x => \r\n            <DuplicantSkillRow\r\n                key={x.attributeId}\r\n                id={x.attributeId}\r\n                level={x.level}\r\n                experience={x.experience}\r\n                onChangeLevel={this._onChangeLevel}\r\n                onChangeExperience={this._onChangeExperience}\r\n        />);\r\n\r\n        return (\r\n            <div className={`ui-duplicant-skills fill-parent container-scroll`}>\r\n                <table className=\"pt-html-table pt-html-table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Skill</th>\r\n                            <th>Level</th>\r\n                            <th>Experience</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    @autobind()\r\n    private _onChangeLevel(id: string, level: number) {\r\n        const {\r\n            duplicantID,\r\n            setLevel\r\n        } = this.props;\r\n        setLevel({duplicantID: duplicantID, skillId: id, level});\r\n    }\r\n\r\n    @autobind()\r\n    private _onChangeExperience(id: string, experience: number) {\r\n        const {\r\n            duplicantID,\r\n            setExperience\r\n        } = this.props;\r\n        setExperience({duplicantID: duplicantID, skillId: id, experience});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantSkills);\r\n\r\n\r\ninterface DuplicantSkillRowProps {\r\n    id: string;\r\n    level: number;\r\n    experience: number;\r\n    onChangeLevel(id: string, level: number): void;\r\n    onChangeExperience(id: string, level: number): void;\r\n}\r\n\r\nclass DuplicantSkillRow extends React.Component<DuplicantSkillRowProps> {\r\n    render() {\r\n        const {\r\n            id,\r\n            level,\r\n            experience\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td><NumericInput\r\n                    value={level}\r\n                    clampValueOnBlur={true}\r\n                    min={0}\r\n                    onValueChange={this._onLevelChange}\r\n                /></td>\r\n                <td><NumericInput\r\n                    value={experience}\r\n                    clampValueOnBlur={true}\r\n                    min={0}\r\n                    onValueChange={this._onExperienceChange}\r\n                /></td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onLevelChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeLevel\r\n        } = this.props;\r\n\r\n        value = Math.round(value);\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n        \r\n        onChangeLevel(id, value);\r\n    }\r\n\r\n    @autobind()\r\n    private _onExperienceChange(value: number) {\r\n        const {\r\n            id,\r\n            onChangeExperience\r\n        } = this.props;\r\n\r\n        if (value < 0 || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n\r\n        onChangeExperience(id, value);\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantEyes,\r\n    setDuplicantHair,\r\n    setDuplicantHead,\r\n    setDuplicantMouth,\r\n    setDuplicantBody\r\n} from \"../../../../../../../../services/save-editor/duplicants/appearance/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setEyes: typeof setDuplicantEyes;\r\n    setHair: typeof setDuplicantHair;\r\n    setHead: typeof setDuplicantHead;\r\n    setMouth: typeof setDuplicantMouth;\r\n    setBody: typeof setDuplicantBody;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setEyes: setDuplicantEyes,\r\n        setHair: setDuplicantHair,\r\n        setHead: setDuplicantHead,\r\n        setMouth: setDuplicantMouth,\r\n        setBody: setDuplicantBody,\r\n    }, dispatch);\r\n}\r\n","import { ParametricSelector, createSelector } from \"reselect\";\r\nimport { AccessorizerBehavior, getAccessoryOfType } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { makeGetBehaviorByName } from \"../../selectors\";\r\nimport { DuplicantByIDSelector, makeGetDuplicantByID } from \"../selectors\";\r\n\r\nexport const makeGetDuplicantEyes = makeGetDuplicantAppearanceMaker(\"eyes\");\r\nexport const makeGetDuplicantHair = makeGetDuplicantAppearanceMaker(\"hair\");\r\nexport const makeGetDuplicantHead = makeGetDuplicantAppearanceMaker(\"headshape\");\r\nexport const makeGetDuplicantMouth = makeGetDuplicantAppearanceMaker(\"mouth\");\r\nexport const makeGetDuplicantBody = makeGetDuplicantAppearanceMaker(\"body\");\r\n\r\nfunction makeGetDuplicantAppearanceMaker(type: string) {\r\n    return function<Props>(source: (keyof Props) | DuplicantByIDSelector<Props>): ParametricSelector<AppState, Props, string | null> {\r\n        let selector: DuplicantByIDSelector<Props>;\r\n        if (typeof source === \"function\") {\r\n            selector = source;\r\n        }\r\n        else {\r\n            selector = makeGetDuplicantByID<Props>(source);\r\n        }\r\n    \r\n        return createSelector(\r\n            makeGetBehaviorByName(selector, AccessorizerBehavior),\r\n            accessorizerBehavior => {\r\n                if(!accessorizerBehavior) return null;\r\n                const accessory = getAccessoryOfType(accessorizerBehavior.parsedData.accessories, type);\r\n                if (!accessory) return null;\r\n                return accessory.guid.Guid;\r\n            }\r\n        );\r\n    }\r\n}","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\nimport {\r\n    makeGetDuplicantEyes,\r\n    makeGetDuplicantHair,\r\n    makeGetDuplicantHead,\r\n    makeGetDuplicantMouth,\r\n    makeGetDuplicantBody\r\n} from \"@/services/save-editor/duplicants/appearance/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    eyes: string | null;\r\n    hair: string | null;\r\n    head: string | null;\r\n    mouth: string | null;\r\n    body: string | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        eyes: makeGetDuplicantEyes(dupSelector),\r\n        hair: makeGetDuplicantHair(dupSelector),\r\n        head: makeGetDuplicantHead(dupSelector),\r\n        mouth: makeGetDuplicantMouth(dupSelector),\r\n        body: makeGetDuplicantBody(dupSelector)\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { Button, MenuItem } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\n\r\nimport { \r\n    ACCESSORIZER_EYE_GUIDS,\r\n    ACCESSORIZER_HAIR_GUIDS,\r\n    ACCESSORIZER_HEAD_GUIDS,\r\n    ACCESSORIZER_MOUTH_GUIDS,\r\n    ACCESSORIZER_BODY_GUIDS\r\n} from \"oni-save-parser\";\r\n\r\n\r\nimport DuplicantAccessoryPageProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = DuplicantAccessoryPageProps & StateProps & DispatchProps;\r\nclass DuplicantAccessoryPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            duplicantID,\r\n            eyes,\r\n            setEyes,\r\n\r\n            hair,\r\n            setHair,\r\n\r\n            head,\r\n            setHead,\r\n            \r\n            mouth,\r\n            setMouth,\r\n\r\n            body,\r\n            setBody,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={`ui-duplicant-accessories fill-parent layout-vertical container-scroll`}>\r\n                <AppearanceGroup name=\"Eyes\" duplicantID={duplicantID} value={eyes} accessories={ACCESSORIZER_EYE_GUIDS} onSet={setEyes}/>\r\n                <AppearanceGroup name=\"Head\" duplicantID={duplicantID} value={head} accessories={ACCESSORIZER_HEAD_GUIDS} onSet={setHead}/>\r\n                <AppearanceGroup name=\"Hair\" duplicantID={duplicantID} value={hair} accessories={ACCESSORIZER_HAIR_GUIDS} onSet={setHair}/>\r\n                <AppearanceGroup name=\"Mouth\" duplicantID={duplicantID} value={mouth} accessories={ACCESSORIZER_MOUTH_GUIDS} onSet={setMouth}/>\r\n                <AppearanceGroup name=\"Body\" duplicantID={duplicantID} value={body} accessories={ACCESSORIZER_BODY_GUIDS} onSet={setBody}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantAccessoryPage);\r\n\r\n\r\ninterface AppearanceGroupProps {\r\n    duplicantID: number;\r\n    name: string;\r\n    accessories: string[];\r\n    value: string | null;\r\n    onSet({duplicantID, accessoryID}: {duplicantID: number, accessoryID: string}): void\r\n}\r\nclass AppearanceGroup extends React.Component<AppearanceGroupProps> {\r\n    render() {\r\n        const {\r\n            name,\r\n            accessories,\r\n            value\r\n        } = this.props;\r\n        return (\r\n            <div className=\"pt-form-group pt-inline\">\r\n            <label className=\"pt-label\">\r\n                {name}\r\n            </label>\r\n            <div className=\"pt-form-content\">\r\n                <StringSelect\r\n                    items={accessories}\r\n                    itemRenderer={this._renderItem}\r\n                    onItemSelect={this._onSet}\r\n                    filterable={false}\r\n                    resetOnClose={true}\r\n                    resetOnSelect={true}\r\n                    popoverProps={{ minimal: true }}\r\n                >\r\n                    <Button rightIcon=\"caret-down\" text={value || \"[Accessory not Found]\"} />\r\n                </StringSelect>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(accessoryID: string, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={accessoryID}\r\n                onClick={handleClick}\r\n                text={accessoryID}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onSet(accessoryID: string) {\r\n        const {\r\n            duplicantID,\r\n            onSet\r\n        } = this.props;\r\n        onSet({duplicantID, accessoryID});\r\n    }\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../../../../../../../state/utils\";\r\n\r\nimport {\r\n    setDuplicantGender,\r\n    setDuplicantVoice,\r\n    setDuplicantScale,\r\n    setDuplicantHealthState,\r\n} from \"../../../../../../../../services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setGender: typeof setDuplicantGender;\r\n    setVoice: typeof setDuplicantVoice;\r\n    setScale: typeof setDuplicantScale;\r\n    setHealthState: typeof setDuplicantHealthState;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setGender: setDuplicantGender,\r\n        setVoice: setDuplicantVoice,\r\n        setScale: setDuplicantScale,\r\n        setHealthState: setDuplicantHealthState\r\n    }, dispatch);\r\n}\r\n","\r\nimport { MinionGender, Vector3, AttributeLevel } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport {\r\n    makeGetDuplicantByID,\r\n    makeGetDuplicantGender,\r\n    makeGetDuplicantVoice,\r\n    makeGetDuplicantScale,\r\n    makeGetDuplicantHealthState\r\n} from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    gender: MinionGender | null;\r\n    voiceIdx: number | null;\r\n    scale: Vector3 | null;\r\n    healthState: number | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const dupSelector = makeGetDuplicantByID(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        gender: makeGetDuplicantGender(dupSelector),\r\n        voiceIdx: makeGetDuplicantVoice(dupSelector),\r\n        scale: makeGetDuplicantScale(dupSelector),\r\n        healthState: makeGetDuplicantHealthState(dupSelector)\r\n    });\r\n}\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { HEALTH_STATE_NAMES, MINION_IDENTITY_GENDERS, MinionGender } from \"oni-save-parser\";\r\n\r\nimport { Button, MenuItem, NumericInput } from \"@blueprintjs/core\";\r\nimport { Select, IItemRendererProps } from \"@blueprintjs/select\";\r\nconst StringSelect = Select.ofType<string>();\r\nconst NumberSelect = Select.ofType<number>();\r\n\r\n\r\nimport DuplicantGeneralProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\n// We only care about > 0\r\nconst MIN_SCALE = Number.EPSILON;\r\n\r\ntype Props = DuplicantGeneralProps & StateProps & DispatchProps;\r\nclass DuplicantGeneralPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            gender,\r\n            scale,\r\n            healthState,\r\n            voiceIdx\r\n        } = this.props;\r\n\r\n        const scaleX = scale ? scale.x : 1;\r\n        const scaleY = scale ? scale.y : 1;\r\n\r\n        let healthStateStr: string;\r\n        if (healthState != null && healthState >= 0 && healthState < HEALTH_STATE_NAMES.length) {\r\n            healthStateStr = HEALTH_STATE_NAMES[healthState];\r\n        }\r\n        else {\r\n            healthStateStr = `<Unknown Health State ${healthState}>`;\r\n        }\r\n\r\n        return (\r\n            <div className=\"fill-parent\">\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Gender\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <StringSelect\r\n                            // TODO: Export from oni-save-parser\r\n                            items={MINION_IDENTITY_GENDERS}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onGenderSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={gender || \"MALE\"} />\r\n                        </StringSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Voice\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <NumberSelect\r\n                            // TODO: get from oni-save-parser\r\n                            items={[0, 1, 2, 3, 4]}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onVoiceSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={`Voice ${voiceIdx || 0}`} />\r\n                        </NumberSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Scale\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Horizontal</span>\r\n                            <NumericInput min={MIN_SCALE} clampValueOnBlur={true} value={scaleX} onValueChange={this._onScaleX} />\r\n                        </div>\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Vertical</span>\r\n                            <NumericInput min={MIN_SCALE} clampValueOnBlur={true} value={scaleY} onValueChange={this._onScaleY} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group pt-inline\">\r\n                    <label className=\"pt-label\">\r\n                        Health State\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <StringSelect\r\n                            items={HEALTH_STATE_NAMES}\r\n                            itemRenderer={this._renderItem}\r\n                            onItemSelect={this._onHealthStateSelected}\r\n                            filterable={false}\r\n                            resetOnClose={true}\r\n                            resetOnSelect={true}\r\n                            popoverProps={{ minimal: true }}\r\n                        >\r\n                            <Button rightIcon=\"caret-down\" text={healthStateStr} />\r\n                        </StringSelect>\r\n                        <div className=\"pt-form-helper-text\">The duplicant's current overall health condition.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _renderItem(effect: string | number, itemProps: IItemRendererProps) {\r\n        const {\r\n            modifiers,\r\n            handleClick\r\n        } = itemProps;\r\n\r\n        if (!modifiers.matchesPredicate) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <MenuItem\r\n                active={modifiers.active}\r\n                key={effect}\r\n                onClick={handleClick}\r\n                text={effect}\r\n            />\r\n        );\r\n    };\r\n\r\n    @autobind()\r\n    private _onHealthStateSelected(healthState: string) {\r\n        const {\r\n            duplicantID,\r\n            setHealthState\r\n        } = this.props;\r\n\r\n        // Need to get the enum value of the display text.\r\n        const stateIndex = HEALTH_STATE_NAMES.indexOf(healthState);\r\n        if (stateIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        setHealthState({ duplicantID, healthState: stateIndex });\r\n    }\r\n\r\n    @autobind()\r\n    private _onGenderSelected(gender: string) {\r\n        const {\r\n            duplicantID,\r\n            setGender\r\n        } = this.props;\r\n        setGender({duplicantID, gender: gender as MinionGender});\r\n    }\r\n\r\n    @autobind()\r\n    private _onVoiceSelected(voiceIdx: number) {\r\n        const {\r\n            duplicantID,\r\n            setVoice\r\n        } = this.props;\r\n        setVoice({duplicantID, voiceIdx});\r\n    }\r\n\r\n    @autobind()\r\n    private _onScaleX(value: number) {\r\n        const {\r\n            duplicantID,\r\n            setScale\r\n        } = this.props;\r\n\r\n        // Negative numbers dont render; probably because sprite normal faces\r\n        //  away from game camera.\r\n        if (value === 0 || isNaN(value)) {\r\n            value = 1;\r\n        }\r\n\r\n        setScale({ duplicantID, scaleX: value });\r\n    }\r\n\r\n    @autobind()\r\n    private _onScaleY(value: number) {\r\n        const {\r\n            duplicantID,\r\n            setScale\r\n        } = this.props;\r\n\r\n        // Negative numbers dont render; probably because sprite normal faces\r\n        //  away from game camera.\r\n        if (value <= 0 || isNaN(value)) {\r\n            value = 1;\r\n        }\r\n\r\n        setScale({ duplicantID, scaleY: value });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantGeneralPage);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"@/state/utils\";\r\n\r\nimport { renameDuplicant } from \"@/services/save-editor/duplicants/actions\";\r\n\r\nexport interface DispatchProps {\r\n    renameDuplicant: typeof renameDuplicant;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        renameDuplicant\r\n    }, dispatch);\r\n}\r\n","\r\nimport { MinionIdentityBehavior } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetBehaviorByName } from \"@/services/save-editor/selectors\";\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    identityBehavior: MinionIdentityBehavior | null;\r\n}\r\n\r\nconst mapStateToProps = () => createStructuredSelector<Props, StateProps>({\r\n    identityBehavior: makeGetBehaviorByName(makeGetDuplicantByID<Props>(\"duplicantID\"), MinionIdentityBehavior)\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n    EditableText,\r\n    Tabs,\r\n    Tab,\r\n    NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport { error, FAILURE_TYPE } from \"../../../../../../logging\";\r\n\r\n\r\nimport DuplicantEditorProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\nimport GeneralPage from \"./pages/General\";\r\nimport AppearancePage from \"./pages/Appearance\";\r\nimport SkillsPage from \"./pages/Skills\";\r\nimport TraitsPage from \"./pages/Traits\";\r\nimport JobsPage from \"./pages/Jobs\";\r\nimport EffectsPage from \"./pages/Effects\";\r\n\r\n\r\ntype Props = DuplicantEditorProps & StateProps & DispatchProps;\r\ninterface State {\r\n    rename: string | null;\r\n}\r\nclass DuplicantEditor extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rename: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            duplicantID,\r\n            identityBehavior\r\n        } = this.props;\r\n\r\n        const {\r\n            rename\r\n        } = this.state;\r\n\r\n        if (!identityBehavior) {\r\n            error(\"Duplicant identity behavior missing\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            return (\r\n                <NonIdealState visual={IconNames.ERROR}>\r\n                    Duplicant has no identity behavior.\r\n                </NonIdealState>\r\n            )\r\n        }\r\n        \r\n        const name = rename || identityBehavior.parsedData.name;\r\n        \r\n        return (\r\n            <div className={`ui-duplicant-editor layout-vertical ${className}`}>\r\n                <div className=\"layout-item\">\r\n                    <h1 className=\"ui-title\">\r\n                        <EditableText\r\n                            value={name}\r\n                            onChange={this._onNameChange}\r\n                            onConfirm={this._onRename}\r\n                        />\r\n                    </h1> <span className=\"pt-text-muted\">(click to edit name)</span>\r\n                </div>\r\n                <div className=\"layout-item-fill\">\r\n                    <Tabs id=\"DuplicantEditCategories\" className=\"ui-category-tabs fill-parent layout-vertical\" renderActiveTabPanelOnly={true}>\r\n                        <Tab className=\"layout-item-fill\" id=\"general\" title=\"General\" panel={<GeneralPage duplicantID={duplicantID} />} />\r\n                        <Tab className=\"layout-item-fill\" id=\"appearance\" title=\"Appearance\" panel={<AppearancePage duplicantID={duplicantID} />} />\r\n                        <Tab className=\"layout-item-fill\" id=\"skills\" title=\"Skills\" panel={<SkillsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"traits\" title=\"Traits\" panel={<TraitsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"jobs\" title=\"Jobs\" panel={<JobsPage duplicantID={duplicantID}/>} />\r\n                        <Tab className=\"layout-item-fill\" id=\"effects\" title=\"Effects\" panel={<EffectsPage duplicantID={duplicantID}/>} />\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onNameChange(str: string) {\r\n        this.setState(s => ({\r\n            ...s,\r\n            rename: str\r\n        }));\r\n    }\r\n\r\n    @autobind()\r\n    private _onRename() {\r\n        const name = this.state.rename;\r\n        if (!name) return;\r\n        this.props.renameDuplicant({duplicantID: this.props.duplicantID, name});\r\n        this.setState(s => ({\r\n            ...s,\r\n            rename: null\r\n        }));\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DuplicantEditor);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"../../../../../../state/utils\";\r\n\r\nimport { duplicantsIDs } from \"../../../../../../services/save-editor/duplicants/selectors\";\r\n\r\nexport interface StateProps {\r\n    duplicantsIDs: number[];\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    duplicantsIDs\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport { createSelector } from \"reselect\";\r\nimport { MinionIdentityBehavior, MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { makeGetBehaviorByName } from \"@/services/save-editor/selectors\";\r\nimport { makeGetDuplicantByID } from \"@/services/save-editor/duplicants/selectors\";\r\n\r\nimport Props from \"./props\";\r\n\r\nexport interface StateProps {\r\n    identityBehavior: MinionIdentityBehavior | null;\r\n    resumeBehavior: MinionResumeBehavior | null;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    const duplicant = makeGetDuplicantByID<Props>(\"duplicantID\");\r\n    return createStructuredSelector<Props, StateProps>({\r\n        identityBehavior: makeGetBehaviorByName(duplicant, MinionIdentityBehavior),\r\n        resumeBehavior: makeGetBehaviorByName(duplicant, MinionResumeBehavior)\r\n    })\r\n};\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { Card } from \"@blueprintjs/core\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { error, FAILURE_TYPE } from \"../../../../../../logging\";\r\n\r\n\r\n\r\nimport DuplicantPortraitProps from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\ntype Props = DuplicantPortraitProps & StateProps;\r\nclass DuplicantPortrait extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            className,\r\n            identityBehavior,\r\n            resumeBehavior\r\n        } = this.props;\r\n\r\n        let outerClassName = `ui-duplicant-portrait ${className}`;\r\n\r\n        let name: string;\r\n        let role: string;\r\n\r\n        if (identityBehavior) {\r\n            name = identityBehavior.parsedData.name;\r\n        }\r\n        else {\r\n            error(\"Duplicant not found or identity behavior missing.\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            name = \"[IDENTITY MISSING]\";\r\n        }\r\n\r\n        if (resumeBehavior) {\r\n            role = resumeBehavior.parsedData.currentRole\r\n        }\r\n        else {\r\n            error(\"resume behavior missing.\", FAILURE_TYPE.MISSING_BEHAVIOR);\r\n            role = \"[RESUME MISSING]\";\r\n        }\r\n\r\n        return (\r\n            <Card className={outerClassName} interactive={true} onClick={this._onClick}>\r\n                <h5 className=\"ui-duplicant-name\">{name}</h5>\r\n                {/* TODO render a picture.  Plenty of data in identity to do so.  Also see Accessorizer */}\r\n                <div className=\"ui-duplicant-role\">{role}</div>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onClick() {\r\n        const {\r\n            duplicantID,\r\n            onClick\r\n        } = this.props;\r\n        if (onClick) onClick(duplicantID);\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantPortrait);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport DuplicantPortrait from \"../DuplicantPortrait\";\r\n\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\nexport interface DuplicantsListProps {\r\n    className?: string;\r\n    selectedDuplicantID?: number | null;\r\n    onDuplicantClick?(duplicantID: number): void;\r\n}\r\n\r\ntype Props = DuplicantsListProps & StateProps;\r\nclass DuplicantsList extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            className,\r\n            duplicantsIDs,\r\n            selectedDuplicantID\r\n        } = this.props;\r\n\r\n        const elements = duplicantsIDs.map(x => <DuplicantPortrait key={x} className={x === selectedDuplicantID ? \"pt-active\" : \"\"} duplicantID={x} onClick={this._onDuplicantClick} />);\r\n\r\n        return (\r\n            <div className={`${className || ''} ui-duplicant-list`}>\r\n                <div className={`fill-parent layout-horizontal layout-wrap container-scroll`}>\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onDuplicantClick(duplicantID: number) {\r\n        const {\r\n            onDuplicantClick\r\n        } = this.props;\r\n\r\n        if (onDuplicantClick) {\r\n            onDuplicantClick(duplicantID);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantsList);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { NonIdealState } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\n\r\nimport DuplicantsList from \"./components/DuplicantsList\";\r\nimport DuplicantEditor from \"./components/DuplicantEditor\";\r\n\r\n\r\ntype Props = {};\r\ninterface State {\r\n    selectedDuplicantID: number | null;\r\n}\r\nclass DuplicantsPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDuplicantID: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedDuplicantID\r\n        } = this.state;\r\n\r\n        let content: React.ReactFragment;\r\n        if (selectedDuplicantID != null) {\r\n            content = <DuplicantEditor className=\"fill-parent\" duplicantID={selectedDuplicantID}/>\r\n        }\r\n        else {\r\n            content = (\r\n                <NonIdealState visual={IconNames.MUGSHOT}>\r\n                    Select a duplicant to edit\r\n                </NonIdealState>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui-page ui-page-duplicants fill-parent layout-vertical\">\r\n                <DuplicantsList className=\"layout-item\" selectedDuplicantID={selectedDuplicantID} onDuplicantClick={this._onDuplicantSelected} />\r\n                <div className=\"layout-item-fill\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onDuplicantSelected(duplicantID: number) {\r\n        this.setState(s => ({\r\n            ...s,\r\n            selectedDuplicantID: duplicantID\r\n        }));\r\n    }\r\n}\r\n\r\nexport default DuplicantsPage\r\n\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"@/state/utils\";\r\n\r\nimport {\r\n    setCycle,\r\n    setImmigrationTimer,\r\n    setImmigrationReady\r\n} from \"@/services/save-editor/general/actions\";\r\n\r\nexport interface DispatchProps {\r\n    setCycle: typeof setCycle,\r\n    setImmigrationTimer: typeof setImmigrationTimer,\r\n    setImmigrationReady: typeof setImmigrationReady\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        setCycle,\r\n        setImmigrationTimer,\r\n        setImmigrationReady\r\n    }, dispatch);\r\n}\r\n","\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { makeGetGameObjectsByType, makeGetBehaviorByName } from \"../selectors\";\r\n\r\nconst saveGameObject = createSelector(\r\n    makeGetGameObjectsByType(\"SaveGame\"),\r\n    objects => objects[0]\r\n);\r\n\r\n// TODO: Move GameClock and its interface to oni-save-parser\r\nconst gameClockBehavior = makeGetBehaviorByName(saveGameObject, \"GameClock\");\r\nexport const cycles = createSelector(\r\n    gameClockBehavior,\r\n    behavior => behavior ? behavior.parsedData.cycle : 0\r\n);\r\n\r\n// TODO: Move Immigration and its interface to oni-save-parser\r\nconst immigrationBehavior = makeGetBehaviorByName(saveGameObject, \"Immigration\");\r\nexport const nextSpawn = createSelector(\r\n    immigrationBehavior,\r\n    behavior => behavior ? behavior.parsedData.timeBeforeSpawn : 0\r\n);\r\nexport const isSpawnReady = createSelector(\r\n    immigrationBehavior,\r\n    behavior => behavior ? behavior.parsedData.bImmigrantAvailable : false\r\n);\r\n","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport {\r\n    cycles,\r\n    nextSpawn,\r\n    isSpawnReady\r\n} from \"@/services/save-editor/general/selectors\";\r\n\r\nexport interface StateProps {\r\n    cycles: number;\r\n    nextSpawn: number;\r\n    isSpawnReady: boolean;\r\n}\r\nexport default createStructuredSelector<StateProps>({\r\n    cycles,\r\n    nextSpawn,\r\n    isSpawnReady\r\n});\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport { NumericInput } from \"@blueprintjs/core\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass GeneralPage extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            cycles,\r\n            nextSpawn,\r\n            isSpawnReady\r\n        } = this.props;\r\n        return (\r\n            <div className=\"ui-page ui-page-general fill-parent layout-vertical\">\r\n                <div className=\"pt-form-group\">\r\n                    <label className=\"pt-label\">\r\n                        <h5>World Time</h5>\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Cycles</span>\r\n                            <NumericInput min={0} value={cycles} onValueChange={this._onCycleChange} clampValueOnBlur={true} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pt-form-group\">\r\n                    <label className=\"pt-label\">\r\n                        <h5>Duplicant Spawner</h5>\r\n                    </label>\r\n                    <div className=\"pt-form-content\">\r\n                        <div className=\"pt-input-group\">\r\n                            <span>Next Spawn</span>\r\n                            <NumericInput min={0} clampValueOnBlur={true} value={nextSpawn} onValueChange={this._nextSpawnChange} />\r\n                        </div>\r\n                        <div className=\"pt-input-group\">\r\n                            <label className=\"pt-control pt-checkbox\">\r\n                                <input type=\"checkbox\" checked={isSpawnReady} onChange={this._spawnReadyChange} />\r\n                                <span className=\"pt-control-indicator\"></span>\r\n                                Spawn Ready\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onCycleChange(cycle: number) {\r\n        this.props.setCycle({cycle});\r\n    }\r\n\r\n    @autobind()\r\n    private _nextSpawnChange(time: number) {\r\n        this.props.setImmigrationTimer({time});\r\n    }\r\n\r\n    @autobind()\r\n    private _spawnReadyChange(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const ready = change.target.checked;\r\n        this.props.setImmigrationReady({ready});\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralPage);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Spinner,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default class LoadingSaveFilePageComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <NonIdealState>\r\n                <Text>Loading File</Text>\r\n                <div>\r\n                    <Spinner large={true}/>\r\n                </div>\r\n                <Text>TODO progress here</Text>\r\n            </NonIdealState>\r\n        );\r\n    }\r\n}","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { Dispatch } from \"@/state/utils\";\r\n\r\nexport interface DispatchProps { }\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return {}\r\n}","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport { loadError } from \"@/services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    loadError: Error | null;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    loadError\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Text\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass ErrorPageComponent extends React.Component<Props> {\r\n    render() {\r\n        let {\r\n            loadError\r\n        } = this.props;\r\n\r\n        if (!loadError) {\r\n            loadError = new Error(\"Well, this is weird... The Error page loaded, but there is no error.\");\r\n            loadError.stack = \"I really don't know what to do about this...\"\r\n        }\r\n\r\n        return (\r\n            <NonIdealState visual={IconNames.ERROR} description=\"An Error Occurred\">\r\n                <Text>{loadError.message}</Text>\r\n                <div>\r\n                    <code>{loadError.stack}</code>\r\n                </div>\r\n            </NonIdealState>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorPageComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"@/state/utils\";\r\n\r\nimport { loadSavefile } from \"@/services/save-editor/savefile/actions\";\r\n\r\nexport interface DispatchProps {\r\n    loadSavefile: typeof loadSavefile;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        loadSavefile\r\n    }, dispatch);\r\n}","\r\nexport interface StateProps {\r\n\r\n}\r\n\r\nexport default function(): StateProps {\r\n    return {};\r\n}\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    NonIdealState,\r\n    Button,\r\n    Intent\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\n\r\n\r\nconst saveDescription = \"Oxygen Not Included saves can be found in your documents folder under\";\r\n\r\n// TODO: Show correct path based on user's OS.\r\nconst savePath = \"Klei/OxygenNotIncluded/save_files\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass NoSaveLoadedPageComponent extends React.Component<Props> {\r\n    private _input: HTMLInputElement | null = null;\r\n    \r\n    render() {\r\n        const {\r\n            loadSavefile\r\n        } = this.props;\r\n        return (\r\n            <NonIdealState\r\n                visual={IconNames.FLOPPY_DISK}\r\n                action={\r\n                    <Button intent={Intent.PRIMARY} onClick={this._onLoadClick}>Load a .sav file</Button>\r\n                }\r\n                description=\"No save has been loaded.\"\r\n            >\r\n                <div>{saveDescription} <code>{savePath}</code></div>\r\n                <input\r\n                    ref={el => this._input = el}\r\n                    style={{display: \"none\"}}\r\n                    className=\"pt-button pt-intent-primary\"\r\n                    type=\"file\"\r\n                    accept=\".sav\"\r\n                    onChange={this._onLoadFile}\r\n                />\r\n            </NonIdealState>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadClick() {\r\n        if (!this._input) return;\r\n        this._input.click();\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadFile(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const files = change.target.files;\r\n        if (!files || files.length === 0) return;\r\n        this.props.loadSavefile({file: files[0]});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoSaveLoadedPageComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport { createStructuredSelector } from \"@/state/utils\";\r\n\r\nimport {\r\n    isSaveChosen,\r\n    isSaveLoading,\r\n    loadError\r\n} from \"@/services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    isSaveChosen: boolean;\r\n    isSaveLoading: boolean;\r\n    loadError: Error | null;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    isSaveChosen,\r\n    isSaveLoading,\r\n    loadError\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\n\r\nimport {\r\n    Card,\r\n    Elevation,\r\n    Menu,\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\n\r\nimport NoSaveLoadedPage from \"./components/NoSaveLoaded\";\r\nimport ErrorPage from \"./components/Error\";\r\nimport LoadingSaveFilePage from \"./components/LoadingSaveFile\";\r\n\r\nimport GeneralPage from \"./pages/General\";\r\nimport DuplicantsPage from \"./pages/Duplicants\";\r\n\r\nimport Error404Page from \"../404\";\r\n\r\ntype Props = StateProps;\r\nclass SaveEditorPageComponent extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            loadError,\r\n            isSaveChosen,\r\n            isSaveLoading\r\n        } = this.props;\r\n\r\n        let rootComponent: React.ReactChild;\r\n\r\n        if (loadError) {\r\n            // Show error screen\r\n            return <ErrorPage />;\r\n        }\r\n\r\n        if (!isSaveChosen) {\r\n            return <NoSaveLoadedPage />\r\n        }\r\n\r\n        else if (isSaveLoading) {\r\n            return <LoadingSaveFilePage />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui-page ui-page-saveeditor fill-parent\">\r\n                <Switch>\r\n                    <Redirect exact from=\"/editor\" to=\"/editor/duplicants\" />\r\n                    <Route exact path=\"/editor/general\" component={GeneralPage} />\r\n                    <Route exact path=\"/editor/duplicants\" component={DuplicantsPage} />\r\n                    <Route component={Error404Page} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SaveEditorPageComponent);\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Link, LinkProps } from \"react-router-dom\"\r\nimport { autobind } from \"core-decorators\";\r\n\r\nexport interface ActiveAwareLinkProps extends LinkProps {\r\n    exact?: boolean;\r\n}\r\ntype Props = ActiveAwareLinkProps & RouteComponentProps<{}>;\r\nclass ActiveAwareLink extends React.Component<Props> {\r\n    render() {\r\n        const {\r\n            to,\r\n            location,\r\n            children,\r\n            onClick,\r\n            className,\r\n            exact,\r\n\r\n            // Need to strip this out of passed props\r\n            staticContext,\r\n            ...other\r\n        } = this.props\r\n        const pathName = location.pathname;\r\n        let match: boolean;\r\n        \r\n        if (exact) match = to === pathName;\r\n        else match = matchPartialPath(pathName, to.toString());\r\n\r\n        if (match) {\r\n            return <span className={`pt-active pt-intent-primary ${className || \"\"}`}>{children}</span>;\r\n        }\r\n\r\n        return <Link to={to} className={className || \"\"} {...other} onClick={this._onClick}>{children}</Link>;\r\n    }\r\n\r\n    @autobind()\r\n    private _onClick(event: React.MouseEvent<HTMLAnchorElement>) {\r\n        const {\r\n            exact,\r\n            location,\r\n            to,\r\n            onClick\r\n        } = this.props;\r\n        const pathName = location.pathname;\r\n\r\n        let match: boolean;\r\n        if (exact) match = to === pathName;\r\n        else match = matchPartialPath(pathName, to.toString());\r\n\r\n        if (match) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        }\r\n    }\r\n}\r\nexport default withRouter(ActiveAwareLink);\r\n\r\nfunction matchPartialPath(pathName: string, to: string): boolean {\r\n    if (pathName === to) return true;\r\n\r\n    if (!pathName.startsWith(to)) return false;\r\n\r\n    // Need to make sure we matched up to a path seperator.\r\n    if (pathName[to.length] !== '/') return false;\r\n    return true;\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\n\r\nimport {\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport ActiveAwareLink from \"../ActiveAwareLink\";\r\n\r\nimport { AppNavMenuProps } from \"./props\";\r\nimport { NavMenuEntry } from \"./interfaces\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nclass AppNavMenu extends React.Component<AppNavMenuProps & RouteComponentProps<any>> {\r\n    render() {\r\n        const {\r\n            className,\r\n            entries\r\n        } = this.props;\r\n\r\n        const links = this._renderEntries(entries);\r\n        return (\r\n            <div className={`ui-nav-menu ${className || \"\"}`}>\r\n                {links}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _renderEntries(entries: NavMenuEntry[], key?: any): React.ReactChild[] {\r\n        key = key ? String(key) + \"-\" : \"\";\r\n\r\n        const fragments: React.ReactChild[] = [];\r\n        let previousWasGroup = false;\r\n\r\n        entries.forEach((entry, i) => {\r\n            const rendered = this._renderEntry(entry, key + i);\r\n            if (!rendered) return;\r\n            \r\n            if (previousWasGroup) {\r\n                fragments.push(<MenuDivider key={key + (i - 1) + \"-divider\"}/>)\r\n            }\r\n\r\n            if (Array.isArray(rendered)) {\r\n                fragments.push(...rendered);\r\n                previousWasGroup = rendered.length > 0;\r\n            }\r\n            else {\r\n                fragments.push(rendered);\r\n            }\r\n        });\r\n\r\n        return fragments;\r\n    }\r\n\r\n    private _renderEntry(entry: NavMenuEntry, key: any): React.ReactChild | React.ReactChild[] {\r\n        switch(entry.type) {\r\n            case \"group\": {\r\n                const rendered = this._renderEntries(entry.entries, key);\r\n                if (entry.name) {\r\n                    rendered.unshift(\r\n                        <div key={`${key}-header`} className=\"pt-menu-header\"><h6>{entry.name}</h6></div>\r\n                    );\r\n                }\r\n                return rendered;\r\n            }\r\n            case \"link\": {\r\n                const pathName = this.props.location.pathname;\r\n                const {\r\n                    name,\r\n                    path,\r\n                    subEntries,\r\n                    collapse\r\n                } = entry;\r\n                const primaryLink = <ActiveAwareLink key={key} exact={subEntries != null} className=\"pt-menu-item\" to={path}>{name}</ActiveAwareLink>;\r\n                if (!subEntries || (collapse && !matchPartialPath(pathName, path))) {\r\n                    return primaryLink;\r\n                }\r\n                else {\r\n                    return [\r\n                        primaryLink,\r\n                        <ul key={`${key}-list`}>\r\n                            {this._renderEntries(subEntries).map((x, i) => <li key={`${key}-${i}`}>{x}</li>)}\r\n                        </ul>\r\n                    ];\r\n                }\r\n            }\r\n            default: \r\n                return throwUnknownMenuEntry(entry);\r\n        }\r\n    }\r\n}\r\nexport default withRouter(AppNavMenu);\r\n\r\nfunction throwUnknownMenuEntry(entry: never): never {\r\n    throw new Error(`Unknown entry type \"${(entry as NavMenuEntry).type}\".`);\r\n}\r\n\r\n\r\nfunction matchPartialPath(pathName: string, to: string): boolean {\r\n    if (pathName === to) return true;\r\n\r\n    if (!pathName.startsWith(to)) return false;\r\n\r\n    // Need to make sure we matched up to a path seperator.\r\n    if (pathName[to.length] !== '/') return false;\r\n    return true;\r\n}\r\n","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    saveFileName,\r\n    isSaveEnabled\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    saveFileName: string | null;\r\n    isSaveEnabled: boolean;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    saveFileName,\r\n    isSaveEnabled\r\n});\r\nexport default mapStateToProps;\r\n","\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Dispatch } from \"../../state/utils\";\r\n\r\nimport { loadSavefile, saveSavefile } from \"../../services/save-editor/savefile/actions\";\r\n\r\nexport interface DispatchProps {\r\n    loadSavefile: typeof loadSavefile;\r\n    saveSavefile: typeof saveSavefile;\r\n}\r\n\r\nexport default function mapDispatchToProps(dispatch: Dispatch): DispatchProps {\r\n    return bindActionCreators({\r\n        loadSavefile,\r\n        saveSavefile\r\n    }, dispatch);\r\n}\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { autobind } from \"core-decorators\";\r\nimport {\r\n    Navbar,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Text,\r\n    Button,\r\n    Alignment\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport { AppNavBarProps } from \"./props\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./dispatch\";\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\ntype Props = AppNavBarProps & StateProps & DispatchProps;\r\nclass AppNavBar extends React.Component<Props> {\r\n    private _input: HTMLElement | null = null;\r\n\r\n    render() {\r\n        const {\r\n            className,\r\n            saveFileName,\r\n            isSaveEnabled\r\n        } = this.props;\r\n\r\n        return (\r\n            <Navbar className={`ui-app-navbar ${className || \"\"}`}>\r\n                <NavbarGroup>\r\n                    <NavbarHeading>ONI Save Editor</NavbarHeading>\r\n                    <Text ellipsize={true}>{saveFileName || \"\"}</Text>\r\n                </NavbarGroup>\r\n                <NavbarGroup align={Alignment.RIGHT}>\r\n                    <Button icon={IconNames.UPLOAD} onClick={this._onLoadClick}>Load</Button>\r\n                    <Button icon={IconNames.FLOPPY_DISK} disabled={!isSaveEnabled} onClick={this._onSaveClick}>Save</Button>\r\n                    <input\r\n                        ref={el => this._input = el}\r\n                        style={{ display: \"none\" }}\r\n                        className=\"pt-button pt-intent-primary\"\r\n                        type=\"file\"\r\n                        accept=\".sav\"\r\n                        onChange={this._onLoadFile}\r\n                    />\r\n                </NavbarGroup>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n    @autobind()\r\n    private _onSaveClick() {\r\n        this.props.saveSavefile({});\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadClick() {\r\n        if (!this._input) return;\r\n        this._input.click();\r\n    }\r\n\r\n    @autobind()\r\n    private _onLoadFile(change: React.ChangeEvent<HTMLInputElement>) {\r\n        const files = change.target.files;\r\n        if (!files || files.length === 0) return;\r\n        this.props.loadSavefile({file: files[0]});\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavBar);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport { createStructuredSelector } from \"../../state/utils\";\r\n\r\nimport {\r\n    saveFileName,\r\n    isSaveSaving\r\n} from \"../../services/save-editor/savefile/selectors\";\r\n\r\n\r\nexport interface StateProps {\r\n    saveFileName: string | null;\r\n    isSaveSaving: boolean;\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector<StateProps>({\r\n    saveFileName,\r\n    isSaveSaving\r\n});\r\nexport default mapStateToProps;\r\n\r\n// Was pretty sure this used to work, once upon a time.\r\n//export type StateProps = typeof mapStateToProps;\r\n","\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, Switch, withRouter } from \"react-router\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Text,\r\n    Dialog,\r\n    Button,\r\n    Alignment,\r\n    Spinner,\r\n    NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./selectors\";\r\n\r\nimport AppNavBar from \"../AppNavBar\";\r\nimport AppNavMenu from \"../AppNavMenu\";\r\n\r\nimport SaveEditorPage from \"../../pages/SaveEditor\";\r\nimport ChangelogPage from \"../../pages/Changelog\";\r\nimport Error404Page from \"../../pages/404\";\r\nimport { NavMenuEntry } from \"../AppNavMenu/interfaces\";\r\n\r\ntype OwnProps = StateProps;\r\nclass AppComponent extends React.Component<OwnProps> {\r\n    private _input: HTMLInputElement | null = null;\r\n\r\n    render() {\r\n        const {\r\n            saveFileName,\r\n            isSaveSaving\r\n        } = this.props;\r\n\r\n        const navMenuEntries: NavMenuEntry[] = [\r\n            {\r\n                // Save Editor\r\n                //  TODO: have save editor itself define these.\r\n                type: \"link\",\r\n                path: \"/editor\",\r\n                name: \"Save Editor\",\r\n                subEntries: [\r\n                    {\r\n                        type: \"link\",\r\n                        path: \"/editor/general\",\r\n                        name: \"General\"\r\n                    },\r\n                    {\r\n                        type: \"link\",\r\n                        path: \"/editor/duplicants\",\r\n                        name: \"Duplicants\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                // Utility items\r\n                type: \"group\",\r\n                entries: [\r\n                    \r\n                ]\r\n            },\r\n            {\r\n                type: \"link\",\r\n                path: \"/changelog\",\r\n                name: \"Duplicity Changelog\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"ui-app-root pt-app pt-dark fill-parent layout-vertical\">\r\n                <AppNavBar className=\"layout-item\"/>\r\n                <div className=\"layout-item-fill layout-horizontal\">\r\n                    <AppNavMenu className=\"layout-item\" entries={navMenuEntries} />\r\n                    <div className=\"layout-item-fill\">\r\n                        <Switch>\r\n                            <Route path=\"/editor\" component={SaveEditorPage}/>\r\n                            <Route exact path=\"/404\" component={Error404Page}/>\r\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\r\n                            <Redirect exact from=\"/\" to=\"/editor\"/>\r\n                            <Route component={Error404Page}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n                <Dialog isOpen={isSaveSaving} title=\"Saving File\" icon={IconNames.SAVED} isCloseButtonShown={false}>\r\n                    <NonIdealState>\r\n                        <div>\r\n                            <Spinner large={true}/>\r\n                        </div>\r\n                        <div>\r\n                            Saving <code>{saveFileName}</code>\r\n                        </div>\r\n                    </NonIdealState>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps)(AppComponent);","\r\nimport Component from \"./component\";\r\nexport default Component;\r\n","\r\nimport * as React from \"react\";\r\n\r\nimport { hot } from \"react-hot-loader\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n// react-router wants to wrap every element we have in a new element.  Because composability!\r\n//  without wrapping this in a <Route/> from the outside, the PureComponent hot will not see\r\n//  any changes, and the broken context system is ignored.\r\n//  Every other library out their uses an external context store similar to the new react context\r\n//  pattern, but router just blames everyone else for honoring shouldComponentUpdate and says wontfix.\r\n// Might be better off removing route altogether and staying a SPA.\r\nexport default withRouter(hot(module)(App) as any);\r\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, #root {\\n  height: 100%;\\n  width: 100%; }\\n\\nbody {\\n  margin: 0;\\n  padding: 0; }\\n\\n.fill-parent, .fill-parent-width, .fill-parent-height {\\n  /* Fill parent to our outsides.*/\\n  box-sizing: border-box; }\\n\\n.fill-parent, .fill-parent-width {\\n  width: 100%; }\\n\\n.fill-parent, .fill-parent-height {\\n  height: 100%; }\\n\\n.layout-wrap {\\n  flex-wrap: wrap; }\\n\\n/*\\r\\n============================================================================\\r\\nHorizontal and Vertical Layouts\\r\\n============================================================================\\r\\n*/\\n/* Container for items that can fill up the available space, and optionally be constrained by it. */\\n.layout-vertical {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.layout-horizontal {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.layout-item, .layout-item-fill {\\n  box-sizing: border-box; }\\n\\n.layout-vertical > div, .layout-horizontal > div, .layout-vertical > .layout-item, .layout-horizontal > .layout-item {\\n  flex: none; }\\n\\n.layout-vertical > .layout-item-fill, .layout-horizontal > .layout-item-fill {\\n  flex: 1 1 auto; }\\n\\n.layout-vertical > .layout-item-constrain, .layout-horizontal > .layout-item-constrain {\\n  flex: 0 1 auto; }\\n\\n.layout-vertical > .layout-item-fill, .layout-vertical > .layout-item-constrain {\\n  /* Flex sets min-height to auto, we need to allow it to shrink down */\\n  min-height: 0;\\n  /*\\r\\n    Maintain some sort of inner css specified (vs actual?) value for height, so that \\r\\n    child elements can use height percentages and fill their parent (us)\\r\\n    */\\n  height: 100%; }\\n\\n.layout-horizontal > .layout-item-fill, .layout-horizontal > .layout-item-constrain {\\n  min-width: 0;\\n  width: 100%; }\\n\\n/*\\r\\n============================================================================\\r\\nContent Containers\\r\\n============================================================================\\r\\n*/\\n.container-scroll {\\n  overflow: auto; }\\n\\n/*\\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\\n */\\n.ui-app-root {\\n  background-color: #182026; }\\n\\n.pt-navbar.ui-app-navbar {\\n  background-color: #2965cc; }\\n  .pt-navbar.ui-app-navbar .pt-navbar-group .pt-button {\\n    margin: 0 4px; }\\n\\n.ui-nav-menu {\\n  padding: 15px;\\n  background-color: #394b59; }\\n\\n.ui-page-404 .ui-title {\\n  font-size: 20pt; }\\n\\n.ui-page-404 .ui-title-secondary {\\n  font-size: 12pt; }\\n\\n.ui-page-404 .ui-body {\\n  margin-top: 8px; }\\n\\n.ui-page-general {\\n  padding: 15px; }\\n\\n.ui-page-duplicants .ui-duplicant-list {\\n  background-color: #bfccd6;\\n  height: 340px; }\\n  .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait {\\n    width: 150px;\\n    height: 150px;\\n    margin: 10px;\\n    cursor: pointer; }\\n    .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait .ui-duplicant-name {\\n      text-align: center; }\\n    .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait .ui-duplicant-role {\\n      text-align: center; }\\n  .ui-page-duplicants .ui-duplicant-list .ui-duplicant-portrait.pt-active {\\n    background-color: #f29d49; }\\n\\n.ui-page-duplicants .ui-duplicant-editor {\\n  box-sizing: border-box;\\n  padding: 5px; }\\n  .ui-page-duplicants .ui-duplicant-editor .ui-title {\\n    display: inline-block;\\n    width: auto; }\\n\\n.ui-page-duplicants .ui-duplicant-skills .pt-html-table {\\n  width: 100%;\\n  max-height: 100%; }\\n\\n.ui-page-duplicants .ui-duplicant-effects .pt-html-table {\\n  width: 100%;\\n  max-height: 100%; }\\n\\n.ui-page-duplicants .ui-duplicant-jobs .ui-current-role, .ui-page-duplicants .ui-duplicant-jobs .ui-target-role {\\n  padding: 5px; }\\n\\n.ui-page-changelog {\\n  padding: 15px; }\\n\\n.pt-multi-select-popover .pt-menu, .pt-select-popover .pt-menu {\\n  max-width: 400px;\\n  max-height: 300px;\\n  overflow: auto; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./root.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n import \"@blueprintjs/core/lib/css/blueprint.css\";\r\n import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\n\r\nimport \"./root.scss\";\r\n","\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport \"./css\";\r\n\r\n\r\nimport App from \"./app\";\r\n\r\nimport store from \"./state/store\";\r\n\r\nimport { runSaga } from \"./state/saga\";\r\nrunSaga();\r\n\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>,\r\n    rootEl\r\n);\r\n"],"sourceRoot":""}