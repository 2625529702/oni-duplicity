{"version":3,"sources":["webpack:///./src/style/index.ts","webpack:///./src/components/Text.tsx","webpack:///./src/state/index.ts","webpack:///./src/selectors/oni-save.ts","webpack:///./src/utils.ts","webpack:///./src/selectors/selected-path.ts","webpack:///./src/style/styled.ts","webpack:///./src/components/Flex.tsx","webpack:///./src/reducer/behaviors/utils.ts","webpack:///./src/components/NonIdealState.tsx","webpack:///./src/components/Box.ts","webpack:///./src/components/FormGroup/index.ts","webpack:///./src/components/NumericInput.tsx","webpack:///./src/selectors/behaviors/utils.ts","webpack:///./src/pages/SaveEditor/components/fields/connect-field/index.ts","webpack:///./src/components/Input.tsx","webpack:///./src/pages/SaveEditor/components/fields/NumericField.tsx","webpack:///./src/services/save-structure/index.ts","webpack:///./src/components/SaveStructureLink/index.ts","webpack:///./src/style/theme/index.ts","webpack:///./src/actions/behaviors/set-currentobject-behavior-value.ts","webpack:///./src/actions/receive-onisave.ts","webpack:///./src/components/DataTable/index.ts","webpack:///./src/style/intent.ts","webpack:///./src/selectors/game-object.ts","webpack:///./src/selectors/selected-value.ts","webpack:///./src/components/CheckInput.tsx","webpack:///./src/math.ts","webpack:///./src/pages/SaveEditor/components/editors/components/EditorContainer.tsx","webpack:///./src/style/styles/intent-color.ts","webpack:///./src/actions/modify-onisave.ts","webpack:///./src/actions/onisave-parse-progress.ts","webpack:///./src/actions/select-path.ts","webpack:///./src/services/save-structure/structure/root.ts","webpack:///./src/services/save-structure/structure/matchers.ts","webpack:///./src/services/save-structure/structure/gameObjects/behaviors/default.ts","webpack:///./src/pages/SaveEditor/components/fields/from-typeinfo.tsx","webpack:///./src/keys.ts","webpack:///./src/components/EditModeCondition/index.ts","webpack:///./src/style/theme/borders.ts","webpack:///./src/style/theme/colors.ts","webpack:///./src/style/theme/radii.ts","webpack:///./src/style/theme/space.ts","webpack:///./src/style/styles/intent-fill.ts","webpack:///./src/style/styles/text.ts","webpack:///./src/actions/behaviors/modify-currentobject-behavior-array.ts","webpack:///./src/reducer/game-object/utils.ts","webpack:///./src/actions/behaviors/set-accessory.ts","webpack:///./src/actions/behaviors/set-element-disease.ts","webpack:///./src/actions/behaviors/set-health-state.ts","webpack:///./src/actions/behaviors/set-identity-gender.ts","webpack:///./src/actions/behaviors/set-modifier-amount.ts","webpack:///./src/actions/behaviors/set-traits-trait.ts","webpack:///./src/actions/game-object/set-scale.ts","webpack:///./src/actions/dismiss-error.ts","webpack:///./src/actions/set-editmode.ts","webpack:///./src/actions/load-onisave.ts","webpack:///./src/services/save-serializer/index.ts","webpack:///./src/actions/save-onisave.ts","webpack:///./src/selectors/loading-state.ts","webpack:///./src/runtime-env.ts","webpack:///./src/components/Button.ts","webpack:///./src/services/save-structure/structure/gameObjects/gameObjectTypes/default.ts","webpack:///./src/components/Portrait/index.ts","webpack:///./src/components/Select.tsx","webpack:///./src/components/TextInput.tsx","webpack:///./src/components/DataTable/DataTable.tsx","webpack:///./src/pages/SaveEditor/components/editors/components/EditorHeader.tsx","webpack:///./src/selectors/edit-mode.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/components/GameObjectHeader/index.ts","webpack:///./src/components/NullableInput.tsx","webpack:///./src/components/SelectInput.tsx","webpack:///./src/index.tsx","webpack:///./src/style/style.css?c716","webpack:///./src/style/style.css","webpack:///./src/style/styles/index.ts","webpack:///./src/style/styles/border.ts","webpack:///./src/style/theme/theme.ts","webpack:///./src/style/theme/font-sizes.ts","webpack:///./src/style/styles/intent-border.ts","webpack:///./src/style/styles/intent.ts","webpack:///./src/style/styles/link.ts","webpack:///./src/root.tsx","webpack:///./src/store/index.ts","webpack:///./src/store/store.ts","webpack:///./src/reducer/index.ts","webpack:///./src/reducer/behaviors/index.ts","webpack:///./src/reducer/behaviors/modify-currentobject-behavior-array.ts","webpack:///./src/reducer/behaviors/set-accessory.ts","webpack:///./src/reducer/behaviors/set-currentobject-behavior-value.ts","webpack:///./src/reducer/behaviors/set-element-disease.ts","webpack:///./src/reducer/behaviors/set-health-state.ts","webpack:///./src/reducer/behaviors/set-identity-gender.ts","webpack:///./src/reducer/behaviors/set-modifier-amount.ts","webpack:///./src/reducer/behaviors/set-traits-trait.ts","webpack:///./src/reducer/game-object/index.ts","webpack:///./src/reducer/game-object/set-scale.ts","webpack:///./src/reducer/dismiss-error.ts","webpack:///./src/reducer/modify-onisave.ts","webpack:///./src/reducer/onisave-parse-progress.ts","webpack:///./src/reducer/receive-onisave.ts","webpack:///./src/reducer/select-path.ts","webpack:///./src/reducer/set-editmode.ts","webpack:///./src/saga/index.ts","webpack:///./src/saga/load-onisave.ts","webpack:///./src/services/save-serializer/worker-instance.ts","webpack:///./src/services/save-serializer/worker-messages.ts","webpack:///./src/services/save-serializer/save-serializer.worker.ts","webpack:///./src/saga/save-onisave.ts","webpack:///./src/store/devtool-sanitizer.ts","webpack:///./src/App/index.ts","webpack:///./src/App/App.tsx","webpack:///./src/App/derived-state.ts","webpack:///./src/selectors/error.ts","webpack:///./src/App/events.ts","webpack:///./src/pages/NoSave/index.ts","webpack:///./src/pages/NoSave/NoSave.tsx","webpack:///./src/components/Code.ts","webpack:///./src/pages/Error/index.ts","webpack:///./src/pages/Error/Error.tsx","webpack:///./src/pages/Loading/index.ts","webpack:///./src/pages/Loading/Loading.tsx","webpack:///./src/pages/Loading/derived-state.ts","webpack:///./src/selectors/loading-message.ts","webpack:///./src/pages/SaveEditor/index.ts","webpack:///./src/pages/SaveEditor/SaveEditor.tsx","webpack:///./src/pages/SaveEditor/derived-state.ts","webpack:///./src/services/save-structure/utils.ts","webpack:///./src/services/save-structure/structure/index.ts","webpack:///./src/services/save-structure/structure/gameObjects/index.ts","webpack:///./src/services/save-structure/structure/gameObjects/gameObjectTypes/index.ts","webpack:///./src/services/save-structure/structure/gameObjects/gameObjectTypes/minion.ts","webpack:///./src/services/save-structure/structure/gameObjects/behaviors/index.ts","webpack:///./src/services/save-structure/structure/gameObjects/behaviors/primary-element.ts","webpack:///./src/services/save-structure/structure/gameObjects/behaviors/storage.ts","webpack:///./src/services/save-structure/structure/utils.ts","webpack:///./src/components/SelectedPathBreadcrumb/index.ts","webpack:///./src/components/SelectedPathBreadcrumb/SelectedPathBreadcrumb.tsx","webpack:///./src/components/SelectedPathBreadcrumb/derived-state.ts","webpack:///./src/selectors/selected-path-breadcrumb.ts","webpack:///./src/components/SaveStructureLink/SaveStructureLink.tsx","webpack:///./src/components/SaveStructureLink/events.ts","webpack:///./src/components/SelectedPathBreadcrumb/components/BreadcrumbContainer.ts","webpack:///./src/components/ResizePanel/index.ts","webpack:///./src/components/ResizePanel/ResizePanel.tsx","webpack:///./src/components/ResizePanel/components/ResizeHandle.tsx","webpack:///./src/components/ResizePanel/components/ResizeHandleVisual.tsx","webpack:///./src/pages/SaveEditor/components/editors/index.ts","webpack:///./src/pages/SaveEditor/components/editors/DefaultObjectEditor/index.ts","webpack:///./src/pages/SaveEditor/components/editors/DefaultObjectEditor/DefaultObjectEditor.tsx","webpack:///./src/pages/SaveEditor/components/editors/DefaultObjectEditor/components/DefaultObjectEditorContainer.tsx","webpack:///./src/pages/SaveEditor/components/editors/DefaultObjectEditor/components/EditorField.tsx","webpack:///./src/pages/SaveEditor/components/editors/DefaultObjectEditor/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/DefaultObjectEditor/events.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/index.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/SaveRootEditor.tsx","webpack:///./src/components/InfoText.tsx","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/SaveRootEditorContainer.tsx","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/SaveGameTitle.tsx","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/index.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/DuplicantsList.tsx","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/components/DuplicantPortrait/index.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/components/DuplicantPortrait/DuplicantPortrait.tsx","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/components/DuplicantPortrait/derived-state.tsx","webpack:///./src/components/Portrait/Portrait.ts","webpack:///./src/components/Portrait/PortraitHeader.ts","webpack:///./src/components/Portrait/PortraitFooter.ts","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/components/DuplicantsListContainer.tsx","webpack:///./src/pages/SaveEditor/components/editors/SaveRootEditor/components/DuplicantsList/components/DuplicantsListContent.ts","webpack:///./src/pages/SaveEditor/components/editors/TemplateObjectEditor/index.ts","webpack:///./src/pages/SaveEditor/components/editors/TemplateObjectEditor/TemplateObjectEditor.tsx","webpack:///./src/pages/SaveEditor/components/editors/TemplateObjectEditor/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/TemplateObjectEditor/components/TemplateObjectEditorContainer.ts","webpack:///./src/pages/SaveEditor/components/fields/ArrayLikeField.tsx","webpack:///./src/pages/SaveEditor/components/fields/connect-field/derived-state.tsx","webpack:///./src/pages/SaveEditor/components/fields/connect-field/events.ts","webpack:///./src/pages/SaveEditor/components/fields/CheckField.tsx","webpack:///./src/pages/SaveEditor/components/fields/ColorField.tsx","webpack:///./src/components/FormGroup/FormGroup.tsx","webpack:///./src/pages/SaveEditor/components/fields/DictionaryField.tsx","webpack:///./src/pages/SaveEditor/components/fields/EnumerationField.tsx","webpack:///./src/pages/SaveEditor/components/fields/TextField.tsx","webpack:///./src/pages/SaveEditor/components/fields/Vector2Field.tsx","webpack:///./src/pages/SaveEditor/components/fields/Vector2IField.tsx","webpack:///./src/pages/SaveEditor/components/fields/Vector3Field.tsx","webpack:///./src/pages/SaveEditor/components/editors/GameObjectGroupList/index.ts","webpack:///./src/pages/SaveEditor/components/editors/GameObjectGroupList/GameObjectGroupList.tsx","webpack:///./src/pages/SaveEditor/components/editors/GameObjectGroupList/derived-state.tsx","webpack:///./src/pages/SaveEditor/components/editors/GameObjectList/index.ts","webpack:///./src/pages/SaveEditor/components/editors/GameObjectList/GameObjectList.tsx","webpack:///./src/pages/SaveEditor/components/editors/GameObjectList/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/GameObjectList/components/GameObjectListContent.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/DefaultGameObjectEditor/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/DefaultGameObjectEditor/DefaultGameObjectEditor.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/DefaultGameObjectEditor/derived-state.ts","webpack:///./src/components/EditModeCondition/EditModeCondition.tsx","webpack:///./src/components/EditModeCondition/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/components/GameObjectHeader/GameObjectHeader.tsx","webpack:///./src/format.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/components/GameObjectHeader/derived-state.ts","webpack:///./src/components/Toolbar.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/components/GameObjectHeader/components/GameObjectHeaderContainer.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/MinionEditor.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/derived-state.ts","webpack:///./src/components/VerticalTabs/index.ts","webpack:///./src/components/VerticalTabs/VerticalTabs.tsx","webpack:///./src/components/VerticalTabs/components/TabContent.tsx","webpack:///./src/components/VerticalTabs/components/VerticalTabItem.ts","webpack:///./src/components/VerticalTabs/components/Tab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionEditableName.tsx","webpack:///./src/pages/SaveEditor/components/fields/EditableTextField.tsx","webpack:///./src/components/EditableText/index.ts","webpack:///./src/components/EditableText/EditableText.tsx","webpack:///./src/components/EditableText/components/EditableTextInput.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAppearanceTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAppearanceTab/MinionAppearanceTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAppearanceTab/derived-state.ts","webpack:///./src/selectors/behaviors/minion-identity.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAppearanceTab/events.ts","webpack:///./src/components/TextAutocompleteInput.tsx","webpack:///./src/components/Autocomplete.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAptitudesTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAptitudesTab/MinionAptitudesTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAptitudesTab/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionAptitudesTab/events.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionEffectsTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionEffectsTab/MinionEffectsTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionEffectsTab/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionEffectsTab/events.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionHealthTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionHealthTab/MinionHealthTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionHealthTab/derived-state.ts","webpack:///./src/selectors/behaviors/health.ts","webpack:///./src/selectors/behaviors/primary-element.ts","webpack:///./src/selectors/behaviors/minion-modifiers.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionHealthTab/events.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionJobsTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionJobsTab/MinionJobsTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionJobsTab/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionJobsTab/events.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionSkillsTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionSkillsTab/MinionSkillsTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionSkillsTab/derived-state.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionSkillsTab/events.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionTraitsTab/index.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionTraitsTab/MinionTraitsTab.tsx","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionTraitsTab/derived-state.ts","webpack:///./src/selectors/behaviors/ai-traits.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionTraitsTab/events.ts","webpack:///./src/components/Table/index.ts","webpack:///./src/components/Table/Table.ts","webpack:///./src/pages/SaveEditor/components/editors/game-objects/MinionEditor/components/MinionPositionTab.tsx","webpack:///./src/pages/SaveEditor/components/SaveEditorContainer.tsx","webpack:///./src/pages/SaveEditor/components/ContentContainer.tsx","webpack:///./src/pages/SaveEditor/components/EditorContainer.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/index.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/Sidebar.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SidebarContainer.tsx","webpack:///./src/components/Panel.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/EditorModeSelector/index.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/EditorModeSelector/EditorModeSelector.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/EditorModeSelector/events.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/index.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/SaveStructureTree.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureTreeContainer.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/index.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/SaveStructureItem.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/derived-state.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/events.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/components/SaveStructureItemContainer.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/components/SaveStructureItemHeader/index.ts","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/components/SaveStructureItemHeader/SaveStructureItemHeader.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/components/SaveStructureItemHeader/components/Expander.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/components/SaveStructureItemHeader/components/ItemText.tsx","webpack:///./src/pages/SaveEditor/components/Sidebar/components/SaveStructureTree/components/SaveStructureItem/components/SaveStructureItemContent.tsx","webpack:///./src/components/Separator.tsx","webpack:///./src/App/components/AppContainer.tsx","webpack:///./src/App/components/AppContent.tsx","webpack:///./src/App/components/NavBar/index.ts","webpack:///./src/App/components/NavBar/NavBar.tsx","webpack:///./src/App/components/NavBar/events.ts","webpack:///./src/App/components/NavBar/components/NavBarContainer.tsx","webpack:///./src/App/components/NavBar/components/NavBarGroup.tsx","webpack:///./src/App/components/NavBar/components/NavBarTitleText.ts"],"names":["__webpack_require__","styled_1","__importDefault","exports","default","__export","styled_2","ThemeProvider","injectGlobal","css","styled_system_1","style_1","style_2","utils_1","Text","text","alignSelf","justifySelf","space","displayName","attachProps","H4","withComponent","Label","Div","defaultAppState","loadingState","loadingProgressMessage","error","oniSave","selectedPath","editMode","Object","freeze","state","lodash_es_1","component","subComponents","c","forEach","key","styledComponents","__importStar","styled","keyframes","Box_1","FlexItem","extend","props","grow","shrink","fillParent","constrain","Flex","alignContent","justifyContent","direction","Item","oni_save_parser_1","produceFromBehavior","behaviorName","producer","produceFromGameObject","gameObject","behavior","getBehavior","React","Text_1","Header","NonIdealState","intent","header","children","createElement","width","height","border","borderRadius","borderColor","Color","HintIntent","p","mx","mt","Intent","Default","Hint","Primary","Box","intentBorder","defaultProps","intentIsBg","FormGroup_1","core_decorators_1","keys_1","math_1","Input_1","NumericInput","Component","[object Object]","super","this","_input","createRef","editValue","validationMessage","value","minValue","maxValue","precision","currentValue","step","isFloatingPoint","Math","pow","innerRef","type","min","max","onChange","_onValueChange","onKeyPress","_onInputKeyPress","onBlur","_onInputBlur","e","target","valueAsNumber","setCustomValidity","setState","Enter","_commitEdit","onCommit","current","newValue","clamp","isNaN","__decorate","autobind","reselect_1","game_object_1","createCurrentGameObjectBehaviorPropertySelector","valueSelector","valueSelectFunc","Array","isArray","get","behaviorSelector","getCurrentGameObjectBehaviorSelector","createSelector","memoize","getCurrentGameObjectBehaviorPropertySelector","behaviorPath","join","react_redux_1","derived_state_1","events_1","connect","inputStyle","getTheme","colors","bg","panel","borders","secondary","primary","dangerous","Input","NumericInput_1","connect_field_1","SaveStructureLink_1","colors_1","getThemeColor","borders_1","getThemeBorder","radii_1","getThemeRadius","space_1","getThemeSpace","ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE","setCurrentObjectBehaviorValue","path","payload","ACTION_RECEIVE_ONISAVE_BEGIN","receiveOniSaveBegin","operation","clearExisting","ACTION_RECEIVE_ONISAVE_ERROR","receiveOniSaveError","ACTION_RECEIVE_ONISAVE_SUCCESS","receiveOniSaveSuccess","DataTable_1","lodash_1","isIntent","str","includes","selected_path_1","oni_save_1","GAME_OBJECT_PATH","getIsGameObjectSelected","length","every","x","i","test","getSelectedGameObjectPath","valid","slice","getSelectedGameObject","getSelectedGameObjectScale","scale","save_structure_1","selectedValueSelector","saveGame","getSaveItemEditValue","CheckInput","checked","createClamp","clampArray","clampInt8","Int8Array","clampUInt8","Uint8Array","clampInt16","Int16Array","clampUInt16","Uint16Array","clampInt32","Int32Array","clampUInt32","Uint32Array","clampSingle","Float32Array","clampDouble","Float64Array","CLAMPS_BY_PRECISION","int8","uint8","int16","uint16","int32","uint32","single","double","clamper","Error","compare","a","b","Flex_1","EditorHeader_1","EditorContainer","intent_1","theme_1","intentColorOf","fromIntent","intentColorFromProps","intentColor","of","ACTION_ONISAVE_MODIFY","modifyOniSave","ACTION_ONISAVE_PARSE_PROGRESS","parseProgress","message","ACTION_SELECT_PATH","selectPath","defaultAdvancedField","$advanced","saveStructure","$editor","$uiPathName","obj","gameInfo","baseName","templates","world","settings","version","gameObjects","gameData","$editorProps","templateName","gasConduitFlow","liquidConduitFlow","simActiveRegionMin","simActiveRegionMax","fallingWater","unstableGround","worldDetail","customGameSettings","gameObjectIs","isObject","name","behaviorIs","defaultTemplateDataObj","keys","filter","map","_","templatePath","valuePathHack","defaultBehavior","templateData","push","extraData","*","ArrayLikeField_1","CheckField_1","ColorField_1","DictionaryField_1","EnumerationField_1","NumericField_1","TextField_1","Vector2Field_1","Vector2IField_1","Vector3Field_1","typeInfo","short","code","getTypeCode","info","SerializationTypeCode","assign","subType","subTypes","Boolean","Byte","Colour","Dictionary","Double","Enumeration","enumerationName","HashSet","Int16","Int32","Int64","Dangerous","List","Pair","SByte","Queue","Single","String","UInt16","UInt32","UInt64","UserDefined","Vector2","Vector2I","Vector3","handleUnknownType","Esc","EditModeCondition_1","themeGet","contrast","DefaultIntentContrast","DefaultIntent","PrimaryIntentContrast","PrimaryIntent","Secondary","SecondaryIntentContrast","SecondaryIntent","DangerousIntentContrast","DangerousIntent","HintIntentContrast","hint","navbar","separator","color","radii","radius","intentFillOf","intentFillFromProps","undefined","intentFill","intent_color_1","wordWrap","style","prop","cssProperty","wordBreak","whiteSpace","fontSize","fontWeight","ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM","insertCurrentObjectBehaviorArrayValue","index","ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM","removeCurrentObjectBehaviorArrayValue","ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX","removeCurrentObjectBehaviorArrayIndex","isCurrentObjectBehaviorArrayAction","action","immer_1","ACTION_SET_ACCESSORY","setAccessory","accessoryType","accessoryName","ACTION_PRIMARY_ELEMENT_SET_DISEASE","setPrimaryElementDisease","diseaseId","diseaseCount","ACTION_HEALTH_SET_STATE","setHealthStatus","ACTION_MINION_IDENTITY_SET_GENDER","setIdentityGender","gender","ACTION_MINION_MODIFIER_SET_VALUE","setModifierValue","amountType","ACTION_TRAITS_SET","setTrait","traitId","isSet","ACTION_GAME_OBJECT_SET_SCALE","setGameObjectScale","ACTION_DISMISS_ERROR","dismissError","ACTION_SET_EDITMODE","setEditMode","ACTION_ONISAVE_LOAD","loadOniSave","file","ACTION_ONISAVE_SAVE","saveOniSave","fileName","platform_1","osPlatform","os","family","OSType","isProd","Button","fontSizes","behaviors_1","defaultGameObject","idBehavior","KPrefabIDBehavior","InstanceID","position","toFixed","y","behaviors","Portrait_1","SelectElement","Select","_a","options","rest","__rest","_onChange","label","TextInput","_inputRef","isValid","minLength","maxLength","_setEditValue","validation","_validate","react_table_1","encodedPrimaryColor","encodeURIComponent","DataTable","PanelBackground","EditorHeader","pb","GameObjectHeader_1","CheckInput_1","NullableInput","isNotNull","className","renderNull","element","renderInput","defaultValue","resolve","_onNotNullChecked","Select_1","SelectInput","clearable","ReactDOM","react_modal_1","root_1","rootEl","document","getElementById","setAppElement","render","content","module","hmr","transform","insertInto","locals","borderFromProps","font_sizes_1","theme","getThemeProp","getter","val","borderOf","intent_fill_1","intentFromProps","isBg","text_1","link","react_hot_loader_1","store_1","App_1","hot","Provider","store","createStore","redux_1","redux_saga_1","reducer_1","saga_1","devtool_sanitizer_1","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionSanitizer","stateSanitizer","compose","sagaMiddleware","applyMiddleware","run","reduce_reducers_1","dismiss_error_1","modify_onisave_1","onisave_parse_progress_1","receive_onisave_1","select_path_1","set_editmode_1","reducers","modify_currentobject_behavior_array_1","set_accessory_1","set_currentobject_behavior_value_1","set_element_disease_1","set_health_state_1","set_identity_gender_1","set_modifier_amount_1","set_traits_trait_1","state_1","array","splice","indexOf","AccessorizerBehavior","accessories","accessoryIndex","getIndexOfAccessoryType","newAccessory","Accessory","set","PrimaryElementBehavior","diseaseID","HealthBehavior","State","MinionIdentityBehavior","genderStringKey","MinionModifiersBehavior","amount","amounts","find","AITraitsBehavior","TraitIds","findIndex","set_scale_1","z","draft","effects_1","load_onisave_1","save_onisave_1","fork","save_serializer_1","handleOniSaveLoad","put","loadChannel","data","eventChannel","emitter","parseSave","then","END","catch","createLoadChannel","call","readFile","msg","take","reader","FileReader","Promise","accept","reject","onload","result","onerror","readAsArrayBuffer","takeEvery","worker_messages_1","worker","onProgress","promise","unhook","onmessage","RESPONSE_PROGRESS","RESPONSE_PARSE_SUCCESS","RESPONSE_PARSE_ERROR","jsonToError","postMessage","writeSave","RESPONSE_WRITE_SUCCESS","RESPONSE_WRITE_ERROR","sendProgress","parseSaveSuccess","parseSaveError","errorToJson","stack","writeSaveSuccess","writeSaveError","Worker","file_saver_1","handleOniSaveWrite","saveName","select","saveChannel","blob","Blob","createSaveChannel","saveAs","sanitizeSave","save","streamed","NoSave_1","Error_1","Loading_1","SaveEditor_1","AppContainer_1","AppContent_1","NavBar_1","onDismissError","onDismiss","error_1","stateSelectors","mapStateToProps","createStructuredSelector","mapDispatchToProps","runtime_env_1","NonIdealState_1","Code_1","SaveFilePaths","windows","mac","linux","unknown","NoSave","Code","Button_1","ErrorPage","onClick","Loading","loadingProgressMessageSelector","loading_state_1","loading_message_1","structuredSelector","SelectedPathBreadcrumb_1","ResizePanel_1","editors_1","SaveEditorContainer_1","ContentContainer_1","EditorContainer_1","Sidebar_1","Separator_1","editorType","editorProps","ObjectEditor","getEditor","getSaveItemEditor","getSaveItemEditorProps","structure_1","GAME_OBJECT_GROUP_PATH_ROOT","getPathGameObjectGroup","comparePathMatch","GAME_OBJECT_PATH_ROOT","getPathGameObject","GAME_OBJECT_BEHAVIOR_PATH_ROOT","part","match","isImplicitChild","getPathBehavior","getSaveItemTitle","def","getSaveStructureDef","nameSource","nameProducer","getSaveItemBreadcrumb","breadcrumbs","structurePath","walkSaveStructurePath","defPath","title","getSaveItemChildPaths","saveGamePath","uiChildren","$uiChildren","defKeys","collectAutoChildPaths","childValue","childDef","advanced","advancedProducer","checkEditMode","collectChildPaths","propFactory","gameObjectsStructure","group","$variants","createGameObjectVariants","matchers_1","minion","default_1","gameObjectVariantInfo","setStructure","structure","gameObjectPath","defaultVariant","variants","rootVariant","$match","gameObjectName","gameObjectStructure","minionGameObject","identityBehavior","primary_element_1","storageBehavior","primaryElementBehavior","storageBehaviorExtraData","StorageBehavior","subStructure","variant","iter","next","done","BreadcrumbContainer_1","breadcrumb","links","isFinal","selectedPathBreadcrumbSelector","SaveStructureLink","Link","_onClick","BreadcrumbContainer","div","ResizeHandle_1","ResizePanel","defaultWidth","onResize","_onResize","delta","s","react_draggable_1","ResizeHandleVisual_1","ResizeHandle","isResizing","DraggableCore","onStart","_onStart","onStop","_onStop","onDrag","_onDrag","d","deltaX","ResizeHandleVisual","DefaultSeparator","DefaultObjectEditor_1","SaveRootEditor_1","TemplateObjectEditor_1","GameObjectGroupList_1","GameObjectList_1","DefaultGameObjectEditor_1","MinionEditor_1","editors","save-root","game-object-group-list","game-object-list","template-object","game-object-default","game-object-minion","DefaultObjectEditorContainer_1","EditorField_1","TH","TD","DefaultObjectEditor","fields","fieldElements","field","_renderFieldRow","propKey","_onFieldChange","onModify","DefaultObjectEditorContainer","EditorField","JSON","stringify","parse","selected_value_1","selectedValue","isPrimitive","structuredSelectors","primitiveTypes","valType","InfoText_1","SaveRootEditorContainer_1","SaveGameTitle_1","DuplicantsList_1","_renderContent","numGameObjects","reduce","count","Fragment","numberOfCycles","numberOfDuplicants","SaveRootEditorContainer","SaveGameTitle","DuplicantPortrait_1","DuplicantsListContainer_1","DuplicantsListContent_1","duplicantsSetPath","duplicantIndexes","duplicantPortraits","gameObjectIndex","minionSet","range","arrivalCycle","Footer","re_reselect_1","generateCacheKey","duplicants","duplicantIdentity","identBehavior","gameSave","groupIndex","ident","arrivalTime","PortraitHeader_1","PortraitFooter_1","Portrait","PortraitHeader","PortraitFooter","DuplicantsListContainer","DuplicantsListContent","TemplateObjectEditorContainer_1","from_typeinfo_1","template","fieldRows","properties","FieldEditor","SerializationTypeInfo","member","typeCode","LIST_TYPES","keyValueIndex","Number","TemplateObjectEditorContainer","ArrayLikeField","ValueElement","elements","itemValue","dispatch","writeTo","ColorField","inline","mb","mr","px","DictionaryField","EnumerationField","enumeration","prototype","hasOwnProperty","EnumerationsByName","getEnumeration","parseInt","_onSelectInputChange","TextInput_1","Vector2Field","Vector2IField","Vector3Field","gameObjectGroups","columns","id","accessor","Cell","row","sortable","sortMethod","localeCompare","filterable","filterMethod","toLowerCase","GameObjectListContent_1","gameObjectItems","portraits","GroupListContent","prefabIdBehavior","prefabId","currentEditMode","format_1","Toolbar_1","GameObjectHeaderContainer_1","primaryElement","Group","align","formatPosition","formatSimHash","POSITION_PRECISION","formatPositionValue","v","toPrecision","hash","SimHashes","formatDisease","ElementID","toolbarItem","ToolbarLabel","ToolbarGroup","Toolbar","background","GameObjectHeaderContainer","VerticalTabs_1","MinionEditableName_1","MinionAppearanceTab_1","MinionAptitudesTab_1","MinionEffectsTab_1","MinionHealthTab_1","MinionJobsTab_1","MinionSkillsTab_1","MinionTraitsTab_1","MinionPositionTab_1","minionNamePath","Tab","tabKey","behaviorIndex","TabContent_1","VerticalTabItem_1","Tab_1","VerticalTabs","selectedKey","tabs","Children","isValidElement","tabItems","tab","isSelected","_onTabItemClick","bind","TabContent","pl","VerticalTabItem","EditableTextField_1","MinionHeader","EditableText_1","EditableTextInput_1","EditableText","autoFocus","_onEditableChange","onKeyUp","_onEditableKeyUp","onFocus","_onEditableFocus","_onEditableBlur","_onTextClick","_commit","_reset","EditableTextInput","NullableInput_1","TextAutocompleteInput_1","SelectInput_1","TDText","NoAccessory","NoAccessoryMouth","MinionAppearanceTab","onSetGender","AccessoryTypes","_renderAccessoryField","genderOpts","MINION_IDENTITY_GENDERS","_setScaleX","_setScaleY","onSetScale","onSetAccessory","editGroup","_renderAccessorySelector","AccessoriesByType","accessoryNames","items","minion_identity_1","accessorizerBehavior","getSelectedGameObjectGender","accessory","getAccessoryOfType","getAccessoryName","createAccessorySelector","getSelectedGameObjectIdentityBehavior","Autocomplete_1","TextAutocompleteInput","getItemValue","onSelect","_onValueSelect","selectOnBlur","react_autocomplete_1","AutocompleteItem","Autocomplete","inputProps","ref","convertProps","renderItem","item","isHighlighted","renderMenu","styles","AutocompleteMenu","aptitudes","setAptitude","aptitude","showPagination","aptitudesSelector","MinionResumeBehavior","hstr","roleId","MinionRoleGroup","roleHash","effects","onSetEffectData","AI_EFFECT_IDS","effectId","effectIndex","effect","timeRemaining","AIEffectsBehavior","EffectsPath","MinionHealthTab","healthState","onHealthStatusChanged","hitpoints","onHitpointsChanged","stamina","onStaminaChanged","calories","onCaloriesChanged","breath","onBreathChanged","stress","onStressChanged","bladder","onBladderChanged","surfaceDiseaseId","surfaceDiseaseCount","immuneLevel","onImmuneLevelChanged","foodPoisoning","onFoodPoisoningChanged","coldBrain","onColdBrainChanged","heatRash","onHeatRashChanged","slimeLung","onSlimeLungChanged","spores","onSporesChanged","sunburn","onSunburnChanged","HealthState","Perfect","_onSurfaceDiseaseIdCommit","_onSurfaceDiseaseCountCommit","onSurfaceDiseaseChanged","health_1","minion_modifiers_1","getSelectedGameObjectHealthState","getSelectedGameObjectElementDiseaseId","getSelectedGameObjectElementDiseaseCount","getSelectedGameObjectModifierValueSelector","getSelectedGameObjectHealthBehavior","getSelectedGameObjectElementBehavior","getSelectedGameObjectModifiersBehavior","amountId","level","jobs","setExperience","setMastery","experience","experienceIndex","mastery","masteryIndex","masteriesSelector","experienceSelector","masteries","skills","setSkillLevel","setSkillExperience","AIAttributeLevelsBehavior","Table_1","traits","onSetTrait","rows","AI_TRAIT_IDS","trait","TR","some","THead","TBody","getSelectedGameObjectTraits","Table","table","thead","th","tbody","tr","td","MinionPositionTab","SaveEditorContainer","ContentContainer","SidebarContainer_1","EditorModeSelector_1","SaveStructureTree_1","Sidebar","Panel_1","SidebarContainer","Panel","EditorModeSelector","htmlFor","_onAdvancedModeChange","SaveStructureTreeContainer_1","SaveStructureItem_1","_containerRef","saveItemPath","scrollContainer","SaveStructureTreeContainer","dom_scroll_into_view_1","SaveStructureItemContainer_1","SaveStructureItemHeader_1","SaveStructureItemContent_1","SaveStructureItemComponent","_ref","isExpanded","selectionStatus","_scrollIntoView","oldProps","childPaths","isExpandable","titleIntent","valueElement","childPath","SaveStructureItem","expandable","expanded","onExpandToggle","_onExpandToggle","htmlElement","allowHorizontalScroll","onlyScrollIfNeeded","offsetBottom","offsetTop","string_natural_compare_1","edit_mode_1","cacheKeyGenerator","itemPathSelector","itemPath","sort","aTitle","bTitle","SaveStructureItemContainer","Expander_1","ItemText_1","SaveStructureItemHeaderContainer","span","SaveStructureItemHeader","viewBox","fill","ItemText","SaveStructureItemContent","Separator","AppContainer","NavBarContainer_1","NavBarGroup_1","NavBarTitleText_1","NavBar","onLoadTestData","el","display","_onLoadFileInput","_onLoadFileClick","_onSaveFileClick","click","files","onLoad","onSave","ext","endsWith","withExtension","save_game_json_1","NavBarContainer","NavBarGroup","NavBarTitleText"],"mappings":"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","file":"client.88bf0e4fe89210c27204.bundle.js","sourcesContent":["import \"./style.css\";\r\n\r\nimport styled from \"./styled\";\r\nexport default styled;\r\n\r\nexport * from \"./styles\";\r\nexport * from \"./theme\";\r\n\r\nexport * from \"./intent\";\r\n\r\nexport {\r\n  ThemeProvider,\r\n  ThemeProps,\r\n  ThemedOuterStyledProps,\r\n  injectGlobal,\r\n  css\r\n} from \"./styled\";\r\n","import {\r\n  AlignSelfProps,\r\n  JustifySelfProps,\r\n  SpaceProps,\r\n  alignSelf,\r\n  justifySelf,\r\n  space\r\n} from \"styled-system\";\r\n\r\nimport styled from \"@/style\";\r\n\r\nimport { TextProps as TextStyleProps, text } from \"@/style\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nexport type TextProps = TextStyleProps &\r\n  AlignSelfProps &\r\n  JustifySelfProps &\r\n  SpaceProps;\r\nconst Text = styled<TextProps, \"span\">(\"span\")`\r\n  ${text};\r\n  ${alignSelf};\r\n  ${justifySelf};\r\n  ${space};\r\n`;\r\nText.displayName = \"Text\";\r\nexport default attachProps(Text, {\r\n  H4: Text.withComponent(\"h4\") as StyledWithComponentTag<\"h4\", TextProps>,\r\n  Label: Text.withComponent(\"label\") as StyledWithComponentTag<\r\n    \"label\",\r\n    TextProps\r\n  >,\r\n  Div: Text.withComponent(\"div\") as StyledWithComponentTag<\"div\", TextProps>\r\n});\r\n","import { SaveGame } from \"oni-save-parser\";\r\nimport { EditMode } from \"@/services/save-structure\";\r\n\r\nexport type LoadingState = \"idle\" | \"loading\" | \"saving\" | \"ready\";\r\n\r\nexport interface AppState {\r\n  loadingState: LoadingState;\r\n  loadingProgressMessage: string | null;\r\n  error: Error | null;\r\n  oniSave: SaveGame | null;\r\n  selectedPath: string[];\r\n  editMode: EditMode;\r\n}\r\nexport const defaultAppState: Readonly<AppState> = {\r\n  loadingState: \"idle\" as \"idle\",\r\n  loadingProgressMessage: null,\r\n  error: null,\r\n  oniSave: null,\r\n  selectedPath: [],\r\n  editMode: \"normal\"\r\n};\r\nObject.freeze(defaultAppState);\r\n","import { AppState } from \"@/state\";\r\n\r\nconst oniSaveSelector = (state: AppState) => state.oniSave;\r\nexport default oniSaveSelector;\r\n","import { forEach } from \"lodash-es\";\r\n\r\nexport function attachProps<\r\n  TTarget,\r\n  TSubComponents extends Record<string, any>\r\n>(component: TTarget, subComponents: TSubComponents): TTarget & TSubComponents {\r\n  const c = component as any;\r\n  forEach(subComponents, (component, key) => {\r\n    c[key] = component;\r\n  });\r\n  return c as any;\r\n}\r\n","import { AppState } from \"@/state\";\r\n\r\nconst selectedPathSelector = (state: AppState) => state.selectedPath;\r\nexport default selectedPathSelector;\r\n","import * as styledComponents from \"styled-components\";\r\nimport {\r\n  ThemedStyledComponentsModule,\r\n  ThemedOuterStyledProps as _ThemedOuterStyledProps\r\n} from \"styled-components\";\r\n\r\nimport { Theme } from \"./theme\";\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  injectGlobal,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as ThemedStyledComponentsModule<Theme>;\r\n\r\nexport type ThemeProps = {\r\n  theme?: Theme;\r\n};\r\nexport type ThemedOuterStyledProps<P> = _ThemedOuterStyledProps<P, Theme>;\r\n\r\nexport { css, injectGlobal, keyframes, ThemeProvider };\r\nexport default styled;\r\n","import { attachProps } from \"@/utils\";\r\n\r\nimport Box, { BoxProps } from \"@/components/Box\";\r\n\r\nimport {\r\n  AlignContentProps,\r\n  JustifyContentProps,\r\n  alignContent,\r\n  justifyContent\r\n} from \"styled-system\";\r\n\r\nexport interface FlexItemProps extends BoxProps {\r\n  grow?: boolean;\r\n  shrink?: boolean;\r\n  fillParent?: boolean;\r\n  constrain?: \"row\" | \"column\";\r\n}\r\n\r\nconst FlexItem = Box.extend<FlexItemProps>`\r\n  ${props => props.grow && \"flex-grow: 1\"};\r\n  ${props => props.shrink && \"flex-shrink: 1\"};\r\n  ${props =>\r\n    props.fillParent &&\r\n    (props.constrain ? \"flex: 0 1 auto\" : \"flex: 1 1 auto\")};\r\n  ${props =>\r\n    props.constrain &&\r\n    (props.constrain === \"row\"\r\n      ? [\"min-width: 0;\", \"width: 100%;\"]\r\n      : [\"min-height: 0;\", \"height: 100%;\"])};\r\n  ${props => props.shrink && \"min-height: 0;\"};\r\n  flex-basis: auto;\r\n  box-sizing: border-box;\r\n`;\r\nFlexItem.displayName = \"FlexItem\";\r\n\r\nexport interface FlexProps\r\n  extends BoxProps,\r\n    AlignContentProps,\r\n    JustifyContentProps {\r\n  direction: \"row\" | \"column\";\r\n}\r\n\r\nconst Flex = Box.extend<FlexProps>`\r\n  display: flex;\r\n  ${alignContent};\r\n  ${justifyContent};\r\n  flex-direction: ${props => props.direction};\r\n  align-items: stretch;\r\n`;\r\nFlex.displayName = \"Flex\";\r\n\r\nexport default attachProps(Flex, {\r\n  Item: FlexItem\r\n});\r\n","import { BehaviorName, GameObjectBehavior, getBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { produceFromGameObject } from \"@/reducer/game-object/utils\";\r\n\r\nexport function produceFromBehavior<TBehav extends GameObjectBehavior>(\r\n  state: AppState,\r\n  behaviorName: BehaviorName<TBehav>,\r\n  producer: (behavior: TBehav) => void\r\n): AppState {\r\n  return produceFromGameObject(state, gameObject => {\r\n    const behavior = getBehavior(gameObject, behaviorName);\r\n    if (!behavior) {\r\n      return;\r\n    }\r\n\r\n    return producer(behavior);\r\n  });\r\n}\r\n","import * as React from \"react\";\r\nimport { IntentProps, Border, Radius, Intent, Space, Color } from \"@/style\";\r\n\r\nimport Box from \"@/components/Box\";\r\nimport Text from \"@/components/Text\";\r\n\r\nexport interface NonIdealStatProps extends IntentProps {\r\n  header?: React.ReactNode;\r\n}\r\n\r\nconst Header = Text.H4.extend`\r\n  margin-top: 0;\r\n  width: auto;\r\n`;\r\nHeader.displayName = \"Header\";\r\nconst NonIdealState: React.SFC<NonIdealStatProps> = ({\r\n  intent,\r\n  header,\r\n  children\r\n}) => (\r\n  <Box width=\"100%\" height=\"100%\">\r\n    <Box\r\n      width=\"75%\"\r\n      intent={intent}\r\n      border={Border.Thick}\r\n      borderRadius={Radius.Medium}\r\n      borderColor={Color.HintIntent}\r\n      p={Space.Medium}\r\n      mx=\"auto\"\r\n      mt={Space.Large}\r\n    >\r\n      {header && (\r\n        <Header\r\n          intent={\r\n            intent === Intent.Default || intent === Intent.Hint\r\n              ? Intent.Primary\r\n              : intent\r\n          }\r\n        >\r\n          {header}\r\n        </Header>\r\n      )}\r\n      {children}\r\n    </Box>\r\n  </Box>\r\n);\r\nNonIdealState.displayName = \"NonIdealState\";\r\nexport default NonIdealState;\r\n","import {\r\n  AlignSelfProps,\r\n  JustifySelfProps,\r\n  WidthProps,\r\n  HeightProps,\r\n  SpaceProps,\r\n  alignSelf,\r\n  justifySelf,\r\n  width,\r\n  height,\r\n  space\r\n} from \"styled-system\";\r\n\r\nimport styled, {\r\n  BorderProps,\r\n  IntentBorderProps,\r\n  intentBorder,\r\n  IntentProps,\r\n  border,\r\n  intent\r\n} from \"@/style\";\r\n\r\nexport type BoxProps = AlignSelfProps &\r\n  JustifySelfProps &\r\n  WidthProps &\r\n  HeightProps &\r\n  SpaceProps &\r\n  BorderProps &\r\n  IntentBorderProps &\r\n  IntentProps;\r\n\r\nconst Box = styled<BoxProps, \"div\">(\"div\")`\r\n  ${alignSelf};\r\n  ${justifySelf};\r\n  ${width};\r\n  ${height};\r\n  ${space};\r\n  ${border};\r\n  /* ${intentBorder}; */\r\n  ${intent};\r\n  box-sizing: border-box;\r\n`;\r\nBox.displayName = \"Box\";\r\nBox.defaultProps = {\r\n  intentIsBg: false\r\n};\r\nexport default Box;\r\n","import FormGroup from \"./FormGroup\";\r\nexport default FormGroup;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Keys from \"@/keys\";\r\n\r\nimport { NumberPrecision, clamp, isFloatingPoint } from \"@/math\";\r\n\r\nimport Input from \"@/components/Input\";\r\n\r\nexport interface NumericInputProps {\r\n  value: number;\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  precision?: NumberPrecision;\r\n  onCommit(value: number): void;\r\n}\r\n\r\ntype Props = NumericInputProps;\r\ninterface State {\r\n  editValue: number | null;\r\n  validationMessage: string | null;\r\n}\r\nexport default class NumericInput extends React.Component<Props, State> {\r\n  private _input = React.createRef<HTMLInputElement>();\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editValue: null,\r\n      validationMessage: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { value, minValue, maxValue, precision } = this.props;\r\n    const { editValue } = this.state;\r\n\r\n    const currentValue = editValue != null ? editValue : value;\r\n\r\n    const step = isFloatingPoint(precision || \"int32\") ? Math.pow(10, -16) : 1;\r\n\r\n    return (\r\n      <Input\r\n        innerRef={this._input}\r\n        type=\"number\"\r\n        min={minValue}\r\n        max={maxValue}\r\n        value={currentValue}\r\n        onChange={this._onValueChange}\r\n        onKeyPress={this._onInputKeyPress}\r\n        onBlur={this._onInputBlur}\r\n        step={step}\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onValueChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const { minValue, maxValue } = this.props;\r\n\r\n    const value = e.target.valueAsNumber;\r\n    let validationMessage: string | null = null;\r\n\r\n    if (maxValue != null && value >= maxValue) {\r\n      validationMessage = `Value must be less than ${maxValue}`;\r\n    } else if (minValue != null && value <= minValue) {\r\n      validationMessage = `Value must be greater than ${minValue}`;\r\n    }\r\n\r\n    e.target.setCustomValidity(validationMessage || \"\");\r\n\r\n    this.setState({\r\n      editValue: value,\r\n      validationMessage\r\n    });\r\n  }\r\n\r\n  @autobind()\r\n  private _onInputKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    if (e.key === Keys.Enter) {\r\n      this._commitEdit();\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onInputBlur() {\r\n    this._commitEdit();\r\n  }\r\n\r\n  private _commitEdit() {\r\n    const { editValue, validationMessage } = this.state;\r\n    const { precision = \"int32\", onCommit } = this.props;\r\n\r\n    // Reset validation\r\n    if (validationMessage && this._input.current) {\r\n      this._input.current.setCustomValidity(\"\");\r\n    }\r\n\r\n    this.setState({\r\n      editValue: null,\r\n      validationMessage: null\r\n    });\r\n\r\n    if (!editValue || validationMessage) {\r\n      return;\r\n    }\r\n\r\n    const newValue = clamp(precision, editValue);\r\n    if (isNaN(newValue)) {\r\n      return;\r\n    }\r\n\r\n    onCommit(newValue);\r\n  }\r\n}\r\n","import { createSelector, Selector } from \"reselect\";\r\n\r\nimport { memoize, get } from \"lodash-es\";\r\n\r\nimport { BehaviorName, GameObjectBehavior, getBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport getSelectedGameObject from \"@/selectors/game-object\";\r\n\r\nfunction createCurrentGameObjectBehaviorSelector<T extends GameObjectBehavior>(\r\n  behaviorName: BehaviorName<T>\r\n): Selector<AppState, T | null> {\r\n  return createSelector(getSelectedGameObject, gameObject => {\r\n    if (!gameObject) {\r\n      return null;\r\n    }\r\n\r\n    return getBehavior(gameObject, behaviorName) || null;\r\n  });\r\n}\r\n\r\n// Using an inline function breaks the inference of the behavior.\r\nexport const getCurrentGameObjectBehaviorSelector = memoize(\r\n  createCurrentGameObjectBehaviorSelector\r\n) as typeof createCurrentGameObjectBehaviorSelector;\r\n\r\nexport function createCurrentGameObjectBehaviorPropertySelector<\r\n  T extends GameObjectBehavior,\r\n  TResult\r\n>(\r\n  behaviorName: BehaviorName<T>,\r\n  valueSelector: string[] | Selector<T, TResult>\r\n): Selector<AppState, TResult | null> {\r\n  let valueSelectFunc: Selector<T, TResult>;\r\n  if (Array.isArray(valueSelector)) {\r\n    valueSelectFunc = behavior => get(behavior, valueSelector);\r\n  } else {\r\n    valueSelectFunc = valueSelector;\r\n  }\r\n\r\n  const behaviorSelector = getCurrentGameObjectBehaviorSelector(behaviorName);\r\n  return createSelector(behaviorSelector, behavior => {\r\n    if (!behavior) {\r\n      return null;\r\n    }\r\n    return valueSelectFunc(behavior);\r\n  });\r\n}\r\n\r\ntype getCGOBByPath = <T extends GameObjectBehavior, TResult>(\r\n  behaviorName: BehaviorName<T>,\r\n  valuePath: string[]\r\n) => Selector<AppState, TResult>;\r\n\r\nexport const getCurrentGameObjectBehaviorPropertySelector = memoize(\r\n  createCurrentGameObjectBehaviorPropertySelector,\r\n  (behaviorName: string, behaviorPath: string[]) =>\r\n    [behaviorName, behaviorPath.join(\".\")].join(\"::\")\r\n) as getCGOBByPath;\r\n","import { connect } from \"react-redux\";\r\n\r\nexport * from \"./props\";\r\n\r\nimport { EditorFieldProps } from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\nimport { AppState } from \"@/state\";\r\n\r\nexport type InjectedProps = StateProps & DispatchProps;\r\n\r\nexport default function connectEditorField() {\r\n  return connect<StateProps, DispatchProps, EditorFieldProps, AppState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  );\r\n}\r\n","import { WidthProps, width } from \"styled-system\";\r\n\r\nimport styled, { TextProps, getTheme, text, css } from \"@/style\";\r\n\r\n// Note: Should extend TextCssProps, but doing so causes some odd typing issues\r\n//  Props will somehow demand but refuse 'ref'\r\nexport interface InputStyleProps extends TextProps, WidthProps {}\r\n\r\nexport const inputStyle = css<InputStyleProps>`\r\n  ${text};\r\n  ${width};\r\n  padding: 2px;\r\n  background-color: ${props => getTheme(props).colors.bg.panel};\r\n  border: ${props => getTheme(props).borders[1]};\r\n  border-color: ${props => getTheme(props).colors.intent.secondary};\r\n  &:focus {\r\n    border-color: ${props => getTheme(props).colors.intent.primary};\r\n    outline: none;\r\n  }\r\n  &:invalid {\r\n    border-color: ${props => getTheme(props).colors.intent.dangerous};\r\n  }\r\n`;\r\n\r\nconst Input = styled<InputStyleProps, \"input\">(\"input\")`\r\n  ${inputStyle};\r\n`;\r\nInput.displayName = \"Input\";\r\n\r\nexport type InputProps = StyledComponentProps<typeof Input>;\r\nexport default Input;\r\n","import NumericInput from \"@/components/NumericInput\";\r\n\r\nimport connectEditorField from \"./connect-field\";\r\n\r\nexport default connectEditorField()(NumericInput);\r\n","export * from \"./utils\";\r\nexport * from \"./types\";\r\n","export * from \"./props\";\r\nimport SaveStructureLink from \"./SaveStructureLink\";\r\nexport default SaveStructureLink;\r\n","export * from \"./theme\";\r\n\r\nexport { Color, getThemeColor } from \"./colors\";\r\nexport { Border, getThemeBorder } from \"./borders\";\r\nexport { FontSize } from \"./font-sizes\";\r\nexport { Radius, getThemeRadius } from \"./radii\";\r\nexport { Space, getThemeSpace } from \"./space\";\r\n","import { GameObjectBehavior, BehaviorName } from \"oni-save-parser\";\r\n\r\nexport const ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE =\r\n  \"oni-save/current-object/behaviors/set-value\";\r\nexport function setCurrentObjectBehaviorValue<T extends GameObjectBehavior>(\r\n  behaviorName: BehaviorName<T>,\r\n  path: string[],\r\n  value: any\r\n) {\r\n  return {\r\n    type: ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE as typeof ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE,\r\n    payload: { behaviorName, path, value }\r\n  };\r\n}\r\nexport type SetCurrentObjectBehaviorValueAction<\r\n  T extends GameObjectBehavior = GameObjectBehavior\r\n> = {\r\n  type: typeof ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE;\r\n  payload: {\r\n    behaviorName: BehaviorName<T>;\r\n    path: string[];\r\n    value: any;\r\n  };\r\n};\r\n","import { SaveGame } from \"oni-save-parser\";\r\n\r\nexport const ACTION_RECEIVE_ONISAVE_BEGIN = \"oni-save/receive:begin\";\r\nexport const receiveOniSaveBegin = (\r\n  operation: \"loading\" | \"saving\",\r\n  clearExisting?: boolean\r\n) => ({\r\n  type: ACTION_RECEIVE_ONISAVE_BEGIN as typeof ACTION_RECEIVE_ONISAVE_BEGIN,\r\n  payload: { operation, clearExisting }\r\n});\r\nexport type ReceiveOniSaveBeginAction = ReturnType<typeof receiveOniSaveBegin>;\r\n\r\nexport const ACTION_RECEIVE_ONISAVE_ERROR = \"oni-save/receive:error\";\r\nexport const receiveOniSaveError = (error: Error) => ({\r\n  type: ACTION_RECEIVE_ONISAVE_ERROR as typeof ACTION_RECEIVE_ONISAVE_ERROR,\r\n  payload: error\r\n});\r\nexport type ReceiveOniSaveErrorAction = ReturnType<typeof receiveOniSaveError>;\r\n\r\nexport const ACTION_RECEIVE_ONISAVE_SUCCESS = \"oni-save/receive:success\";\r\nexport const receiveOniSaveSuccess = (oniSave: SaveGame) => ({\r\n  type: ACTION_RECEIVE_ONISAVE_SUCCESS as typeof ACTION_RECEIVE_ONISAVE_SUCCESS,\r\n  payload: oniSave\r\n});\r\nexport type ReceiveOniSaveSuccessAction = ReturnType<\r\n  typeof receiveOniSaveSuccess\r\n>;\r\n\r\nexport type ReceiveOniSaveAction =\r\n  | ReceiveOniSaveBeginAction\r\n  | ReceiveOniSaveErrorAction\r\n  | ReceiveOniSaveSuccessAction;\r\n","import DataTable from \"./DataTable\";\r\nexport default DataTable;\r\nexport * from \"./DataTable\";\r\n","import { includes } from \"lodash\";\r\n\r\nexport enum Intent {\r\n  Default = \"default\",\r\n  Primary = \"primary\",\r\n  Secondary = \"secondary\",\r\n  Dangerous = \"dangerous\",\r\n  Hint = \"hint\"\r\n}\r\n\r\nexport function isIntent(str: string | null | undefined): str is Intent {\r\n  return includes(Intent, str);\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { get } from \"lodash-es\";\r\n\r\nimport selectedPath from \"./selected-path\";\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nconst GAME_OBJECT_PATH = [/gameObjects/, /.+/, /gameObjects/, /\\d+/];\r\n\r\nexport const getIsGameObjectSelected = createSelector(selectedPath, path => {\r\n  if (!path) {\r\n    return null;\r\n  }\r\n\r\n  if (path.length < GAME_OBJECT_PATH.length) {\r\n    return false;\r\n  }\r\n\r\n  return GAME_OBJECT_PATH.every((x, i) => x.test(path[i]));\r\n});\r\n\r\nexport const getSelectedGameObjectPath = createSelector(\r\n  selectedPath,\r\n  getIsGameObjectSelected,\r\n  (path, valid) => {\r\n    if (!valid) {\r\n      return null;\r\n    }\r\n\r\n    return path.slice(0, GAME_OBJECT_PATH.length);\r\n  }\r\n);\r\n\r\nexport const getSelectedGameObject = createSelector(\r\n  oniSave,\r\n  getSelectedGameObjectPath,\r\n  (oniSave, path) => {\r\n    if (!oniSave || !path) {\r\n      return null;\r\n    }\r\n\r\n    return get(oniSave, path) as GameObject;\r\n  }\r\n);\r\n\r\nexport const getSelectedGameObjectScale = createSelector(\r\n  getSelectedGameObject,\r\n  gameObject => {\r\n    if (!gameObject) {\r\n      return null;\r\n    }\r\n    return gameObject.scale;\r\n  }\r\n);\r\n\r\nexport default getSelectedGameObject;\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { getSaveItemEditValue } from \"@/services/save-structure\";\r\n\r\nimport selectedPath from \"./selected-path\";\r\nimport oniSave from \"./oni-save\";\r\n\r\nconst selectedValueSelector = createSelector(\r\n  oniSave,\r\n  selectedPath,\r\n  (saveGame, selectedPath) => {\r\n    if (!saveGame) {\r\n      return null;\r\n    }\r\n\r\n    if (selectedPath.length === 0) {\r\n      return saveGame;\r\n    }\r\n\r\n    return getSaveItemEditValue(selectedPath, saveGame);\r\n  }\r\n);\r\nexport default selectedValueSelector;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Input from \"@/components/Input\";\r\n\r\nexport interface CheckInputProps {\r\n  value: boolean;\r\n  onCommit(value: boolean): void;\r\n}\r\n\r\ntype Props = CheckInputProps;\r\nexport default class CheckInput extends React.Component<Props> {\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <Input type=\"checkbox\" checked={value} onChange={this._onValueChange} />\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onValueChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const { onCommit } = this.props;\r\n    const value = e.target.checked;\r\n    onCommit(value);\r\n  }\r\n}\r\n","interface ConstrainedArrayConstructor {\r\n  new (length: number): {\r\n    [value: number]: number;\r\n  };\r\n}\r\n\r\nfunction createClamp(\r\n  type: ConstrainedArrayConstructor\r\n): (value: number) => number {\r\n  const clampArray = new type(1);\r\n  return (value: number) => {\r\n    clampArray[0] = value;\r\n    return clampArray[0];\r\n  };\r\n}\r\n\r\nexport type NumberPrecision =\r\n  | \"int8\"\r\n  | \"uint8\"\r\n  | \"int16\"\r\n  | \"uint16\"\r\n  | \"int32\"\r\n  | \"uint32\"\r\n  | \"single\"\r\n  | \"double\";\r\n\r\nexport const clampInt8 = createClamp(Int8Array);\r\nexport const clampUInt8 = createClamp(Uint8Array);\r\n\r\nexport const clampInt16 = createClamp(Int16Array);\r\nexport const clampUInt16 = createClamp(Uint16Array);\r\n\r\nexport const clampInt32 = createClamp(Int32Array);\r\nexport const clampUInt32 = createClamp(Uint32Array);\r\n\r\nexport const clampSingle = createClamp(Float32Array);\r\nexport const clampDouble = createClamp(Float64Array);\r\n\r\nconst CLAMPS_BY_PRECISION: Record<\r\n  NumberPrecision,\r\n  (value: number) => number\r\n> = {\r\n  int8: clampInt8,\r\n  uint8: clampUInt8,\r\n  int16: clampInt16,\r\n  uint16: clampUInt16,\r\n  int32: clampInt32,\r\n  uint32: clampUInt32,\r\n  single: clampSingle,\r\n  double: clampDouble\r\n};\r\n\r\nexport function clamp(precision: NumberPrecision, value: number): number {\r\n  const clamper = CLAMPS_BY_PRECISION[precision];\r\n  if (!clamper) {\r\n    throw new Error(`Unknown precision \"${precision}\".`);\r\n  }\r\n\r\n  return clamper(value);\r\n}\r\n\r\nexport function isFloatingPoint(\r\n  precision: NumberPrecision\r\n): precision is \"single\" | \"double\" {\r\n  return precision === \"single\" || precision === \"double\";\r\n}\r\n\r\nexport function compare(a: number, b: number) {\r\n  if (a > b) return -1;\r\n  if (a < b) return 1;\r\n  return 0;\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\n\r\nimport EditorHeader from \"./EditorHeader\";\r\n\r\nexport interface EditorContainerProps {\r\n  header: React.ReactNode;\r\n}\r\nconst EditorContainer: React.SFC<EditorContainerProps> = ({\r\n  header,\r\n  children\r\n}) => (\r\n  <Flex direction=\"column\" width=\"100%\" height=\"100%\">\r\n    <EditorHeader>{header}</EditorHeader>\r\n    <Flex.Item fillParent constrain=\"column\">\r\n      {children}\r\n    </Flex.Item>\r\n  </Flex>\r\n);\r\nEditorContainer.displayName = \"EditorContainer\";\r\nexport default EditorContainer;\r\n","import { css } from \"../styled\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { Intent } from \"../intent\";\r\n\r\nimport { Color, getThemeColor } from \"../theme\";\r\n\r\nexport interface IntentColorProps {\r\n  intent?: Intent;\r\n}\r\n\r\nconst intentColorOf = (intent: Intent) => css`\r\n  color: ${getThemeColor(Color.fromIntent(intent))};\r\n`;\r\n\r\nconst intentColorFromProps = css<IntentColorProps>`\r\n  ${props => intentColorOf(props.intent || Intent.Default)};\r\n`;\r\n\r\nexport const intentColor = attachProps(intentColorFromProps, {\r\n  of: intentColorOf\r\n});\r\n","export const ACTION_ONISAVE_MODIFY = \"oni-save/modify\";\r\nexport const modifyOniSave = (path: string[], value: any) => ({\r\n  type: ACTION_ONISAVE_MODIFY as typeof ACTION_ONISAVE_MODIFY,\r\n  payload: { path, value }\r\n});\r\nexport type ModifyOniSaveAction = ReturnType<typeof modifyOniSave>;\r\n","export const ACTION_ONISAVE_PARSE_PROGRESS = \"onisave/parse-progress\";\r\nexport const parseProgress = (message: string) => ({\r\n  type: ACTION_ONISAVE_PARSE_PROGRESS as typeof ACTION_ONISAVE_PARSE_PROGRESS,\r\n  payload: { message }\r\n});\r\nexport type ParseProgressAction = ReturnType<typeof parseProgress>;\r\n","export const ACTION_SELECT_PATH = \"editor/select-path\";\r\nexport const selectPath = (path: string[]) => ({\r\n  type: ACTION_SELECT_PATH as typeof ACTION_SELECT_PATH,\r\n  payload: path\r\n});\r\nexport type SelectPathAction = ReturnType<typeof selectPath>;\r\n","import { SaveGame } from \"oni-save-parser\";\r\n\r\nimport gameObjectsStructure from \"./gameObjects\";\r\nimport { SaveStructureDef } from \"./types\";\r\n\r\n// The default 'any' makes this useful for variables, but useless for asignment.\r\n//  This is because type 'any' includes all fields, and overrides our selective\r\n//  exclusion of $-prefix fields\r\nconst defaultAdvancedField: SaveStructureDef<{}> = { $advanced: true };\r\n\r\nconst saveStructure: SaveStructureDef<SaveGame> = {\r\n  $editor: \"save-root\",\r\n  $uiPathName: (obj: SaveGame) => obj.header.gameInfo.baseName || \"Save Game\",\r\n\r\n  /**\r\n   * Version info and precalculated values.\r\n   * Changing this stuff can confuse the game or display bad data\r\n   * for the loading screen.\r\n   */\r\n  header: defaultAdvancedField,\r\n\r\n  /**\r\n   * Data templates for the rest of the save.  Changing anything in here\r\n   * is guarenteed to result in a corrupt save.\r\n   */\r\n  templates: defaultAdvancedField,\r\n\r\n  /**\r\n   * World width and height, and opaque engine data we do not understand.\r\n   * Contents of the worldmap and state of the fluid/gas/electrical networks\r\n   * live in here.\r\n   */\r\n  world: defaultAdvancedField,\r\n\r\n  /**\r\n   * Settings for the master game object handler.\r\n   * None of these are related to user-settings, and changing them\r\n   * will most likely result in an immediately or eventually corrupt save.\r\n   */\r\n  settings: defaultAdvancedField,\r\n\r\n  /**\r\n   * Game version info.  Should mirror the same data\r\n   * stored in header.\r\n   * Should never be touched, as ONI makes decisions on how to load the file\r\n   * based on this.\r\n   */\r\n  version: defaultAdvancedField,\r\n\r\n  /**\r\n   * Game objects.  These are the interesting bits\r\n   */\r\n  gameObjects: gameObjectsStructure,\r\n\r\n  /**\r\n   * Another blob of generalized non-object-specific game data\r\n   */\r\n  gameData: {\r\n    $editor: \"template-object\",\r\n    $editorProps() {\r\n      return {\r\n        templateName: \"Game+GameSaveData\"\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Presumably tracks the flow of material through the gas conduits.\r\n     * I am reasonably sure this also ties into native game data,\r\n     * and changing this will probably get the engine into an\r\n     * inconsistant state.\r\n     */\r\n    gasConduitFlow: defaultAdvancedField,\r\n\r\n    /**\r\n     * Presumably tracks the flow of material through the loquid conduits.\r\n     * I am reasonably sure this also ties into native game data,\r\n     * and changing this will probably get the engine into an\r\n     * inconsistant state.\r\n     */\r\n    liquidConduitFlow: defaultAdvancedField,\r\n\r\n    /**\r\n     * Probably deals with limiting the area of the map that the game is running logic for.\r\n     */\r\n    simActiveRegionMin: defaultAdvancedField,\r\n\r\n    /**\r\n     * Probably deals with limiting the area of the map that the game is running logic for.\r\n     */\r\n    simActiveRegionMax: defaultAdvancedField,\r\n\r\n    fallingWater: defaultAdvancedField,\r\n\r\n    unstableGround: defaultAdvancedField,\r\n\r\n    /**\r\n     * While this does contain (multiple) worldgen seeds,\r\n     *  all seeds are the same and reflect the definitivie chosen seed in customGameSettings.\r\n     * It also has a bunch of polygons indicating regions of the overworld.  Not sure what it represents,\r\n     *  might be biome regions.\r\n     */\r\n    worldDetail: defaultAdvancedField,\r\n\r\n    customGameSettings: defaultAdvancedField\r\n  }\r\n};\r\nexport default saveStructure;\r\n","import { isObject } from \"lodash-es\";\r\nimport { GameObjectBehavior, GameObjectGroup } from \"oni-save-parser\";\r\n\r\nexport function gameObjectIs(type: string): (obj: GameObjectGroup) => boolean {\r\n  return obj => isObject(obj) && obj.name === type;\r\n}\r\n\r\nexport function behaviorIs(type: string): (obj: GameObjectBehavior) => boolean {\r\n  return obj => isObject(obj) && obj.name === type;\r\n}\r\n","import { GameObjectBehavior, SaveGame } from \"oni-save-parser\";\r\n\r\nimport { get, forEach, isObject } from \"lodash-es\";\r\n\r\nimport { SaveStructureDef } from \"../../types\";\r\n\r\nconst defaultTemplateDataObj: SaveStructureDef<{}> = {\r\n  $editor: \"template-object\",\r\n  $uiPathName: false,\r\n\r\n  $uiChildren(value: any) {\r\n    let keys = (isObject(value) && Object.keys(value)) || [];\r\n    keys = keys.filter(x => isObject(value[x]));\r\n    if (keys.length === 0) {\r\n      return false;\r\n    }\r\n    return keys.map(x => [x]);\r\n  },\r\n\r\n  $editorProps(_: any, path: string[], saveGame: SaveGame) {\r\n    // 'gameObjects', '1', 'gameObjects', '6', 'behaviors', '4'\r\n    // 6 items deep\r\n    const behavior = get(saveGame, path.slice(0, 6));\r\n    const templatePath = path.slice(7);\r\n    if (!behavior) {\r\n      return {};\r\n    }\r\n    return {\r\n      templateName: behavior.name,\r\n      templatePath,\r\n      valuePathHack: path\r\n    };\r\n  }\r\n};\r\ndefaultTemplateDataObj[\"*\"] = defaultTemplateDataObj;\r\n\r\nexport const defaultBehavior: SaveStructureDef<GameObjectBehavior> = {\r\n  $uiPathName(behavior: GameObjectBehavior) {\r\n    return behavior.name;\r\n  },\r\n\r\n  $uiChildren(behavior: GameObjectBehavior) {\r\n    const children: string[][] = [];\r\n    if (\r\n      behavior.templateData &&\r\n      Object.keys(behavior.templateData).length > 0\r\n    ) {\r\n      forEach(behavior.templateData, (_, key) => {\r\n        if (isObject(behavior.templateData[key])) {\r\n          children.push([\"templateData\", key]);\r\n        }\r\n      });\r\n    }\r\n    if (behavior.extraData) {\r\n      children.push([\"extraData\"]);\r\n    }\r\n    return children.length > 0 ? children : false;\r\n  },\r\n\r\n  $advanced(behavior: GameObjectBehavior) {\r\n    return true;\r\n  },\r\n\r\n  $editor: \"template-object\",\r\n  $editorProps(_: any, path: string[], saveGame: SaveGame) {\r\n    // 'gameObjects', '1', 'gameObjects', '6', 'behaviors', '4'\r\n    // 6 items deep\r\n    const behavior = get(saveGame, path);\r\n    if (!behavior) {\r\n      return {};\r\n    }\r\n    return {\r\n      templateName: behavior.name,\r\n      templatePath: [],\r\n      valuePathHack: [...path, \"templateData\"]\r\n    };\r\n  },\r\n\r\n  templateData: {\r\n    $uiPathName: false,\r\n\r\n    \"*\": defaultTemplateDataObj\r\n\r\n    // TODO: Handle '*' with an object that gets the template editor\r\n    //  set up with the correct template path, and references itself\r\n    //  for its own '*' recursively.\r\n  } as SaveStructureDef<{}>\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { TypeInfo, SerializationTypeCode, getTypeCode } from \"oni-save-parser\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport SaveStructureLink from \"@/components/SaveStructureLink\";\r\n\r\nimport { EditorFieldProps } from \"./connect-field\";\r\n\r\nimport ArrayLikeField from \"./ArrayLikeField\";\r\nimport CheckField from \"./CheckField\";\r\nimport ColorField from \"./ColorField\";\r\nimport DictionaryField from \"./DictionaryField\";\r\nimport EnumerationField from \"./EnumerationField\";\r\nimport NumericField from \"./NumericField\";\r\nimport TextField from \"./TextField\";\r\nimport Vector2Field from \"./Vector2Field\";\r\nimport Vector2IField from \"./Vector2IField\";\r\nimport Vector3Field from \"./Vector3Field\";\r\n\r\nexport default function getFieldElementClass(\r\n  typeInfo: TypeInfo,\r\n  short?: boolean\r\n): React.ComponentType<EditorFieldProps> {\r\n  const code = getTypeCode(typeInfo.info);\r\n  switch (code) {\r\n    case SerializationTypeCode.Array:\r\n      return (props: EditorFieldProps) =>\r\n        short ? (\r\n          <SaveStructureLink intent={Intent.Primary} path={props.path}>\r\n            [Edit Array]\r\n          </SaveStructureLink>\r\n        ) : (\r\n          <ArrayLikeField {...props} subType={typeInfo.subTypes![0]} />\r\n        );\r\n    case SerializationTypeCode.Boolean:\r\n      return (props: EditorFieldProps) => <CheckField {...props} />;\r\n    case SerializationTypeCode.Byte:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} minValue={0} maxValue={0xff} />\r\n      );\r\n    case SerializationTypeCode.Colour:\r\n      return (props: EditorFieldProps) => <ColorField {...props} />;\r\n    case SerializationTypeCode.Dictionary:\r\n      return (props: EditorFieldProps) =>\r\n        short ? (\r\n          <SaveStructureLink intent={Intent.Primary} path={props.path}>\r\n            [Edit Dictionary]\r\n          </SaveStructureLink>\r\n        ) : (\r\n          <DictionaryField subType={typeInfo.subTypes![1]} {...props} />\r\n        );\r\n    case SerializationTypeCode.Double:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} precision=\"double\" />\r\n      );\r\n    case SerializationTypeCode.Enumeration:\r\n      return (props: EditorFieldProps) => (\r\n        <EnumerationField {...props} enumerationName={typeInfo.templateName!} />\r\n      );\r\n    case SerializationTypeCode.HashSet:\r\n      return (props: EditorFieldProps) =>\r\n        short ? (\r\n          <SaveStructureLink intent={Intent.Primary} path={props.path}>\r\n            [Edit HashSet]\r\n          </SaveStructureLink>\r\n        ) : (\r\n          <ArrayLikeField {...props} subType={typeInfo.subTypes![0]} />\r\n        );\r\n    case SerializationTypeCode.Int16:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} precision=\"int16\" />\r\n      );\r\n    case SerializationTypeCode.Int32:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} precision=\"int32\" />\r\n      );\r\n    case SerializationTypeCode.Int64:\r\n      return () => <Text intent={Intent.Dangerous}>TODO Int64</Text>;\r\n    case SerializationTypeCode.List:\r\n      return (props: EditorFieldProps) =>\r\n        short ? (\r\n          <SaveStructureLink intent={Intent.Primary} path={props.path}>\r\n            [Edit Array]\r\n          </SaveStructureLink>\r\n        ) : (\r\n          <ArrayLikeField {...props} subType={typeInfo.subTypes![0]} />\r\n        );\r\n    case SerializationTypeCode.Pair:\r\n      return () => <Text intent={Intent.Dangerous}>TODO Pair</Text>;\r\n    case SerializationTypeCode.SByte:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} minValue={-128} maxValue={127} />\r\n      );\r\n    case SerializationTypeCode.Queue:\r\n      return (props: EditorFieldProps) => (\r\n        <ArrayLikeField {...props} subType={typeInfo.subTypes![0]} />\r\n      );\r\n    case SerializationTypeCode.Single:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} precision=\"single\" />\r\n      );\r\n    case SerializationTypeCode.String:\r\n      return (props: EditorFieldProps) => <TextField {...props} />;\r\n    case SerializationTypeCode.UInt16:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} precision=\"uint16\" />\r\n      );\r\n    case SerializationTypeCode.UInt32:\r\n      return (props: EditorFieldProps) => (\r\n        <NumericField {...props} precision=\"uint32\" />\r\n      );\r\n    case SerializationTypeCode.UInt64:\r\n      return () => <Text intent={Intent.Dangerous}>TODO UInt64</Text>;\r\n    case SerializationTypeCode.UserDefined:\r\n      return (props: EditorFieldProps) => (\r\n        <SaveStructureLink intent={Intent.Primary} path={props.path}>\r\n          [{typeInfo.templateName || \"Edit Object\"}]\r\n        </SaveStructureLink>\r\n      );\r\n    case SerializationTypeCode.Vector2:\r\n      return Vector2Field;\r\n    case SerializationTypeCode.Vector2I:\r\n      return Vector2IField;\r\n    case SerializationTypeCode.Vector3:\r\n      return Vector3Field;\r\n    default:\r\n      return handleUnknownType(code);\r\n  }\r\n}\r\n\r\nfunction handleUnknownType(type: never): never {\r\n  throw new Error(`Type code \"${type}\" is unknown.`);\r\n}\r\n","const Keys = {\r\n  Enter: \"Enter\",\r\n  Esc: \"Escape\"\r\n};\r\n\r\nexport default Keys;\r\n","import EditModeCondition from \"./EditModeCondition\";\r\nexport default EditModeCondition;\r\n","import { themeGet } from \"styled-system\";\r\n\r\nimport { ThemeProps } from \"../styled\";\r\n\r\nexport const enum Border {\r\n  None,\r\n  Normal,\r\n  Thick\r\n}\r\n\r\nexport const borders = [0, \"1px solid\", \"2px solid\"];\r\n\r\nexport function getThemeBorder(border: Border): (props: ThemeProps) => string {\r\n  return themeGet(\"borders.\" + border, \"borders.\" + Border.Normal);\r\n}\r\n","import { themeGet } from \"styled-system\";\r\n\r\nimport { Intent } from \"../intent\";\r\nimport { ThemeProps } from \"../styled\";\r\n\r\nconst intentColors: Record<Intent, string> = {\r\n  default: \"#86BBD8\",\r\n  primary: \"#FFB238\",\r\n  secondary: \"#658E27\",\r\n  dangerous: \"#F34213\",\r\n  hint: \"#86BBD8\"\r\n};\r\n\r\nconst intentContrastColors: Record<Intent, string> = {\r\n  default: \"black\",\r\n  primary: \"black\",\r\n  secondary: \"black\",\r\n  dangerous: \"white\",\r\n  hint: \"black\"\r\n};\r\n\r\nconst backgroundColors = {\r\n  default: \"#313a57\", //\"#3A435E\",\r\n  navbar: \"#355d95\", //\"#313E50\",\r\n  panel: \"#36444f\" //\"#455561\",\r\n};\r\n\r\nexport enum Color {\r\n  DefaultIntent = \"intent.default\",\r\n  PrimaryIntent = \"intent.primary\",\r\n  SecondaryIntent = \"intent.secondary\",\r\n  DangerousIntent = \"intent.dangerous\",\r\n  HintIntent = \"intent.hint\",\r\n\r\n  DefaultIntentContrast = \"intent.contrast.default\",\r\n  PrimaryIntentContrast = \"intent.contrast.primary\",\r\n  SecondaryIntentContrast = \"intent.contrast.secondary\",\r\n  DangerousIntentContrast = \"intent.contrast.dangerous\",\r\n  HintIntentContrast = \"intent.contrast.hint\",\r\n\r\n  DefaultBackground = \"bg.default\",\r\n  NavbarBackground = \"bg.navbar\",\r\n  PanelBackground = \"bg.panel\",\r\n\r\n  DefaultSeparator = \"separator\"\r\n}\r\nexport namespace Color {\r\n  export function fromIntent(intent: Intent, contrast?: boolean) {\r\n    switch (intent) {\r\n      default:\r\n        return contrast ? Color.DefaultIntentContrast : Color.DefaultIntent;\r\n      case Intent.Primary:\r\n        return contrast ? Color.PrimaryIntentContrast : Color.PrimaryIntent;\r\n      case Intent.Secondary:\r\n        return contrast ? Color.SecondaryIntentContrast : Color.SecondaryIntent;\r\n      case Intent.Dangerous:\r\n        return contrast ? Color.DangerousIntentContrast : Color.DangerousIntent;\r\n      case Intent.Hint:\r\n        return contrast ? Color.HintIntentContrast : Color.HintIntent;\r\n    }\r\n  }\r\n}\r\n\r\nexport const colors = {\r\n  intent: {\r\n    ...intentColors,\r\n    contrast: intentContrastColors\r\n  },\r\n  bg: backgroundColors,\r\n\r\n  separator: \"#6C6F7F\"\r\n};\r\n\r\nexport function getThemeColor(color: Color): (props: ThemeProps) => string {\r\n  return themeGet(\"colors.\" + color, \"colors.\" + Color.DefaultIntent);\r\n}\r\n","import { themeGet } from \"styled-system\";\r\n\r\nimport { ThemeProps } from \"../styled\";\r\n\r\nexport const enum Radius {\r\n  None = 0,\r\n\r\n  Small = 1,\r\n  Button = 1,\r\n\r\n  Medium = 2,\r\n  Large = 3\r\n}\r\n\r\nexport const radii = [0, 2, 4, 8];\r\n\r\nexport function getThemeRadius(radius: Radius): (props: ThemeProps) => string {\r\n  return themeGet(\"radii.\" + radius, \"radii.\" + Radius.None);\r\n}\r\n","import { themeGet } from \"styled-system\";\r\n\r\nimport { ThemeProps } from \"../styled\";\r\n\r\nexport const enum Space {\r\n  None,\r\n  Small,\r\n  Medium,\r\n  Large\r\n}\r\n\r\nexport const space = [0, 4, 8, 12];\r\n\r\nexport function getThemeSpace(space: Space): (props: ThemeProps) => string {\r\n  return themeGet(\"space.\" + space, \"space.\" + Space.None);\r\n}\r\n","import { css } from \"../styled\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { Intent } from \"../intent\";\r\n\r\nimport { Color, getThemeColor } from \"../theme\";\r\n\r\nexport interface IntentFillProps {\r\n  intent?: Intent;\r\n}\r\n\r\nconst intentFillOf = (intent: Intent) => css`\r\n  color: ${getThemeColor(Color.fromIntent(intent, true))};\r\n  background-color: ${getThemeColor(Color.fromIntent(intent))};\r\n`;\r\n\r\nconst intentFillFromProps = css<IntentFillProps>`\r\n  ${props => (props.intent ? intentFillOf(props.intent) : undefined)};\r\n`;\r\n\r\nexport const intentFill = attachProps(intentFillFromProps, {\r\n  of: intentFillOf\r\n});\r\n","import * as CSS from \"csstype\";\r\n\r\nimport {\r\n  FontSizeProps,\r\n  FontWeightProps,\r\n  fontSize,\r\n  fontWeight,\r\n  style\r\n} from \"styled-system\";\r\n\r\nimport { css } from \"../styled\";\r\n\r\nimport { IntentColorProps, intentColor } from \"./intent-color\";\r\n\r\nexport interface WordWrapProps {\r\n  wordWrap?: CSS.WordWrapProperty;\r\n}\r\nexport const wordWrap = style({\r\n  prop: \"wordWrap\",\r\n  cssProperty: \"word-wrap\"\r\n});\r\n\r\nexport interface WordBreakProps {\r\n  wordBreak?: CSS.WordBreakProperty;\r\n}\r\nexport const wordBreak = style({\r\n  prop: \"wordBreak\",\r\n  cssProperty: \"word-break\"\r\n});\r\n\r\nexport interface WhitespaceProps {\r\n  whiteSpace?: CSS.WhiteSpaceProperty;\r\n}\r\nexport const whiteSpace = style({\r\n  prop: \"whiteSpace\",\r\n  cssProperty: \"white-space\"\r\n});\r\n\r\nexport type TextProps = IntentColorProps &\r\n  FontSizeProps &\r\n  FontWeightProps &\r\n  WordWrapProps &\r\n  WordBreakProps &\r\n  WhitespaceProps;\r\n\r\nexport const text = css<TextProps>`\r\n  ${intentColor};\r\n  ${fontSize};\r\n  ${fontWeight};\r\n  ${wordWrap};\r\n  ${wordBreak};\r\n  ${whiteSpace};\r\n`;\r\n","import { Action } from \"redux\";\r\nimport { GameObjectBehavior, BehaviorName } from \"oni-save-parser\";\r\n\r\nexport const ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM =\r\n  \"oni-save/current-object/behaviors/modify-array/insert-item\";\r\nexport function insertCurrentObjectBehaviorArrayValue<\r\n  T extends GameObjectBehavior\r\n>(behaviorName: BehaviorName<T>, path: string[], value: any, index?: number) {\r\n  return {\r\n    type: ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM as typeof ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM,\r\n    payload: { behaviorName, path, value, index }\r\n  };\r\n}\r\nexport type InsertCurrentObjectBehaviorArrayValueAction = ReturnType<\r\n  typeof insertCurrentObjectBehaviorArrayValue\r\n>;\r\n\r\nexport const ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM =\r\n  \"oni-save/current-object/behaviors/modify-array/remove-item\";\r\nexport function removeCurrentObjectBehaviorArrayValue<\r\n  T extends GameObjectBehavior\r\n>(behaviorName: BehaviorName<T>, path: string[], value: any) {\r\n  return {\r\n    type: ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM as typeof ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM,\r\n    payload: { behaviorName, path, value }\r\n  };\r\n}\r\nexport type RemoveCurrentObjectBehaviorArrayValueAction<\r\n  T extends GameObjectBehavior = GameObjectBehavior\r\n> = ReturnType<typeof removeCurrentObjectBehaviorArrayValue>;\r\n\r\nexport const ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX =\r\n  \"oni-save/current-object/behaviors/modify-array/remove-index\";\r\nexport function removeCurrentObjectBehaviorArrayIndex<\r\n  T extends GameObjectBehavior\r\n>(behaviorName: BehaviorName<T>, path: string[], index: number) {\r\n  return {\r\n    type: ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX as typeof ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX,\r\n    payload: { behaviorName, path, index }\r\n  };\r\n}\r\nexport type RemoveCurrentObjectBehaviorArrayValueIndex<\r\n  T extends GameObjectBehavior = GameObjectBehavior\r\n> = ReturnType<typeof removeCurrentObjectBehaviorArrayIndex>;\r\n\r\nexport type CurrentObjectBehaviorArrayAction =\r\n  | InsertCurrentObjectBehaviorArrayValueAction\r\n  | RemoveCurrentObjectBehaviorArrayValueAction\r\n  | RemoveCurrentObjectBehaviorArrayValueIndex;\r\n\r\nexport function isCurrentObjectBehaviorArrayAction(\r\n  action: Action\r\n): action is CurrentObjectBehaviorArrayAction {\r\n  switch (action.type) {\r\n    case ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM:\r\n    case ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM:\r\n    case ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX:\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n","import produce from \"immer\";\r\n\r\nimport { get } from \"lodash-es\";\r\n\r\nimport { GameObject } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getSelectedGameObjectPath } from \"@/selectors/game-object\";\r\n\r\nexport function produceFromGameObject(\r\n  state: AppState,\r\n  producer: (gameObject: GameObject) => void\r\n): AppState {\r\n  if (state.loadingState !== \"ready\") {\r\n    return state;\r\n  }\r\n\r\n  const path = getSelectedGameObjectPath(state);\r\n  if (!path) {\r\n    return state;\r\n  }\r\n\r\n  return produce(state, state => {\r\n    const gameObject: GameObject = get(state.oniSave, path);\r\n    if (!gameObject) {\r\n      return;\r\n    }\r\n\r\n    return producer(gameObject);\r\n  });\r\n}\r\n","import { AccessoryType } from \"oni-save-parser\";\r\n\r\nexport const ACTION_SET_ACCESSORY = \"behaviors/accessorizer/set-accessory\";\r\nexport const setAccessory = (\r\n  accessoryType: AccessoryType,\r\n  accessoryName: string | null\r\n) => ({\r\n  type: ACTION_SET_ACCESSORY as typeof ACTION_SET_ACCESSORY,\r\n  payload: { accessoryType, accessoryName }\r\n});\r\nexport type SetAccessoryAction = ReturnType<typeof setAccessory>;\r\n","import { HashedString } from \"oni-save-parser\";\r\n\r\nexport const ACTION_PRIMARY_ELEMENT_SET_DISEASE =\r\n  \"oni-save/behaviors/primary-element/set-disease\";\r\nexport const setPrimaryElementDisease = (\r\n  diseaseId: HashedString,\r\n  diseaseCount: number\r\n) => ({\r\n  type: ACTION_PRIMARY_ELEMENT_SET_DISEASE as typeof ACTION_PRIMARY_ELEMENT_SET_DISEASE,\r\n  payload: { diseaseId, diseaseCount }\r\n});\r\nexport type SetPrimaryElementDiseaseAction = ReturnType<\r\n  typeof setPrimaryElementDisease\r\n>;\r\n","import { HealthState } from \"oni-save-parser\";\r\n\r\nexport const ACTION_HEALTH_SET_STATE = \"oni-save/behaviors/health/set-state\";\r\nexport const setHealthStatus = (state: HealthState) => ({\r\n  type: ACTION_HEALTH_SET_STATE as typeof ACTION_HEALTH_SET_STATE,\r\n  payload: state\r\n});\r\nexport type SetHealthStateAction = ReturnType<typeof setHealthStatus>;\r\n","import { MinionGender } from \"oni-save-parser\";\r\n\r\nexport const ACTION_MINION_IDENTITY_SET_GENDER =\r\n  \"oni-save/behaviors/minion-identity/set-gender\";\r\nexport const setIdentityGender = (gender: MinionGender) => ({\r\n  type: ACTION_MINION_IDENTITY_SET_GENDER as typeof ACTION_MINION_IDENTITY_SET_GENDER,\r\n  payload: gender\r\n});\r\nexport type SetMinionIdentityGenderAction = ReturnType<\r\n  typeof setIdentityGender\r\n>;\r\n","export const ACTION_MINION_MODIFIER_SET_VALUE =\r\n  \"oni-save/behaviors/minion-modifier/set-value\";\r\nexport const setModifierValue = (amountType: string, value: number) => ({\r\n  type: ACTION_MINION_MODIFIER_SET_VALUE as typeof ACTION_MINION_MODIFIER_SET_VALUE,\r\n  payload: { amountType, value }\r\n});\r\nexport type SetMinionModifierValueAction = ReturnType<typeof setModifierValue>;\r\n","export const ACTION_TRAITS_SET = \"oni-save/behaviors/ai-traits/set-trait\";\r\nexport const setTrait = (traitId: string, isSet: boolean) => ({\r\n  type: ACTION_TRAITS_SET as typeof ACTION_TRAITS_SET,\r\n  payload: { traitId, isSet }\r\n});\r\nexport type SetTraitAction = ReturnType<typeof setTrait>;\r\n","import { Vector3 } from \"oni-save-parser\";\r\n\r\nexport const ACTION_GAME_OBJECT_SET_SCALE = \"game-object/set-scale\";\r\nexport const setGameObjectScale = (scale: Vector3) => ({\r\n  type: ACTION_GAME_OBJECT_SET_SCALE as typeof ACTION_GAME_OBJECT_SET_SCALE,\r\n  payload: scale\r\n});\r\nexport type SetGameObjectScaleAction = ReturnType<typeof setGameObjectScale>;\r\n","export const ACTION_DISMISS_ERROR = \"dismiss-error\";\r\nexport const dismissError = () => ({\r\n  type: ACTION_DISMISS_ERROR as typeof ACTION_DISMISS_ERROR\r\n});\r\nexport type DismissErrorAction = ReturnType<typeof dismissError>;\r\n","import { EditMode } from \"@/services/save-structure\";\r\n\r\nexport const ACTION_SET_EDITMODE = \"editor/set-editmode\";\r\nexport const setEditMode = (editMode: EditMode) => ({\r\n  type: ACTION_SET_EDITMODE as typeof ACTION_SET_EDITMODE,\r\n  payload: editMode\r\n});\r\nexport type SetEditModeAction = ReturnType<typeof setEditMode>;\r\n","export const ACTION_ONISAVE_LOAD = \"oni-save/load\";\r\nexport const loadOniSave = (file: File) => ({\r\n  type: ACTION_ONISAVE_LOAD as typeof ACTION_ONISAVE_LOAD,\r\n  payload: file\r\n});\r\nexport type LoadOniSaveAction = ReturnType<typeof loadOniSave>;\r\n","export * from \"./worker-instance\";\r\n","export const ACTION_ONISAVE_SAVE = \"oni-save/save\";\r\nexport const saveOniSave = (fileName: string) => ({\r\n  type: ACTION_ONISAVE_SAVE as typeof ACTION_ONISAVE_SAVE,\r\n  payload: fileName\r\n});\r\nexport type SaveOniSaveAction = ReturnType<typeof saveOniSave>;\r\n","import { AppState } from \"@/state\";\r\n\r\nconst loadingStateSelector = (state: AppState) => state.loadingState;\r\nexport default loadingStateSelector;\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n    ? \"mac\"\r\n    : OS_LINUX.test(osPlatform)\r\n      ? \"linux\"\r\n      : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n","import * as React from \"react\";\r\n\r\nimport styled, {\r\n  Space,\r\n  FontSize,\r\n  Radius,\r\n  getThemeRadius,\r\n  getThemeSpace\r\n} from \"@/style\";\r\n\r\nimport { Intent, getTheme, intentFill } from \"@/style\";\r\n\r\nexport interface ButtonProps {\r\n  intent?: Intent;\r\n  onClick?(e: React.MouseEvent<HTMLDivElement>): void;\r\n}\r\n\r\nconst Button = styled<ButtonProps, \"button\">(\"button\")`\r\n  ${intentFill};\r\n  border: none;\r\n  border-radius: ${getThemeRadius(Radius.Button)}px;\r\n  margin: ${getThemeSpace(Space.Small)}px;\r\n  font-size: ${props => getTheme(props).fontSizes[FontSize.Button]}px;\r\n`;\r\nButton.displayName = \"Button\";\r\nButton.defaultProps = {\r\n  intent: Intent.Default\r\n};\r\n\r\nexport default Button;\r\n","import { GameObject, KPrefabIDBehavior, getBehavior } from \"oni-save-parser\";\r\n\r\nimport { SaveStructureDef } from \"../../types\";\r\n\r\nimport behavior from \"../behaviors\";\r\n\r\nexport const defaultGameObject: SaveStructureDef<GameObject> = {\r\n  $uiPathName(obj: GameObject) {\r\n    const idBehavior = getBehavior(obj, KPrefabIDBehavior);\r\n    const id =\r\n      (idBehavior &&\r\n        idBehavior.templateData &&\r\n        idBehavior.templateData.InstanceID) ||\r\n      \"[malformed]\";\r\n    const pos = `(${obj.position.x.toFixed(0)}, ${obj.position.y.toFixed(0)})`;\r\n    return `#${id} ${pos}`;\r\n  },\r\n\r\n  $uiChildren(gameObject: GameObject) {\r\n    const { behaviors } = gameObject;\r\n    if (!behaviors) {\r\n      return [];\r\n    }\r\n\r\n    return behaviors.map((_, i) => [\"behaviors\", `${i}`]);\r\n  },\r\n\r\n  $editor: \"game-object-default\",\r\n\r\n  behaviors: {\r\n    $uiPathName: false,\r\n    \"*\": behavior\r\n  }\r\n};\r\n","import Portrait from \"./Portrait\";\r\nexport default Portrait;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport styled from \"@/style\";\r\n\r\nimport { InputStyleProps, inputStyle } from \"@/components/Input\";\r\n\r\nconst SelectElement = styled<InputStyleProps, \"select\">(\"select\")`\r\n  ${inputStyle};\r\n`;\r\n\r\nexport interface Option<T extends string | number = string | number> {\r\n  label?: string;\r\n  value: T;\r\n}\r\nexport interface SelectProps<T extends string | number = string | number>\r\n  extends InputStyleProps {\r\n  options: Option<T>[];\r\n  value: T;\r\n  onChange(value: T): void;\r\n}\r\n\r\nexport default class Select extends React.Component<SelectProps> {\r\n  render() {\r\n    const { options, value, children, onChange, ...rest } = this.props;\r\n    return (\r\n      <SelectElement {...rest} value={value} onChange={this._onChange}>\r\n        {options.map(x => (\r\n          <option key={x.value} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </SelectElement>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    const { onChange } = this.props;\r\n    const value = e.target.value;\r\n    onChange(value);\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Keys from \"@/keys\";\r\n\r\nimport Input from \"@/components/Input\";\r\n\r\nexport interface TextInputProps {\r\n  value: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  onCommit(value: string): void;\r\n}\r\n\r\ntype Props = TextInputProps;\r\ninterface State {\r\n  editValue: string | null;\r\n  isValid: boolean;\r\n}\r\nexport default class TextInput extends React.Component<Props, State> {\r\n  private _inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editValue: null,\r\n      isValid: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { value, minLength, maxLength } = this.props;\r\n    const { editValue } = this.state;\r\n\r\n    const currentValue = editValue != null ? editValue : value;\r\n\r\n    return (\r\n      <Input\r\n        innerRef={this._inputRef}\r\n        type=\"text\"\r\n        minLength={minLength}\r\n        maxLength={maxLength}\r\n        value={currentValue}\r\n        onChange={this._onValueChange}\r\n        onKeyPress={this._onInputKeyPress}\r\n        onBlur={this._onInputBlur}\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onValueChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const value = e.target.value;\r\n    this._setEditValue(value);\r\n  }\r\n\r\n  @autobind()\r\n  private _onInputKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    if (e.key === Keys.Enter) {\r\n      this._commitEdit();\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onInputBlur() {\r\n    this._commitEdit();\r\n  }\r\n\r\n  private _setEditValue(value: string) {\r\n    const validation = this._validate(value);\r\n    const isValid = !validation;\r\n\r\n    if (this._inputRef.current) {\r\n      this._inputRef.current.setCustomValidity(validation || \"\");\r\n    }\r\n\r\n    this.setState({\r\n      editValue: value,\r\n      isValid\r\n    });\r\n  }\r\n\r\n  private _commitEdit() {\r\n    const { editValue, isValid } = this.state;\r\n    const { onCommit } = this.props;\r\n\r\n    this.setState({\r\n      editValue: null\r\n    });\r\n\r\n    if (!editValue || !isValid) {\r\n      return;\r\n    }\r\n\r\n    onCommit(editValue);\r\n  }\r\n\r\n  private _validate(value: string): string | null {\r\n    const { minLength, maxLength } = this.props;\r\n    if (minLength != null && (!value || value.length < minLength)) {\r\n      return `Value must be at least ${minLength} characters.`;\r\n    }\r\n\r\n    if (maxLength != null && value.length > maxLength) {\r\n      return `Value must be less than ${maxLength} characters.`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import ReactTable, { TableProps, Column, RowRenderProps } from \"react-table\";\r\nimport { WidthProps, HeightProps, width, height } from \"styled-system\";\r\n\r\nimport styled, {\r\n  Color,\r\n  Intent,\r\n  ThemeProps,\r\n  intent,\r\n  getThemeColor\r\n} from \"@/style\";\r\n\r\nimport { inputStyle } from \"@/components/Input\";\r\n\r\n// TODO Use https://reactabular.js.org/#/.\r\n\r\nimport \"react-table/react-table.css\";\r\n\r\nexport interface DataTableStyleProps extends WidthProps, HeightProps {}\r\n\r\nfunction encodedPrimaryColor(props: ThemeProps): any {\r\n  const color = getThemeColor(Color.fromIntent(Intent.Primary))(props);\r\n  const encoded = encodeURIComponent(color);\r\n  return encoded;\r\n}\r\n\r\nconst DataTable = styled<Partial<TableProps> & DataTableStyleProps>(ReactTable)`\r\n  &.ReactTable {\r\n    ${width};\r\n    ${height};\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  &.ReactTable .rt-thead.-filters input,\r\n  &.ReactTable .rt-thead.-filters select {\r\n    border-radius: 0;\r\n    ${inputStyle};\r\n  }\r\n\r\n  &.ReactTable .rt-thead {\r\n    ${intent.of(Intent.Secondary)};\r\n    background-color: ${getThemeColor(Color.PanelBackground)};\r\n    font-weight: bold;\r\n  }\r\n\r\n  &.ReactTable .rt-thead .rt-th.-sort-asc,\r\n  &.ReactTable .rt-thead .rt-th.-sort-desc {\r\n    ${intent.of(Intent.Primary)};\r\n  }\r\n\r\n  &.ReactTable .rt-thead .rt-th.-sort-asc {\r\n    box-shadow: none;\r\n    background: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='${encodedPrimaryColor}'><polygon points='0,50 100,50 50,0'/></svg>\")\r\n      no-repeat;\r\n    background-size: 12px;\r\n    background-position: calc(100% - 20px) center;\r\n  }\r\n\r\n  &.ReactTable .rt-thead .rt-th.-sort-desc {\r\n    box-shadow: none;\r\n    background: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='${encodedPrimaryColor}'><polygon points='0,0 100,0 50,50'/></svg>\")\r\n      no-repeat;\r\n    background-size: 12px;\r\n    background-position: calc(100% - 20px) center;\r\n  }\r\n\r\n  &.ReactTable .rt-td {\r\n    ${intent.of(Intent.Default)};\r\n  }\r\n`;\r\n\r\nDataTable.displayName = \"DataTable\";\r\nDataTable.defaultProps = {};\r\n\r\nexport type DataTableProps = TableProps & DataTableStyleProps;\r\nexport type DataTableColumn = Column;\r\nexport type DataTableRow<T = any> = Omit<RowRenderProps, \"value\"> & {\r\n  value: T;\r\n};\r\n\r\nexport default DataTable;\r\n","import * as React from \"react\";\r\n\r\nimport { FontSize, Space } from \"@/style\";\r\n\r\nimport Box from \"@/components/Box\";\r\nimport Text from \"@/components/Text\";\r\n\r\nconst EditorHeader: React.SFC = ({ children }) => (\r\n  <Box width=\"100%\" alignSelf=\"baseline\" pb={Space.Small}>\r\n    <Text fontSize={FontSize.Heading} fontWeight=\"bold\">\r\n      {children}\r\n    </Text>\r\n  </Box>\r\n);\r\nEditorHeader.displayName = \"EditorHeader\";\r\nexport default EditorHeader;\r\n","import { AppState } from \"@/state\";\r\n\r\nconst editModeSelector = (state: AppState) => state.editMode;\r\nexport default editModeSelector;\r\n","import GameObjectHeader from \"./GameObjectHeader\";\r\nexport default GameObjectHeader;\r\n","import * as React from \"react\";\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\nimport CheckInput from \"@/components/CheckInput\";\r\n\r\nexport interface InputCompatibleProps<T = any> {\r\n  value: T;\r\n  onCommit(value: any): void;\r\n}\r\nexport interface NullableInputProps<T = any> {\r\n  className?: string;\r\n  renderInput(props: InputCompatibleProps<T>): React.ReactNode;\r\n  renderNull?: React.ReactNode | (() => React.ReactNode);\r\n  value: T | null;\r\n  defaultValue: T | (() => T);\r\n  onCommit(value: T | null): void;\r\n}\r\ntype Props = NullableInputProps;\r\ninterface State {\r\n  isNotNull: boolean;\r\n}\r\nexport default class NullableInput extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      isNotNull: this.props.value !== null\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(props: Props) {\r\n    let isNotNull = props.value !== null;\r\n    if (isNotNull !== this.state.isNotNull) {\r\n      this.setState({\r\n        isNotNull\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isNotNull } = this.state;\r\n    const { className, renderNull } = this.props;\r\n\r\n    let element: React.ReactNode | null = null;\r\n    if (isNotNull) {\r\n      const { renderInput, onCommit, defaultValue } = this.props;\r\n      const value = this.props.value || resolve(defaultValue);\r\n      element = renderInput({ value, onCommit });\r\n    } else if (renderNull) {\r\n      element = resolve(renderNull);\r\n    }\r\n\r\n    return (\r\n      <Flex className={className} direction=\"row\">\r\n        <CheckInput value={isNotNull} onCommit={this._onNotNullChecked} />\r\n        {element && (\r\n          <Flex.Item grow shrink>\r\n            {element}\r\n          </Flex.Item>\r\n        )}\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onNotNullChecked(value: boolean) {\r\n    const { defaultValue, onCommit } = this.props;\r\n    this.setState({\r\n      isNotNull: value\r\n    });\r\n    if (value) {\r\n      onCommit(defaultValue);\r\n    } else {\r\n      onCommit(null);\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolve<T>(value: T | (() => T)): T {\r\n  if (typeof value === \"function\") {\r\n    return value();\r\n  }\r\n  return value;\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport Select, { SelectProps, Option } from \"@/components/Select\";\r\n\r\nexport type SelectInputProps = Omit<\r\n  SelectProps,\r\n  \"value\" | \"options\" | \"onChange\"\r\n> & {\r\n  value: any;\r\n  options: Option<any>[];\r\n  onCommit(value: any): void;\r\n};\r\n\r\ntype Props = SelectInputProps;\r\nexport default class SelectInput extends React.Component<Props> {\r\n  static defaultProps = {\r\n    clearable: false\r\n  };\r\n\r\n  render() {\r\n    const { value, options, onCommit, ...props } = this.props;\r\n\r\n    return (\r\n      <Select {...props} value={value} options={options} onChange={onCommit} />\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./style\";\r\n\r\nimport Root from \"./root\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nif (rootEl) {\r\n  Modal.setAppElement(rootEl);\r\n  ReactDOM.render(<Root />, rootEl);\r\n}\r\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\r\\n  font-family: \\\"Titillium Web\\\", sans-serif;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody,\\r\\n#root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","export * from \"./border\";\r\nexport * from \"./intent-border\";\r\nexport * from \"./intent-color\";\r\nexport * from \"./intent-fill\";\r\nexport * from \"./intent\";\r\nexport * from \"./link\";\r\nexport * from \"./text\";\r\n","import { css } from \"../styled\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { Border, Color, Radius } from \"../theme\";\r\n\r\nimport { getThemeBorder, getThemeRadius, getThemeColor } from \"../theme\";\r\n\r\nexport interface BorderProps {\r\n  border?: Border;\r\n  borderColor?: Color;\r\n  borderRadius?: Radius;\r\n}\r\n\r\nconst borderOf = (type: Border, color: Color, radius?: Radius) => css`\r\n  border: ${getThemeBorder(type)};\r\n  border-color: ${getThemeColor(color)};\r\n  ${radius ? `border-radius: ${getThemeRadius(radius)}` : undefined};\r\n`;\r\n\r\nconst borderFromProps = css<BorderProps>`\r\n  ${props =>\r\n    props.border != null\r\n      ? `border: ${getThemeBorder(props.border)(props)}`\r\n      : undefined};\r\n\r\n  ${props =>\r\n    props.borderColor != null\r\n      ? `border-color: ${getThemeColor(props.borderColor)(props)}`\r\n      : undefined};\r\n\r\n  ${props =>\r\n    props.borderRadius != null\r\n      ? `border-radius: ${getThemeRadius(props.borderRadius)(props)}px`\r\n      : undefined};\r\n`;\r\n\r\nexport const border = attachProps(borderFromProps, {\r\n  of: borderOf\r\n});\r\n","import { themeGet } from \"styled-system\";\r\n\r\nimport { borders } from \"./borders\";\r\nimport { colors } from \"./colors\";\r\nimport { fontSizes } from \"./font-sizes\";\r\nimport { radii } from \"./radii\";\r\nimport { space } from \"./space\";\r\nimport { ThemeProps } from \"@/style/styled\";\r\n\r\nexport const theme = {\r\n  borders,\r\n  colors,\r\n  fontSizes,\r\n  radii,\r\n  space\r\n};\r\n\r\nexport type Theme = typeof theme;\r\n\r\nexport function getTheme(props: any): Theme {\r\n  return props.theme || theme;\r\n}\r\n\r\nexport function getThemeProp<T>(\r\n  getter: ((theme: Theme) => T) | string,\r\n  defaultValue?: T\r\n): (props: ThemeProps) => string | undefined {\r\n  return (props: ThemeProps) => {\r\n    if (typeof getter === \"string\") {\r\n      return themeGet(getter, defaultValue as any);\r\n    }\r\n\r\n    const val = getter(getTheme(props));\r\n    if (val === undefined) {\r\n      return defaultValue;\r\n    }\r\n    return val;\r\n  };\r\n}\r\n","export const enum FontSize {\r\n  Hint = 0,\r\n  Small = 0,\r\n\r\n  Button = 1,\r\n\r\n  Default = 2,\r\n  HeadingMinor = 3,\r\n  Heading = 4\r\n}\r\nexport const fontSizes = [12, 14, 16, 20, 24, 32, 48, 64, 96, 128];\r\n","import { css } from \"../styled\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { Intent } from \"../intent\";\r\n\r\nimport {\r\n  Border,\r\n  Color,\r\n  Radius,\r\n  getThemeBorder,\r\n  getThemeRadius,\r\n  getThemeColor\r\n} from \"../theme\";\r\n\r\nexport interface IntentBorderProps {\r\n  intent?: Intent;\r\n}\r\n\r\nconst borderOf = (intent: Intent) => css`\r\n  border: ${getThemeBorder(Border.Normal)};\r\n  border-color: ${getThemeColor(Color.fromIntent(intent))};\r\n  ${intent !== Intent.Default\r\n    ? `border-radius: ${getThemeRadius(Radius.Medium)}`\r\n    : undefined};\r\n`;\r\n\r\nconst borderFromProps = css<IntentBorderProps>`\r\n  ${props => (props.intent ? borderOf(props.intent) : undefined)};\r\n`;\r\n\r\nexport const intentBorder = attachProps(borderFromProps, {\r\n  of: borderOf\r\n});\r\n","import { css } from \"../styled\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { Intent } from \"../intent\";\r\n\r\nimport { intentColor, IntentColorProps } from \"./intent-color\";\r\nimport { intentFill } from \"./intent-fill\";\r\n\r\nexport interface IntentProps extends IntentColorProps {\r\n  intentIsBg?: boolean;\r\n}\r\n\r\nconst intentOf = (intent: Intent, isBg: boolean = false) => css`\r\n  ${isBg ? intentFill.of(intent) : intentColor.of(intent)};\r\n`;\r\n\r\nconst intentFromProps = css<IntentProps>`\r\n  ${props => {\r\n    if (props.intent == null) {\r\n      return undefined;\r\n    }\r\n    return props.intentIsBg ? intentFill : intentColor;\r\n  }};\r\n`;\r\n\r\nexport const intent = attachProps(intentFromProps, {\r\n  of: intentOf\r\n});\r\n","import { TextProps, text } from \"./text\";\r\nimport { css } from \"../styled\";\r\n\r\nexport interface LinkProps extends TextProps {}\r\n\r\nexport const link = css<LinkProps>`\r\n  ${text};\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`;\r\n","import * as React from \"react\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { ThemeProvider, theme } from \"@/style\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst Root: React.SFC = () => (\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default hot(module)(Root);\r\n","import { createStore } from \"./store\";\r\n\r\nconst store = createStore();\r\nexport default store;\r\n","import {\r\n  compose,\r\n  createStore as createReduxStore,\r\n  applyMiddleware\r\n} from \"redux\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"@/reducer\";\r\nimport saga from \"@/saga\";\r\n\r\nimport { actionSanitizer, stateSanitizer } from \"./devtool-sanitizer\";\r\n\r\nexport function createStore() {\r\n  const composeEnhancers =\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        actionSanitizer,\r\n        stateSanitizer\r\n      })) ||\r\n    compose;\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createReduxStore(\r\n    reducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  );\r\n  sagaMiddleware.run(saga);\r\n  return store;\r\n}\r\n","import { Reducer } from \"redux\";\r\nimport reduceReducers from \"reduce-reducers\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport behaviorsReducer from \"./behaviors\";\r\nimport gameObjectReducer from \"./game-object\";\r\n\r\nimport dismissErrorReducer from \"./dismiss-error\";\r\nimport modifyOniSave from \"./modify-onisave\";\r\nimport parseProgressReducer from \"./onisave-parse-progress\";\r\nimport receiveOniSaveReducer from \"./receive-onisave\";\r\nimport selectPathReducer from \"./select-path\";\r\nimport setEditModeReducer from \"./set-editmode\";\r\n\r\nconst reducers: Reducer<AppState, any>[] = [\r\n  behaviorsReducer,\r\n  gameObjectReducer,\r\n  dismissErrorReducer,\r\n  modifyOniSave,\r\n  parseProgressReducer,\r\n  receiveOniSaveReducer,\r\n  selectPathReducer,\r\n  setEditModeReducer\r\n];\r\n\r\nexport default reduceReducers<AppState, any>(...reducers);\r\n","import reduceReducers from \"reduce-reducers\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport modifyCurrentObjectBehaviorArray from \"./modify-currentobject-behavior-array\";\r\nimport setAccessoryReducer from \"./set-accessory\";\r\nimport setCurrentObjectBehaviorValueReducer from \"./set-currentobject-behavior-value\";\r\nimport setElementDiseaseReducer from \"./set-element-disease\";\r\nimport setHealthStateReducer from \"./set-health-state\";\r\nimport setIdentityGenderReducer from \"./set-identity-gender\";\r\nimport setModifierAmountReducer from \"./set-modifier-amount\";\r\nimport setTraitReducer from \"./set-traits-trait\";\r\n\r\nconst reducers = [\r\n  modifyCurrentObjectBehaviorArray,\r\n  setAccessoryReducer,\r\n  setCurrentObjectBehaviorValueReducer,\r\n  setElementDiseaseReducer,\r\n  setHealthStateReducer,\r\n  setIdentityGenderReducer,\r\n  setModifierAmountReducer,\r\n  setTraitReducer\r\n];\r\n\r\nexport default reduceReducers<AppState, any>(...reducers);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { get } from \"lodash-es\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  isCurrentObjectBehaviorArrayAction,\r\n  ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM,\r\n  ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM,\r\n  ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX\r\n} from \"@/actions/behaviors/modify-currentobject-behavior-array\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function modifyCurrentObjectBehaviorArray(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isCurrentObjectBehaviorArrayAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { behaviorName, path } = action.payload;\r\n\r\n  return produceFromBehavior(state, behaviorName, behavior => {\r\n    const array = get(behavior, path) as any[];\r\n    switch (action.type) {\r\n      case ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_INSERT_ITEM: {\r\n        const { value, index } = action.payload;\r\n        if (index != null) {\r\n          array.splice(index, 0, value);\r\n        } else {\r\n          array.push(value);\r\n        }\r\n        return;\r\n      }\r\n      case ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_ITEM: {\r\n        const { value } = action.payload;\r\n        const index = array.indexOf(value);\r\n        if (index >= 0) {\r\n          array.splice(index, 1);\r\n        }\r\n        return;\r\n      }\r\n      case ACTION_CURRENTOBJECT_BEHAVIOR_ARRAY_REMOVE_INDEX: {\r\n        const { index } = action.payload;\r\n        if (index < 0 || index >= array.length) {\r\n          return;\r\n        }\r\n        array.splice(index, 1);\r\n        return;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import {\r\n  AccessorizerBehavior,\r\n  Accessory,\r\n  getIndexOfAccessoryType\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_SET_ACCESSORY,\r\n  SetAccessoryAction\r\n} from \"@/actions/behaviors/set-accessory\";\r\nimport { produceFromBehavior } from \"@/reducer/behaviors/utils\";\r\n\r\nexport default function setAccessoryReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetAccessoryAction\r\n): AppState {\r\n  if (action.type !== ACTION_SET_ACCESSORY) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromBehavior(state, AccessorizerBehavior, behavior => {\r\n    const { accessoryName, accessoryType } = action.payload;\r\n    const { accessories } = behavior.templateData;\r\n\r\n    const accessoryIndex = getIndexOfAccessoryType(accessories, accessoryType);\r\n\r\n    if (accessoryName === null) {\r\n      // Remove\r\n      accessories.splice(accessoryIndex, 1);\r\n      return;\r\n    }\r\n\r\n    const newAccessory = Accessory(accessoryName);\r\n\r\n    if (accessoryIndex === -1) {\r\n      // Add\r\n      accessories.push(newAccessory);\r\n    } else {\r\n      // Replace\r\n      accessories[accessoryIndex] = newAccessory;\r\n    }\r\n  });\r\n}\r\n","import { set } from \"lodash-es\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE,\r\n  SetCurrentObjectBehaviorValueAction\r\n} from \"@/actions/behaviors/set-currentobject-behavior-value\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function setCurrentObjectBehaviorValueReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetCurrentObjectBehaviorValueAction\r\n): AppState {\r\n  if (action.type !== ACTION_CURRENTOBJECT_BEHAVIOR_SET_VALUE) {\r\n    return state;\r\n  }\r\n\r\n  const { behaviorName, path, value } = action.payload;\r\n\r\n  return produceFromBehavior(state, behaviorName, behavior => {\r\n    set(behavior, path, value);\r\n  });\r\n}\r\n","import { PrimaryElementBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_PRIMARY_ELEMENT_SET_DISEASE,\r\n  SetPrimaryElementDiseaseAction\r\n} from \"@/actions/behaviors/set-element-disease\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function setElementDiseaseReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetPrimaryElementDiseaseAction\r\n): AppState {\r\n  if (action.type !== ACTION_PRIMARY_ELEMENT_SET_DISEASE) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromBehavior(state, PrimaryElementBehavior, behavior => {\r\n    const { diseaseId, diseaseCount } = action.payload;\r\n    behavior.templateData.diseaseID = diseaseId;\r\n    behavior.templateData.diseaseCount = diseaseCount;\r\n  });\r\n}\r\n","import { HealthBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_HEALTH_SET_STATE,\r\n  SetHealthStateAction\r\n} from \"@/actions/behaviors/set-health-state\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function setHealthStateReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetHealthStateAction\r\n): AppState {\r\n  if (action.type !== ACTION_HEALTH_SET_STATE) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromBehavior(state, HealthBehavior, behavior => {\r\n    behavior.templateData.State = action.payload;\r\n  });\r\n}\r\n","import { MinionIdentityBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_MINION_IDENTITY_SET_GENDER,\r\n  SetMinionIdentityGenderAction\r\n} from \"@/actions/behaviors/set-identity-gender\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function setIdentityGenderReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetMinionIdentityGenderAction\r\n): AppState {\r\n  if (action.type !== ACTION_MINION_IDENTITY_SET_GENDER) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromBehavior(state, MinionIdentityBehavior, behavior => {\r\n    behavior.templateData.gender = action.payload;\r\n    behavior.templateData.genderStringKey = action.payload;\r\n  });\r\n}\r\n","import { MinionModifiersBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_MINION_MODIFIER_SET_VALUE,\r\n  SetMinionModifierValueAction\r\n} from \"@/actions/behaviors/set-modifier-amount\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function setModifierAmountReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetMinionModifierValueAction\r\n): AppState {\r\n  if (action.type !== ACTION_MINION_MODIFIER_SET_VALUE) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromBehavior(state, MinionModifiersBehavior, behavior => {\r\n    const { amountType, value } = action.payload;\r\n    if (!behavior.extraData) {\r\n      return;\r\n    }\r\n    const amount = behavior.extraData.amounts.find(x => x.name === amountType);\r\n    if (!amount) {\r\n      return;\r\n    }\r\n    amount.value.value = value;\r\n  });\r\n}\r\n","import { AITraitsBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_TRAITS_SET,\r\n  SetTraitAction\r\n} from \"@/actions/behaviors/set-traits-trait\";\r\n\r\nimport { produceFromBehavior } from \"./utils\";\r\n\r\nexport default function setTraitReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetTraitAction\r\n): AppState {\r\n  if (action.type !== ACTION_TRAITS_SET) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromBehavior(state, AITraitsBehavior, behavior => {\r\n    const { traitId, isSet } = action.payload;\r\n    const { TraitIds } = behavior.templateData;\r\n    const index = TraitIds.findIndex(x => x === traitId);\r\n    if (index !== -1) {\r\n      if (!isSet) {\r\n        TraitIds.splice(index, 1);\r\n      }\r\n    } else {\r\n      if (isSet) {\r\n        TraitIds.push(traitId);\r\n      }\r\n    }\r\n  });\r\n}\r\n","import reduceReducers from \"reduce-reducers\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport setGameObjectScaleReducer from \"./set-scale\";\r\n\r\nconst reducers = [setGameObjectScaleReducer];\r\n\r\nexport default reduceReducers<AppState, any>(...reducers);\r\n","import { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_GAME_OBJECT_SET_SCALE,\r\n  SetGameObjectScaleAction\r\n} from \"@/actions/game-object/set-scale\";\r\n\r\nimport { produceFromGameObject } from \"./utils\";\r\n\r\nexport default function setGameObjectScaleReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SetGameObjectScaleAction\r\n): AppState {\r\n  if (action.type !== ACTION_GAME_OBJECT_SET_SCALE) {\r\n    return state;\r\n  }\r\n\r\n  return produceFromGameObject(state, gameObject => {\r\n    const { x, y, z } = action.payload;\r\n    gameObject.scale.x = x;\r\n    gameObject.scale.y = y;\r\n    gameObject.scale.z = z;\r\n  });\r\n}\r\n","import { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_DISMISS_ERROR,\r\n  DismissErrorAction\r\n} from \"@/actions/dismiss-error\";\r\n\r\nexport default function dismissErrorReducer(\r\n  state: AppState = defaultAppState,\r\n  action: DismissErrorAction\r\n): AppState {\r\n  if (action.type !== ACTION_DISMISS_ERROR) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    error: null\r\n  };\r\n}\r\n","import produce from \"immer\";\r\n\r\nimport { set } from \"lodash-es\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_ONISAVE_MODIFY,\r\n  ModifyOniSaveAction\r\n} from \"../actions/modify-onisave\";\r\n\r\nexport default function modifyOniSaveReducer(\r\n  state: AppState = defaultAppState,\r\n  action: ModifyOniSaveAction\r\n): AppState {\r\n  if (action.type !== ACTION_ONISAVE_MODIFY) {\r\n    return state;\r\n  }\r\n\r\n  const { loadingState, oniSave } = state;\r\n  if (loadingState !== \"ready\" || !oniSave) {\r\n    return state;\r\n  }\r\n\r\n  const { path, value } = action.payload;\r\n\r\n  return produce(state, draft => {\r\n    set(draft.oniSave!, path, value);\r\n  });\r\n}\r\n","import { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport {\r\n  ACTION_ONISAVE_PARSE_PROGRESS,\r\n  ParseProgressAction\r\n} from \"@/actions/onisave-parse-progress\";\r\n\r\nexport default function parseProgressReducer(\r\n  state: AppState = defaultAppState,\r\n  action: ParseProgressAction\r\n): AppState {\r\n  if (action.type !== ACTION_ONISAVE_PARSE_PROGRESS) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    loadingProgressMessage: action.payload.message\r\n  };\r\n}\r\n","import {\r\n  ReceiveOniSaveAction,\r\n  ACTION_RECEIVE_ONISAVE_BEGIN,\r\n  ACTION_RECEIVE_ONISAVE_ERROR,\r\n  ACTION_RECEIVE_ONISAVE_SUCCESS\r\n} from \"../actions/receive-onisave\";\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nexport default function receiveOniSaveReducer(\r\n  state: AppState = defaultAppState,\r\n  action: ReceiveOniSaveAction\r\n): AppState {\r\n  switch (action.type) {\r\n    case ACTION_RECEIVE_ONISAVE_BEGIN:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loadingState: action.payload.operation,\r\n        loadingProgressMessage: null,\r\n        selectedPath: [],\r\n        oniSave: action.payload.clearExisting ? null : state.oniSave\r\n      };\r\n    case ACTION_RECEIVE_ONISAVE_ERROR:\r\n      state = {\r\n        ...state,\r\n        loadingState: \"idle\",\r\n        selectedPath: [],\r\n        error: action.payload\r\n      };\r\n      break;\r\n    case ACTION_RECEIVE_ONISAVE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loadingState: \"ready\",\r\n        loadingProgressMessage: null,\r\n        error: null,\r\n        selectedPath: [],\r\n        oniSave: action.payload\r\n      };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport { ACTION_SELECT_PATH, SelectPathAction } from \"@/actions/select-path\";\r\n\r\nexport default function selectPathReducer(\r\n  state: AppState = defaultAppState,\r\n  action: SelectPathAction\r\n): AppState {\r\n  if (action.type !== ACTION_SELECT_PATH) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectedPath: action.payload\r\n  };\r\n}\r\n","import { ACTION_SET_EDITMODE, SetEditModeAction } from \"@/actions/set-editmode\";\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nexport default function setEditMode(\r\n  state: AppState = defaultAppState,\r\n  action: SetEditModeAction\r\n): AppState {\r\n  if (action.type !== ACTION_SET_EDITMODE) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    editMode: action.payload\r\n  };\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport loadOniSaveSaga from \"./load-onisave\";\r\nimport saveOniSaveSaga from \"./save-onisave\";\r\n\r\nexport default function* saga() {\r\n  yield fork(loadOniSaveSaga);\r\n  yield fork(saveOniSaveSaga);\r\n}\r\n","import { eventChannel, END } from \"redux-saga\";\r\nimport { call, put, takeEvery, take } from \"redux-saga/effects\";\r\n\r\nimport { ACTION_ONISAVE_LOAD, LoadOniSaveAction } from \"@/actions/load-onisave\";\r\n\r\nimport {\r\n  receiveOniSaveBegin,\r\n  receiveOniSaveError,\r\n  receiveOniSaveSuccess\r\n} from \"@/actions/receive-onisave\";\r\nimport { parseProgress } from \"@/actions/onisave-parse-progress\";\r\n\r\nimport { parseSave } from \"@/services/save-serializer\";\r\n\r\nexport default function* saveEditorSaga() {\r\n  yield takeEvery(ACTION_ONISAVE_LOAD, handleOniSaveLoad);\r\n}\r\n\r\nfunction* handleOniSaveLoad(action: LoadOniSaveAction) {\r\n  const file = action.payload;\r\n\r\n  yield put(receiveOniSaveBegin(\"loading\", true));\r\n\r\n  const data: ArrayBuffer = yield call(readFile, file);\r\n\r\n  const loadChannel = createLoadChannel(data);\r\n\r\n  while (true) {\r\n    const msg = yield take(loadChannel);\r\n    if (msg.type === \"progress\") {\r\n      yield put(parseProgress(msg.message));\r\n      continue;\r\n    } else if (msg.type === \"success\") {\r\n      yield put(receiveOniSaveSuccess(msg.saveGame));\r\n      return;\r\n    } else if (msg.type === \"error\") {\r\n      yield put(receiveOniSaveError(msg.error));\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLoadChannel(data: ArrayBuffer) {\r\n  return eventChannel(emitter => {\r\n    function onProgress(message: string) {\r\n      emitter({\r\n        type: \"progress\",\r\n        message\r\n      });\r\n    }\r\n\r\n    parseSave(data, onProgress)\r\n      .then(saveGame => {\r\n        emitter({\r\n          type: \"success\",\r\n          saveGame\r\n        });\r\n        emitter(END);\r\n      })\r\n      .catch(error => {\r\n        emitter({\r\n          type: \"error\",\r\n          error\r\n        });\r\n        emitter(END);\r\n      });\r\n\r\n    //This is the cancellation func.\r\n    // TODO: We can support cancellation in oni-save-parser rather easily.\r\n    return () => {};\r\n  });\r\n}\r\n\r\nfunction readFile(file: File): Promise<ArrayBuffer> {\r\n  const reader = new FileReader();\r\n  return new Promise<ArrayBuffer>((accept, reject) => {\r\n    reader.onload = () => {\r\n      accept(reader.result as ArrayBuffer);\r\n    };\r\n    reader.onerror = () => {\r\n      reject(reader.error);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n","import { SaveGame } from \"oni-save-parser\";\r\n\r\nimport {\r\n  RESPONSE_PROGRESS,\r\n  RESPONSE_PARSE_ERROR,\r\n  RESPONSE_PARSE_SUCCESS,\r\n  RESPONSE_WRITE_ERROR,\r\n  RESPONSE_WRITE_SUCCESS,\r\n  SaveParserResultEvent,\r\n  parseSave as parseSaveCommand,\r\n  writeSave as writeSaveCommand,\r\n  jsonToError\r\n} from \"./worker-messages\";\r\n\r\nimport SaveLoadWorker from \"worker-loader!./save-serializer.worker\";\r\n\r\nconst worker = new SaveLoadWorker();\r\n\r\nexport function parseSave(\r\n  data: ArrayBuffer,\r\n  onProgress?: (message: string) => void\r\n): Promise<SaveGame> {\r\n  const promise = new Promise<SaveGame>((accept, reject) => {\r\n    const unhook = () => {\r\n      worker.onerror = null;\r\n      worker.onmessage = null;\r\n    };\r\n\r\n    worker.onerror = error => reject(error);\r\n    worker.onmessage = (message: SaveParserResultEvent) => {\r\n      const { data } = message;\r\n      switch (data.type) {\r\n        case RESPONSE_PROGRESS:\r\n          onProgress && onProgress(data.message);\r\n          break;\r\n        case RESPONSE_PARSE_SUCCESS:\r\n          unhook();\r\n          accept(data.saveGame);\r\n          break;\r\n        case RESPONSE_PARSE_ERROR:\r\n          unhook();\r\n          reject(jsonToError(data.error));\r\n          break;\r\n      }\r\n    };\r\n  });\r\n\r\n  worker.postMessage(parseSaveCommand(data));\r\n\r\n  return promise;\r\n}\r\n\r\nexport function writeSave(\r\n  saveGame: SaveGame,\r\n  onProgress?: (message: string) => void\r\n): Promise<ArrayBuffer> {\r\n  const promise = new Promise<ArrayBuffer>((accept, reject) => {\r\n    const unhook = () => {\r\n      worker.onerror = null;\r\n      worker.onmessage = null;\r\n    };\r\n\r\n    worker.onerror = error => reject(error);\r\n    worker.onmessage = (message: SaveParserResultEvent) => {\r\n      const { data } = message;\r\n      switch (data.type) {\r\n        case RESPONSE_PROGRESS:\r\n          onProgress && onProgress(data.message);\r\n          break;\r\n        case RESPONSE_WRITE_SUCCESS:\r\n          unhook();\r\n          accept(data.data);\r\n          break;\r\n        case RESPONSE_WRITE_ERROR:\r\n          unhook();\r\n          reject(jsonToError(data.error));\r\n          break;\r\n      }\r\n    };\r\n  });\r\n\r\n  worker.postMessage(writeSaveCommand(saveGame));\r\n\r\n  return promise;\r\n}\r\n","import { SaveGame } from \"oni-save-parser\";\r\n\r\nexport const RESPONSE_PROGRESS = \"progress\";\r\nexport const sendProgress = (message: string) => ({\r\n  type: RESPONSE_PROGRESS as typeof RESPONSE_PROGRESS,\r\n  message\r\n});\r\nexport type ProgressResponse = ReturnType<typeof sendProgress>;\r\n\r\nconst COMMAND_PARSE = \"parse-save\";\r\nexport const parseSave = (data: ArrayBuffer) => ({\r\n  type: COMMAND_PARSE as typeof COMMAND_PARSE,\r\n  data\r\n});\r\nexport type ParseSaveCommand = ReturnType<typeof parseSave>;\r\n\r\nexport const RESPONSE_PARSE_SUCCESS = \"parse-save:success\";\r\nexport const parseSaveSuccess = (saveGame: SaveGame) => ({\r\n  type: RESPONSE_PARSE_SUCCESS as typeof RESPONSE_PARSE_SUCCESS,\r\n  saveGame\r\n});\r\nexport type ParseSaveSuccessResponse = ReturnType<typeof parseSaveSuccess>;\r\n\r\nexport const RESPONSE_PARSE_ERROR = \"parse-save:error\";\r\nexport const parseSaveError = (error: Error) => ({\r\n  type: RESPONSE_PARSE_ERROR as typeof RESPONSE_PARSE_ERROR,\r\n  error: errorToJson(error)\r\n});\r\nexport type ParseSaveErrorResponse = ReturnType<typeof parseSaveError>;\r\n\r\nexport type ParseSaveResponse =\r\n  | ParseSaveSuccessResponse\r\n  | ParseSaveErrorResponse\r\n  | ProgressResponse;\r\n\r\nconst COMMAND_WRITE = \"write-save\";\r\nexport const writeSave = (saveGame: SaveGame) => ({\r\n  type: COMMAND_WRITE as typeof COMMAND_WRITE,\r\n  saveGame\r\n});\r\nexport type WriteSaveCommand = ReturnType<typeof writeSave>;\r\n\r\nexport const RESPONSE_WRITE_SUCCESS = \"write-save:success\";\r\nexport const writeSaveSuccess = (data: ArrayBuffer) => ({\r\n  type: RESPONSE_WRITE_SUCCESS as typeof RESPONSE_WRITE_SUCCESS,\r\n  data\r\n});\r\nexport type WriteSaveSuccessResponse = ReturnType<typeof writeSaveSuccess>;\r\n\r\nexport const RESPONSE_WRITE_ERROR = \"write-save:error\";\r\nexport const writeSaveError = (error: Error) => ({\r\n  type: RESPONSE_WRITE_ERROR as typeof RESPONSE_WRITE_ERROR,\r\n  error: errorToJson(error)\r\n});\r\nexport type WriteSaveErrorResponse = ReturnType<typeof writeSaveError>;\r\n\r\nexport type WriteSaveResult =\r\n  | WriteSaveSuccessResponse\r\n  | WriteSaveErrorResponse\r\n  | ProgressResponse;\r\n\r\nexport type SaveParserCommand = ParseSaveCommand | WriteSaveCommand;\r\nexport type SaveParserResponse = ParseSaveResponse | WriteSaveResult;\r\n\r\nexport interface SaveParserCommandEvent extends MessageEvent {\r\n  data: SaveParserCommand;\r\n}\r\n\r\nexport interface SaveParserResultEvent extends MessageEvent {\r\n  data: SaveParserResponse;\r\n}\r\n\r\nexport interface ErrorJson {\r\n  name: string;\r\n  message: string;\r\n  stack?: string;\r\n}\r\nexport function errorToJson(e: Error): ErrorJson {\r\n  return {\r\n    name: e.name,\r\n    message: e.message,\r\n    stack: e.stack\r\n  };\r\n}\r\nexport function jsonToError(obj: ErrorJson): Error {\r\n  const e = new Error(obj.message);\r\n  e.name = obj.name;\r\n  e.stack = obj.stack;\r\n  return e;\r\n}\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"672f0abd3d4b4ff4b253.worker.js\");\n};","import { eventChannel, END } from \"redux-saga\";\r\nimport { put, select, takeEvery, take } from \"redux-saga/effects\";\r\n\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { ACTION_ONISAVE_SAVE, SaveOniSaveAction } from \"@/actions/save-onisave\";\r\n\r\nimport {\r\n  receiveOniSaveBegin,\r\n  receiveOniSaveError,\r\n  receiveOniSaveSuccess\r\n} from \"@/actions/receive-onisave\";\r\n\r\nimport { parseProgress } from \"@/actions/onisave-parse-progress\";\r\n\r\nimport { writeSave } from \"@/services/save-serializer\";\r\n\r\nimport oniSaveSelector from \"@/selectors/oni-save\";\r\n\r\nexport default function* saveEditorSaga() {\r\n  yield takeEvery(ACTION_ONISAVE_SAVE, handleOniSaveWrite);\r\n}\r\n\r\nfunction* handleOniSaveWrite(action: SaveOniSaveAction) {\r\n  const saveName = action.payload;\r\n\r\n  const saveGame: SaveGame | null = yield select(oniSaveSelector);\r\n  if (!saveGame) {\r\n    return;\r\n  }\r\n\r\n  yield put(receiveOniSaveBegin(\"saving\"));\r\n\r\n  const saveChannel = createSaveChannel(saveGame);\r\n\r\n  while (true) {\r\n    const msg = yield take(saveChannel);\r\n    if (msg.type === \"progress\") {\r\n      yield put(parseProgress(msg.message));\r\n      continue;\r\n    } else if (msg.type === \"success\") {\r\n      saveAs(msg.blob, saveName);\r\n      yield put(receiveOniSaveSuccess(saveGame));\r\n      return;\r\n    } else if (msg.type === \"error\") {\r\n      yield put(receiveOniSaveError(msg.error));\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createSaveChannel(saveGame: SaveGame) {\r\n  return eventChannel(emitter => {\r\n    function onProgress(message: string) {\r\n      emitter({\r\n        type: \"progress\",\r\n        message\r\n      });\r\n    }\r\n\r\n    writeSave(saveGame, onProgress)\r\n      .then(data => {\r\n        const blob = new Blob([data]);\r\n        emitter({\r\n          type: \"success\",\r\n          blob\r\n        });\r\n        emitter(END);\r\n      })\r\n      .catch(error => {\r\n        emitter({\r\n          type: \"error\",\r\n          error\r\n        });\r\n        emitter(END);\r\n      });\r\n\r\n    //This is the cancellation func.\r\n    // TODO: We can support cancellation in oni-save-parser rather easily.\r\n    return () => {};\r\n  });\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SaveGame } from \"oni-save-parser\";\r\n\r\nimport { ACTION_RECEIVE_ONISAVE_SUCCESS } from \"@/actions/receive-onisave\";\r\nimport { AppState } from \"@/state\";\r\n\r\nexport function actionSanitizer(action: AnyAction): AnyAction {\r\n  if (action.type === ACTION_RECEIVE_ONISAVE_SUCCESS) {\r\n    return {\r\n      ...action,\r\n      payload: sanitizeSave(action.payload)\r\n    };\r\n  }\r\n  return action;\r\n}\r\n\r\nexport function stateSanitizer(state: AppState): any {\r\n  return {\r\n    ...state,\r\n    oniSave: state.oniSave ? sanitizeSave(state.oniSave) : null\r\n  };\r\n}\r\n\r\nfunction sanitizeSave(save: SaveGame): any {\r\n  return {\r\n    ...save,\r\n    world: {\r\n      ...save.world,\r\n      streamed: \"~snip~\"\r\n    }\r\n  };\r\n}\r\n","import App from \"./App\";\r\nexport default App;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport NoSave from \"@/pages/NoSave\";\r\nimport ErrorPage from \"@/pages/Error\";\r\nimport Loading from \"@/pages/Loading\";\r\nimport SaveEditor from \"@/pages/SaveEditor\";\r\n\r\nimport AppContainer from \"./components/AppContainer\";\r\nimport AppContent from \"./components/AppContent\";\r\nimport NavBarContainer from \"./components/NavBar\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass App extends React.Component<Props> {\r\n  render() {\r\n    const { error, loadingState, onDismissError } = this.props;\r\n\r\n    let element: JSX.Element;\r\n\r\n    if (error) {\r\n      element = <ErrorPage error={error} onDismiss={onDismissError} />;\r\n    } else {\r\n      switch (loadingState) {\r\n        case \"idle\":\r\n          element = <NoSave />;\r\n          break;\r\n        case \"loading\":\r\n        case \"saving\":\r\n          element = <Loading />;\r\n          break;\r\n        case \"ready\":\r\n          element = <SaveEditor />;\r\n          break;\r\n        default:\r\n          element = <div>???</div>;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <AppContainer>\r\n        <NavBarContainer />\r\n        <AppContent>{element}</AppContent>\r\n      </AppContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport error from \"@/selectors/error\";\r\nimport loadingState from \"@/selectors/loading-state\";\r\n\r\nconst stateSelectors = {\r\n  loadingState,\r\n  error\r\n};\r\nexport type StateProps = StructuredStateProps<typeof stateSelectors>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  stateSelectors\r\n);\r\nexport default mapStateToProps;\r\n","import { AppState } from \"@/state\";\r\n\r\nconst errorSelector = (state: AppState) => state.error;\r\nexport default errorSelector;\r\n","import { dismissError } from \"@/actions/dismiss-error\";\r\n\r\nconst mapDispatchToProps = {\r\n  onDismissError: dismissError\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import NoSave from \"./NoSave\";\r\nexport default NoSave;\r\n","import * as React from \"react\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport { OSType } from \"@/runtime-env\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport Text from \"@/components/Text\";\r\nimport Code from \"@/components/Code\";\r\n\r\nconst SaveFilePaths: Record<OSType, string | null> = {\r\n  windows: \"Documents/Klei/OxygenNotIncluded/save_files\",\r\n  mac: null,\r\n  linux: \"~/.config/unity3d/Klei/Oxygen Not Included/save_files\",\r\n  unknown: null\r\n};\r\n\r\nconst NoSave: React.SFC = () => (\r\n  <NonIdealState intent={Intent.Hint} header={\"No File Loaded\"}>\r\n    <Text intent={Intent.Hint}>\r\n      <div>Load a save using the controls on the upper left.</div>\r\n      {SaveFilePaths[OSType] && (\r\n        <div>\r\n          Save files can be found at\r\n          <Code>{SaveFilePaths[OSType]}</Code>\r\n        </div>\r\n      )}\r\n    </Text>\r\n  </NonIdealState>\r\n);\r\nNoSave.displayName = \"NoSave\";\r\nexport default NoSave;\r\n","import styled, {\r\n  BorderProps,\r\n  IntentBorderProps,\r\n  border,\r\n  intentBorder,\r\n  Intent,\r\n  Radius\r\n} from \"@/style\";\r\n\r\nexport interface CodeStyleProps extends BorderProps, IntentBorderProps {}\r\n\r\nconst Code = styled<CodeStyleProps, \"code\">(\"code\")`\r\n  ${intentBorder};\r\n  ${border};\r\n\r\n  margin: 0 4px;\r\n  padding: 1px 2px;\r\n  box-sizing: border-box;\r\n  font-family: monospace;\r\n`;\r\nCode.displayName = \"Code\";\r\n\r\nCode.defaultProps = {\r\n  intent: Intent.Hint,\r\n  borderRadius: Radius.Small\r\n};\r\n\r\nexport default Code;\r\n","import ErrorPage from \"./Error\";\r\nexport default ErrorPage;\r\n","import * as React from \"react\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\nimport Button from \"@/components/Button\";\r\nimport Text from \"@/components/Text\";\r\nimport { Intent } from \"@/style\";\r\n\r\nexport interface ErrorProps {\r\n  error: Error;\r\n  onDismiss(): void;\r\n}\r\n\r\nconst ErrorPage: React.SFC<ErrorProps> = ({ error, onDismiss }) => (\r\n  <Flex direction=\"column\" width=\"100%\" height=\"100%\">\r\n    <Flex.Item grow>\r\n      <Text intent={Intent.Dangerous}>\r\n        <h2>Error</h2>\r\n        <code>{error.stack || error.message || String(error)}</code>\r\n      </Text>\r\n    </Flex.Item>\r\n    <Flex.Item>\r\n      <Button intent={Intent.Primary} onClick={onDismiss}>\r\n        Close\r\n      </Button>\r\n    </Flex.Item>\r\n  </Flex>\r\n);\r\nErrorPage.displayName = \"Error\";\r\nexport default ErrorPage;\r\n","import Loading from \"./Loading\";\r\nexport default Loading;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent, Space } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport Box from \"@/components/Box\";\r\n\r\ntype Props = StateProps;\r\nconst Loading: React.SFC<Props> = ({\r\n  loadingState,\r\n  loadingProgressMessageSelector\r\n}) => (\r\n  <Box p={Space.Large}>\r\n    <Text intent={Intent.Primary}>\r\n      {loadingState === \"loading\" ? \"Loading\" : \"Saving\"}\r\n    </Text>\r\n    <br />\r\n    <Text intent={Intent.Secondary}>{loadingProgressMessageSelector}</Text>\r\n  </Box>\r\n);\r\nLoading.displayName = \"Loading\";\r\nexport default connect(mapStateToProps)(Loading);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport loadingState from \"@/selectors/loading-state\";\r\nimport loadingProgressMessageSelector from \"@/selectors/loading-message\";\r\n\r\nconst structuredSelector = {\r\n  loadingState,\r\n  loadingProgressMessageSelector\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { AppState } from \"@/state\";\r\n\r\nconst loadingProgressMessageSelector = (state: AppState) =>\r\n  state.loadingProgressMessage;\r\nexport default loadingProgressMessageSelector;\r\n","import SaveEditor from \"./SaveEditor\";\r\nexport default SaveEditor;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport SelectedPathBreadcrumb from \"@/components/SelectedPathBreadcrumb\";\r\nimport ResizePanel from \"@/components/ResizePanel\";\r\n\r\nimport { getEditor } from \"./components/editors\";\r\n\r\nimport SaveEditorContainer from \"./components/SaveEditorContainer\";\r\nimport ContentContainer from \"./components/ContentContainer\";\r\nimport EditorContainer from \"./components/EditorContainer\";\r\n\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Separator from \"@/components/Separator\";\r\n\r\ntype Props = StateProps;\r\nclass SaveEditor extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedPath: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { editorType, editorProps } = this.props;\r\n\r\n    const ObjectEditor = getEditor(editorType);\r\n\r\n    return (\r\n      <SaveEditorContainer>\r\n        <ResizePanel>\r\n          <Sidebar />\r\n        </ResizePanel>\r\n        <ContentContainer>\r\n          <SelectedPathBreadcrumb />\r\n          <Separator width=\"100%\" />\r\n          <EditorContainer>\r\n            <ObjectEditor {...editorProps} />\r\n          </EditorContainer>\r\n        </ContentContainer>\r\n      </SaveEditorContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SaveEditor);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport {\r\n  getSaveItemEditor,\r\n  getSaveItemEditorProps\r\n} from \"@/services/save-structure\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\nimport selectedPath from \"@/selectors/selected-path\";\r\n\r\nconst stateSelectors = {\r\n  editorType: createSelector(\r\n    oniSave,\r\n    selectedPath,\r\n    (oniSave, selectedPath) =>\r\n      (oniSave && getSaveItemEditor(selectedPath, oniSave)) || null\r\n  ),\r\n  editorProps: createSelector(\r\n    oniSave,\r\n    selectedPath,\r\n    (oniSave, selectedPath) =>\r\n      oniSave && getSaveItemEditorProps(selectedPath, oniSave)\r\n  )\r\n};\r\nexport type StateProps = StructuredStateProps<typeof stateSelectors>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  stateSelectors\r\n);\r\nexport default mapStateToProps;\r\n","import {\r\n  SaveGame,\r\n  GameObjectBehavior,\r\n  GameObject,\r\n  GameObjectGroup\r\n} from \"oni-save-parser\";\r\n\r\nimport { get, isObject } from \"lodash-es\";\r\n\r\nimport { EditMode, SaveItemBreadcrumb } from \"./types\";\r\n\r\nimport {\r\n  SaveStructureDef,\r\n  getSaveStructureDef,\r\n  walkSaveStructurePath\r\n} from \"./structure\";\r\n\r\nconst GAME_OBJECT_GROUP_PATH_ROOT = [\"gameObjects\", \"*\"];\r\nexport function getPathGameObjectGroup(\r\n  path: string[],\r\n  saveGame: SaveGame\r\n): GameObjectGroup | null {\r\n  if (path.length < GAME_OBJECT_GROUP_PATH_ROOT.length) {\r\n    return null;\r\n  }\r\n\r\n  path = path.slice(0, GAME_OBJECT_GROUP_PATH_ROOT.length);\r\n\r\n  if (\r\n    !path.every((x, i) => comparePathMatch(x, i, GAME_OBJECT_GROUP_PATH_ROOT))\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return get(saveGame, path);\r\n}\r\n\r\nconst GAME_OBJECT_PATH_ROOT = [\"gameObjects\", \"*\", \"gameObject\", \"*\"];\r\nexport function getPathGameObject(\r\n  path: string[],\r\n  saveGame: SaveGame\r\n): GameObject | null {\r\n  if (path.length < GAME_OBJECT_PATH_ROOT.length) {\r\n    return null;\r\n  }\r\n\r\n  path = path.slice(0, GAME_OBJECT_PATH_ROOT.length);\r\n\r\n  if (!path.every((x, i) => comparePathMatch(x, i, GAME_OBJECT_PATH_ROOT))) {\r\n    return null;\r\n  }\r\n\r\n  return get(saveGame, path);\r\n}\r\n\r\nconst GAME_OBJECT_BEHAVIOR_PATH_ROOT = [\r\n  \"gameObjects\",\r\n  \"*\",\r\n  \"gameObject\",\r\n  \"*\",\r\n  \"behaviors\",\r\n  \"*\"\r\n];\r\nexport function getPathBehavior(\r\n  path: string[],\r\n  saveGame: SaveGame\r\n): GameObjectBehavior | null {\r\n  if (path.length < GAME_OBJECT_BEHAVIOR_PATH_ROOT.length) {\r\n    return null;\r\n  }\r\n\r\n  path = path.slice(0, GAME_OBJECT_BEHAVIOR_PATH_ROOT.length);\r\n\r\n  if (\r\n    !path.every((x, i) =>\r\n      comparePathMatch(x, i, GAME_OBJECT_BEHAVIOR_PATH_ROOT)\r\n    )\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return get(saveGame, path);\r\n}\r\n\r\nfunction comparePathMatch(part: string, index: number, match: string[]) {\r\n  if (match[index] === \"*\") return true;\r\n  if (part === match[index]) return true;\r\n  return false;\r\n}\r\n\r\nexport function getSaveItemTitle(path: string[], saveGame: SaveGame): string {\r\n  const def = getSaveStructureDef(path, saveGame);\r\n  let nameSource: string | false | undefined;\r\n  if (def) {\r\n    const nameProducer = def.$uiPathName;\r\n    if (typeof nameProducer === \"function\") {\r\n      const value = path.length > 0 ? get(saveGame, path) : saveGame;\r\n      nameSource = nameProducer(value, path, saveGame);\r\n    } else if (typeof nameProducer === \"string\") {\r\n      nameSource = nameProducer;\r\n    }\r\n  }\r\n\r\n  // TODO: Object might opt out of a path entry with uiPathName: false\r\n  //  What do we do in this case?\r\n  //  For now, we just return the absolute path.\r\n  return nameSource || path[path.length - 1];\r\n}\r\n\r\nexport function getSaveItemBreadcrumb(\r\n  path: string[],\r\n  saveGame: SaveGame\r\n): SaveItemBreadcrumb[] {\r\n  const breadcrumbs: SaveItemBreadcrumb[] = [];\r\n  for (const structurePath of walkSaveStructurePath(path, saveGame)) {\r\n    const { def, path: defPath } = structurePath;\r\n    let title: string | false = false;\r\n    const nameProducer = def.$uiPathName;\r\n    if (typeof nameProducer === \"function\") {\r\n      const value = defPath.length > 0 ? get(saveGame, defPath) : saveGame;\r\n      title = nameProducer(value, defPath, saveGame) || false;\r\n    } else if (typeof nameProducer === \"string\") {\r\n      title = nameProducer;\r\n    } else if (nameProducer === false) {\r\n      // Opting out of a path entry.\r\n      continue;\r\n    } else {\r\n      title = defPath[defPath.length - 1];\r\n    }\r\n\r\n    if (title) {\r\n      breadcrumbs.push({\r\n        title,\r\n        path: defPath\r\n      });\r\n    }\r\n  }\r\n\r\n  return breadcrumbs;\r\n}\r\n\r\nexport function getSaveItemEditValue(path: string[], saveGame: SaveGame) {\r\n  return path.length > 0 ? get(saveGame, path) : saveGame;\r\n}\r\n\r\nexport function getSaveItemChildPaths(\r\n  path: string[],\r\n  saveGame: SaveGame,\r\n  editMode: EditMode\r\n): string[][] {\r\n  const def = getSaveStructureDef(path, saveGame);\r\n  const childPaths = collectChildPaths(path, saveGame, def, editMode);\r\n  return childPaths;\r\n}\r\n\r\nexport function getSaveItemEditor(\r\n  path: string[],\r\n  saveGame: SaveGame\r\n): string | null {\r\n  const def = getSaveStructureDef(path, saveGame);\r\n  return (def && def.$editor) || null;\r\n}\r\n\r\nexport function getSaveItemEditorProps(\r\n  path: string[],\r\n  saveGame: SaveGame\r\n): Record<string, any> {\r\n  const def = getSaveStructureDef(path, saveGame);\r\n  if (!def || !def.$editor) {\r\n    return {};\r\n  }\r\n\r\n  const propFactory = def.$editorProps;\r\n  if (!propFactory) {\r\n    return {};\r\n  }\r\n\r\n  const value = path.length > 0 ? get(saveGame, path) : saveGame;\r\n  return propFactory(value, path, saveGame);\r\n}\r\n\r\n/**\r\n * Determine the child values for the given value.\r\n * @param saveGamePath The path to the value whose children to determine\r\n * @param oniSave The oni save game structure\r\n * @param def The definition of the value whose children to determine\r\n * @param editMode The current edit mode.\r\n * @returns A collection of absolute save game paths for the child values of this value.\r\n */\r\nfunction collectChildPaths(\r\n  saveGamePath: string[],\r\n  oniSave: SaveGame,\r\n  def: SaveStructureDef | null,\r\n  editMode: EditMode\r\n): string[][] {\r\n  let uiChildren = def ? def.$uiChildren : null;\r\n\r\n  const value = saveGamePath.length > 0 ? get(oniSave, saveGamePath) : oniSave;\r\n\r\n  if (typeof uiChildren === \"function\") {\r\n    uiChildren = uiChildren(value);\r\n  }\r\n\r\n  if (uiChildren === false) {\r\n    // Explicitly no children.\r\n    return [];\r\n  }\r\n\r\n  if (uiChildren == null && def) {\r\n    // TODO: Not sure if this is a good idea, trying it out.\r\n    // Explicit structure children are candidates for children.\r\n\r\n    // Only process def if it is not advanced, or we are in advanced mode.\r\n    // Determine the save structure keys we can work off of.\r\n    const defKeys: string[] = Object.keys(def).filter(x => x[0] !== \"$\");\r\n    if (defKeys.indexOf(\"*\") !== -1) {\r\n      // Def knows about all child keys.  Probably an array or map.\r\n      uiChildren = Object.keys(value).map(x => [x]);\r\n    } else if (defKeys.length > 0) {\r\n      // We have known child keys, offer them up.\r\n      uiChildren = defKeys.map(x => [x]);\r\n    }\r\n  }\r\n\r\n  // Failed to find any children, attempt to auto-determine them.\r\n  if (uiChildren == null) {\r\n    uiChildren = collectAutoChildPaths(saveGamePath, oniSave, editMode);\r\n  }\r\n\r\n  // Make the path absolute\r\n  uiChildren = uiChildren ? uiChildren.map(x => [...saveGamePath, ...x]) : [];\r\n\r\n  if (uiChildren) {\r\n    // Check for editMode visibility.\r\n    uiChildren = uiChildren.filter(path => {\r\n      const childValue = get(oniSave, path);\r\n      const childDef = getSaveStructureDef(path, oniSave);\r\n      return checkEditMode(childValue, childDef, editMode);\r\n    });\r\n  }\r\n\r\n  return uiChildren;\r\n}\r\n\r\nfunction checkEditMode(\r\n  value: any,\r\n  def: SaveStructureDef | null,\r\n  editMode: EditMode\r\n): boolean {\r\n  if (editMode === \"advanced\") {\r\n    return true;\r\n  }\r\n\r\n  // Unknown objects are implicitly advanced.\r\n  let advancedProducer = def ? def.$advanced : true;\r\n  let advanced: boolean;\r\n  if (typeof advancedProducer === \"boolean\") {\r\n    advanced = advancedProducer;\r\n  } else if (typeof advancedProducer === \"function\") {\r\n    advanced = advancedProducer(value);\r\n  } else {\r\n    advanced = false;\r\n  }\r\n\r\n  return !advanced;\r\n}\r\n\r\nfunction collectAutoChildPaths(\r\n  saveGamePath: string[],\r\n  oniSave: SaveGame,\r\n  editMode: EditMode\r\n): string[][] {\r\n  if (editMode !== \"advanced\") {\r\n    // Do not auto-determine anything when not in advanced mode.\r\n    return [];\r\n  }\r\n\r\n  const value = saveGamePath.length > 0 ? get(oniSave, saveGamePath) : oniSave;\r\n  let uiChildren: string[][] | null = null;\r\n  if (isObject(value)) {\r\n    // Target is an object, offer up all child objects.\r\n    uiChildren = Object.keys(value)\r\n      .filter(x => isImplicitChild(value[x]))\r\n      .map(x => [x]);\r\n  } else if (Array.isArray(value)) {\r\n    // Target is an array, offer up all array items.\r\n    uiChildren = value.filter(isImplicitChild).map((_, i) => [`${i}`]);\r\n  }\r\n\r\n  return uiChildren || [];\r\n}\r\n\r\nfunction isImplicitChild(value: any): boolean {\r\n  return isObject(value);\r\n}\r\n","export * from \"./root\";\r\nexport * from \"./types\";\r\nexport * from \"./utils\";\r\n\r\nimport saveStructure from \"./root\";\r\nexport default saveStructure;\r\n","import { GameObjectGroup, SaveGame } from \"oni-save-parser\";\r\n\r\nimport { SaveStructureDef } from \"../types\";\r\n\r\nimport { createGameObjectVariants } from \"./gameObjectTypes\";\r\n\r\nconst gameObjectGroupsStructure: SaveStructureDef<GameObjectGroup> = {\r\n  $uiPathName(group: GameObjectGroup) {\r\n    return group.name;\r\n  },\r\n\r\n  $uiChildren(group: GameObjectGroup) {\r\n    return group.gameObjects.map((_, i) => [\"gameObjects\", `${i}`]);\r\n  },\r\n\r\n  $editor: \"game-object-list\",\r\n\r\n  // We want to handle each game object type uniquely,\r\n  //  but their uniqueness is keyed off the name of this group.\r\n  // To handle this, we provide variants that match off the group's name.\r\n  $variants: createGameObjectVariants([\"gameObjects\", \"*\"])\r\n};\r\n\r\nconst gameObjectsStructure: SaveStructureDef<SaveGame[\"gameObjects\"]> = {\r\n  $editor: \"game-object-group-list\",\r\n\r\n  // gameObjects is an array, so we use the fallback key to\r\n  //  handle all items.\r\n  \"*\": gameObjectGroupsStructure\r\n};\r\nexport default gameObjectsStructure;\r\n","import { set } from \"lodash-es\";\r\n\r\nimport { gameObjectIs } from \"../../matchers\";\r\nimport { SaveStructureDef } from \"../../types\";\r\n\r\nimport * as minion from \"./minion\";\r\n\r\nimport { defaultGameObject } from \"./default\";\r\n\r\nconst gameObjectVariantInfo = [minion];\r\n\r\nexport function createGameObjectVariants(\r\n  gameObjectPath: string[] | null\r\n): SaveStructureDef<{}>[] {\r\n  const defaultVariant: SaveStructureDef<{}> = {\r\n    $advanced: true\r\n  };\r\n  setStructure(defaultVariant, gameObjectPath, defaultGameObject);\r\n\r\n  const variants = gameObjectVariantInfo.map(info => {\r\n    const rootVariant: SaveStructureDef<{}> = {\r\n      $match: gameObjectIs(info.gameObjectName)\r\n    };\r\n    setStructure(rootVariant, gameObjectPath, info.gameObjectStructure);\r\n    return rootVariant;\r\n  });\r\n\r\n  // Add default as last item\r\n  variants.push(defaultVariant);\r\n  return variants;\r\n}\r\n\r\nfunction setStructure(\r\n  obj: any,\r\n  path: string[] | null,\r\n  structure: SaveStructureDef\r\n) {\r\n  if (path && path.length > 0) {\r\n    // Collapse the intermediate paths.\r\n    for (let i = 1; i < path.length; i++) {\r\n      set(obj, [...path.slice(0, i), \"$uiPathName\"], false);\r\n    }\r\n    set(obj, path, structure);\r\n  } else {\r\n    // Use a one-value rootVariant to ensure we get a reference,\r\n    //  to mantain recursive support.\r\n    obj.$variants = [structure];\r\n  }\r\n}\r\n","import {\r\n  GameObject,\r\n  MinionIdentityBehavior,\r\n  getBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { SaveStructureDef } from \"../../types\";\r\n\r\nimport { defaultGameObject } from \"./default\";\r\n\r\nconst minionGameObject: SaveStructureDef<GameObject> = {\r\n  ...defaultGameObject,\r\n\r\n  $editor: \"game-object-minion\",\r\n\r\n  $uiPathName: (obj: GameObject) => {\r\n    const identityBehavior = getBehavior(obj, MinionIdentityBehavior);\r\n    const name =\r\n      (identityBehavior &&\r\n        identityBehavior.templateData &&\r\n        identityBehavior.templateData.name) ||\r\n      \"[malformed]\";\r\n    return name;\r\n  }\r\n};\r\n\r\nexport const gameObjectName = \"Minion\";\r\nexport const gameObjectStructure = minionGameObject;\r\n\r\nexport default minionGameObject;\r\n","import { GameObjectBehavior } from \"oni-save-parser\";\r\n\r\nimport { SaveStructureDef } from \"../../../structure\";\r\n\r\nimport { defaultBehavior } from \"./default\";\r\nimport { primaryElementBehavior } from \"./primary-element\";\r\nimport { storageBehavior } from \"./storage\";\r\n\r\nconst behavior: SaveStructureDef<GameObjectBehavior> = {\r\n  $variants: [storageBehavior, primaryElementBehavior, defaultBehavior]\r\n};\r\nexport default behavior;\r\n","import { PrimaryElementBehavior } from \"oni-save-parser\";\r\n\r\nimport { SaveStructureDef } from \"../../types\";\r\nimport { behaviorIs } from \"../../matchers\";\r\n\r\nimport { defaultBehavior } from \"./default\";\r\n\r\nexport const primaryElementBehavior: SaveStructureDef<\r\n  PrimaryElementBehavior\r\n> = {\r\n  ...defaultBehavior,\r\n  $match: behaviorIs(PrimaryElementBehavior)\r\n};\r\n","import { StorageBehavior, StoredGameObject } from \"oni-save-parser\";\r\n\r\nimport { forEach, isObject } from \"lodash-es\";\r\n\r\nimport { SaveStructureDef } from \"../../types\";\r\nimport { behaviorIs } from \"../../matchers\";\r\n\r\nimport { defaultBehavior } from \"./default\";\r\n\r\nconst storageBehaviorExtraData: SaveStructureDef<\r\n  StorageBehavior[\"extraData\"]\r\n> = {\r\n  $uiPathName: false,\r\n\r\n  $editor: \"game-object-list\",\r\n\r\n  \"*\": {\r\n    $editor: \"game-object-default\",\r\n    $uiPathName(obj: StoredGameObject, path: string[]) {\r\n      const index = path[path.length - 1];\r\n      return `${index}: ${obj.name}`;\r\n    },\r\n    $variants: []\r\n  }\r\n};\r\n// TODO: Recurse into behavior editors.\r\n//  Cannot do this currently because we are executing this file to build behaviors for initializing the createGameObjectVariants file.\r\n// storageBehaviorExtraData[\"*\"]!.$variants = createGameObjectVariants(null);\r\n\r\nexport const storageBehavior: SaveStructureDef<StorageBehavior> = {\r\n  ...(defaultBehavior as any),\r\n\r\n  $match: behaviorIs(StorageBehavior),\r\n\r\n  $uiChildren(behavior: StorageBehavior) {\r\n    const children: string[][] = [];\r\n    if (\r\n      behavior.templateData &&\r\n      Object.keys(behavior.templateData).length > 0\r\n    ) {\r\n      forEach(behavior.templateData, (_, key) => {\r\n        // Have to wipe the type here because lodash is being obstinate.\r\n        //  It explicitly calls out that key must be string because 'the type may have properties not defined in the type'.\r\n        //  Not sure why we have a type system if we aren't going to bother using it.\r\n        if (isObject((behavior.templateData as any)[key])) {\r\n          // As of the CU, all of these fields are value fields,\r\n          //  so this does not execute.\r\n          // Leaving it in for future-proofing.\r\n          children.push([\"templateData\", key]);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (behavior.extraData) {\r\n      // extraData is aray of gameObjects stored in this storage.\r\n      forEach(behavior.extraData, (_, key) => {\r\n        children.push([\"extraData\", `${key}`]);\r\n      });\r\n    }\r\n    return children.length > 0 ? children : false;\r\n  },\r\n\r\n  extraData: storageBehaviorExtraData\r\n};\r\n","import { SaveGame } from \"oni-save-parser\";\r\n\r\nimport { isObject } from \"lodash-es\";\r\n\r\nimport saveStructure from \"./root\";\r\nimport { SaveStructureDef } from \"./types\";\r\n\r\nexport function getSaveStructureDef(\r\n  saveGamePath: string[],\r\n  save: SaveGame\r\n): SaveStructureDef | null {\r\n  // TODO: Seems like there would be a builtin utility for this\r\n  const iter = walkSaveStructurePath(saveGamePath, save);\r\n  let result: IteratorResult<any>;\r\n  do {\r\n    result = iter.next();\r\n  } while (!result.done);\r\n  return result.value;\r\n}\r\n\r\n/**\r\n * Walks through a path of a save game, returning the save structure objects in order.\r\n * @param saveGamePath The path to walk the save structure tree to\r\n * @param saveGame The save game to walk.\r\n */\r\nexport function* walkSaveStructurePath(\r\n  saveGamePath: string[],\r\n  saveGame: SaveGame\r\n): IterableIterator<{ def: SaveStructureDef; path: string[] }> {\r\n  let structure: SaveStructureDef = saveStructure;\r\n  let value: any = saveGame;\r\n\r\n  yield {\r\n    def: saveStructure,\r\n    path: []\r\n  };\r\n\r\n  for (let i = 0; i < saveGamePath.length; i++) {\r\n    const key = saveGamePath[i];\r\n\r\n    let subStructure: SaveStructureDef | undefined;\r\n    if (isObject(structure)) {\r\n      subStructure =\r\n        Object.keys(structure).indexOf(key) !== -1\r\n          ? structure[key]\r\n          : structure[\"*\"];\r\n    }\r\n\r\n    if (!subStructure) {\r\n      return null;\r\n    }\r\n\r\n    // Pick the value before searching for variants.\r\n    value = value[key];\r\n\r\n    // Try to pick a variant if possible.\r\n    if (subStructure.$variants) {\r\n      const variant = subStructure.$variants.find(\r\n        x => !x.$match || x.$match(value)\r\n      );\r\n      if (variant) {\r\n        subStructure = {\r\n          ...subStructure,\r\n          ...variant\r\n        } as SaveStructureDef;\r\n      }\r\n    }\r\n\r\n    structure = subStructure;\r\n\r\n    yield {\r\n      def: structure,\r\n      path: saveGamePath.slice(0, i + 1)\r\n    };\r\n  }\r\n\r\n  return structure;\r\n}\r\n\r\n// export function getChildStructures(def: SaveStructureDef): SaveStructureDef[] {\r\n//   return Object.keys(def)\r\n//     .filter(x => x[0] !== \"$\")\r\n//     .map(x => def[x]) as SaveStructureDef[];\r\n// }\r\n","import SelectedPathBreadcrumb from \"./SelectedPathBreadcrumb\";\r\nexport default SelectedPathBreadcrumb;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport SaveStructureLink from \"@/components/SaveStructureLink\";\r\n\r\nimport BreadcrumbContainer from \"./components/BreadcrumbContainer\";\r\n\r\ntype Props = StateProps;\r\nclass SelectedPathBreadcrumb extends React.Component<Props> {\r\n  render() {\r\n    const { breadcrumb } = this.props;\r\n    let links: React.ReactNode[] = [];\r\n    for (let i = 0; i < breadcrumb.length; i++) {\r\n      let isFinal = i + 1 === breadcrumb.length;\r\n      const x = breadcrumb[i];\r\n      const key = x.path.join(\".\");\r\n      links.push(\r\n        <SaveStructureLink\r\n          intent={isFinal ? Intent.Primary : Intent.Secondary}\r\n          key={key}\r\n          path={x.path}\r\n        >\r\n          {x.title}\r\n        </SaveStructureLink>\r\n      );\r\n      if (!isFinal) {\r\n        links.push(<Text key={`${key}:sep`}>{\" > \"}</Text>);\r\n      }\r\n    }\r\n    return <BreadcrumbContainer>{links}</BreadcrumbContainer>;\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SelectedPathBreadcrumb);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport breadcrumb from \"@/selectors/selected-path-breadcrumb\";\r\n\r\nconst structuredSelector = {\r\n  breadcrumb\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { getSaveItemBreadcrumb } from \"@/services/save-structure\";\r\n\r\nimport selectedPath from \"./selected-path\";\r\nimport oniSave from \"./oni-save\";\r\n\r\nconst selectedPathBreadcrumbSelector = createSelector(\r\n  selectedPath,\r\n  oniSave,\r\n  (selectedPath, oniSave) =>\r\n    oniSave ? getSaveItemBreadcrumb(selectedPath, oniSave) : []\r\n);\r\nexport default selectedPathBreadcrumbSelector;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport styled from \"@/style\";\r\n\r\nimport { LinkProps, link } from \"@/style\";\r\n\r\nimport { SaveStructureLinkProps } from \"./props\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\ntype Props = SaveStructureLinkProps & DispatchProps;\r\nclass SaveStructureLink extends React.Component<Props> {\r\n  render() {\r\n    const { intent, children } = this.props;\r\n    return (\r\n      <Link intent={intent} onClick={this._onClick}>\r\n        {children}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onClick() {\r\n    const { path, onClick } = this.props;\r\n    onClick(path);\r\n  }\r\n}\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SaveStructureLink);\r\n\r\nconst Link = styled<LinkProps, \"span\">(\"span\")`\r\n  ${link};\r\n`;\r\n","import { selectPath } from \"@/actions/select-path\";\r\n\r\nconst mapDispatchToProps = {\r\n  onClick: selectPath\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import styled, { Space } from \"@/style\";\r\nimport { getTheme } from \"@/style\";\r\n\r\nconst BreadcrumbContainer = styled.div`\r\n  margin-bottom: ${props => getTheme(props).space[Space.Small]}px;\r\n`;\r\nBreadcrumbContainer.displayName = \"BreadcrumbContainer\";\r\nexport default BreadcrumbContainer;\r\n","import ResizePanel from \"./ResizePanel\";\r\nexport default ResizePanel;\r\n","import * as React from \"react\";\r\n\r\nimport { HeightProps, height } from \"styled-system\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\n\r\nimport ResizeHandle from \"./components/ResizeHandle\";\r\nimport styled from \"@/style\";\r\n\r\nexport interface ResizePanelProps extends HeightProps {\r\n  className?: string;\r\n  defaultWidth?: number;\r\n}\r\ninterface State {\r\n  width: number;\r\n}\r\ntype Props = ResizePanelProps;\r\nclass ResizePanel extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: props.defaultWidth || 300\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { className, children } = this.props;\r\n    const { width } = this.state;\r\n    // TODO: too many wrapping divs.\r\n    //  Provide a way to apply flex to an existing item.\r\n    return (\r\n      <Flex className={className} direction=\"row\">\r\n        <Flex.Item style={{ width }}>{children}</Flex.Item>\r\n        <Flex.Item>\r\n          <ResizeHandle onResize={this._onResize} />\r\n        </Flex.Item>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onResize(delta: number) {\r\n    this.setState(s => ({\r\n      width: s.width + delta\r\n    }));\r\n  }\r\n}\r\n\r\nexport default styled(ResizePanel)`\r\n  ${height};\r\n`;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { DraggableCore, DraggableData } from \"react-draggable\";\r\n\r\nimport ResizeHandleVisual from \"./ResizeHandleVisual\";\r\n\r\nexport interface ResizeHandleProps {\r\n  onResize(delta: number): void;\r\n}\r\n\r\ntype Props = ResizeHandleProps;\r\ninterface State {\r\n  isResizing: boolean;\r\n}\r\nclass ResizeHandle extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isResizing: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DraggableCore\r\n        onStart={this._onStart}\r\n        onStop={this._onStop}\r\n        onDrag={this._onDrag}\r\n      >\r\n        <ResizeHandleVisual isResizing={this.state.isResizing} />\r\n      </DraggableCore>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onDrag(e: MouseEvent, d: DraggableData) {\r\n    const { onResize } = this.props;\r\n    onResize(d.deltaX);\r\n  }\r\n\r\n  @autobind()\r\n  private _onStart() {\r\n    this.setState({\r\n      isResizing: true\r\n    });\r\n  }\r\n\r\n  @autobind()\r\n  private _onStop() {\r\n    this.setState({\r\n      isResizing: false\r\n    });\r\n  }\r\n}\r\nexport default ResizeHandle;\r\n","import styled, { Intent, intentFill, getThemeColor, Color } from \"@/style\";\r\n\r\nexport interface ResizeHandleVisualProps {\r\n  isResizing: boolean;\r\n}\r\nconst ResizeHandleVisual = styled<ResizeHandleVisualProps, \"div\">(\"div\")`\r\n  width: 4px;\r\n  height: 100%;\r\n  background-color: ${props =>\r\n    getThemeColor(\r\n      props.isResizing ? Color.PrimaryIntent : Color.DefaultSeparator\r\n    )};\r\n  flex: none;\r\n  cursor: ew-resize;\r\n\r\n  :hover {\r\n    ${intentFill.of(Intent.Primary)};\r\n  }\r\n`;\r\nexport default ResizeHandleVisual;\r\n","import DefaultObjectEditor from \"./DefaultObjectEditor\";\r\n\r\nimport SaveRootEditor from \"./SaveRootEditor\";\r\nimport TemplateObjectEditor from \"./TemplateObjectEditor\";\r\nimport GameObjectGroupList from \"./GameObjectGroupList\";\r\nimport GameObjectList from \"./GameObjectList\";\r\n\r\nimport DefaultGameObjectEditor from \"./game-objects/DefaultGameObjectEditor\";\r\nimport MinionEditor from \"./game-objects/MinionEditor\";\r\n\r\nconst editors: Record<string, React.ComponentClass<any>> = {\r\n  \"save-root\": SaveRootEditor,\r\n  \"game-object-group-list\": GameObjectGroupList,\r\n  \"game-object-list\": GameObjectList,\r\n  \"template-object\": TemplateObjectEditor,\r\n  \"game-object-default\": DefaultGameObjectEditor,\r\n  \"game-object-minion\": MinionEditor\r\n};\r\n\r\nexport function getEditor(\r\n  editorType: string | null\r\n): React.ComponentClass<any> {\r\n  if (!editorType) {\r\n    return DefaultObjectEditor;\r\n  }\r\n\r\n  return editors[editorType] || DefaultObjectEditor;\r\n}\r\n","import DefaultObjectEditor from \"./DefaultObjectEditor\";\r\nexport default DefaultObjectEditor;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Text from \"@/components/Text\";\r\n\r\nimport DefaultObjectEditorContainer from \"./components/DefaultObjectEditorContainer\";\r\n\r\nimport EditorField from \"./components/EditorField\";\r\n\r\nimport mapStateToProps, { StateProps, FieldRow } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nconst TH = Text.withComponent(\"th\");\r\nconst TD = Text.withComponent(\"td\");\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass DefaultObjectEditor extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { fields } = this.props;\r\n\r\n    const fieldElements = fields.map(field => this._renderFieldRow(field));\r\n\r\n    return (\r\n      <DefaultObjectEditorContainer>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <TH>Name</TH>\r\n              <TH>Value</TH>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{fieldElements}</tbody>\r\n        </table>\r\n      </DefaultObjectEditorContainer>\r\n    );\r\n  }\r\n\r\n  private _renderFieldRow(field: FieldRow) {\r\n    const { title, key, value } = field;\r\n    return (\r\n      <tr key={key}>\r\n        <TD>{title}</TD>\r\n        <TD>\r\n          <EditorField\r\n            propKey={key}\r\n            value={value}\r\n            onChange={this._onFieldChange}\r\n          />\r\n        </TD>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onFieldChange(key: string, value: any) {\r\n    const { selectedPath, onModify } = this.props;\r\n    onModify([...selectedPath, key], value);\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DefaultObjectEditor);\r\n","import styled from \"@/style\";\r\n\r\nconst DefaultObjectEditorContainer = styled.div``;\r\nDefaultObjectEditorContainer.displayName = \"DefaultObjectEditorContainer\";\r\nexport default DefaultObjectEditorContainer;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nexport interface EditorFieldProps {\r\n  propKey: string;\r\n  value: any;\r\n  onChange(propKey: string, value: any): void;\r\n}\r\nexport default class EditorField extends React.Component<EditorFieldProps> {\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        onChange={this._onChange}\r\n        value={JSON.stringify(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const { propKey, onChange } = this.props;\r\n    const value = e.target.value;\r\n    try {\r\n      const parsedValue = JSON.parse(value);\r\n      onChange(propKey, parsedValue);\r\n    } catch {}\r\n  }\r\n}\r\n","import { createSelector, createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport selectedPath from \"@/selectors/selected-path\";\r\nimport selectedValue from \"@/selectors/selected-value\";\r\n\r\nexport interface FieldEditable {\r\n  title: string;\r\n  key: string;\r\n  value: any;\r\n}\r\nexport type FieldRow = FieldEditable;\r\n\r\nconst fields = createSelector(\r\n  selectedValue,\r\n  (selectedValue): FieldRow[] => {\r\n    if (!selectedValue) {\r\n      return [];\r\n    }\r\n\r\n    if (isPrimitive(selectedValue)) {\r\n      // Cannot edit things in a primitive.\r\n      return [];\r\n    }\r\n\r\n    return Object.keys(selectedValue)\r\n      .filter(key => isPrimitive(selectedValue[key]))\r\n      .map(key => {\r\n        const value = selectedValue[key];\r\n        const editable: FieldEditable = {\r\n          title: key,\r\n          key,\r\n          value\r\n        };\r\n        return editable;\r\n      });\r\n  }\r\n);\r\n\r\nconst structuredSelectors = {\r\n  selectedPath,\r\n  fields\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelectors>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelectors\r\n);\r\nexport default mapStateToProps;\r\n\r\nconst primitiveTypes = [\"string\", \"number\", \"boolean\"];\r\nfunction isPrimitive(val: any) {\r\n  const valType = typeof val;\r\n  return primitiveTypes.indexOf(valType) !== -1;\r\n}\r\n","import { modifyOniSave } from \"@/actions/modify-onisave\";\r\n\r\nconst mapDispatchToProps = {\r\n  onModify: modifyOniSave\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import SaveRootEditor from \"./SaveRootEditor\";\r\nexport default SaveRootEditor;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport InfoText from \"@/components/InfoText\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport SaveRootEditorContainer from \"./components/SaveRootEditorContainer\";\r\n\r\nimport SaveGameTitle from \"./components/SaveGameTitle\";\r\nimport DuplicantsList from \"./components/DuplicantsList\";\r\n\r\ntype Props = StateProps;\r\nclass SaveRootEditor extends React.Component<Props> {\r\n  render() {\r\n    const { oniSave } = this.props;\r\n    return (\r\n      <SaveRootEditorContainer>\r\n        {oniSave ? (\r\n          this._renderContent()\r\n        ) : (\r\n          <Text intent={Intent.Hint}>No Save Loaded</Text>\r\n        )}\r\n      </SaveRootEditorContainer>\r\n    );\r\n  }\r\n\r\n  private _renderContent() {\r\n    const oniSave = this.props.oniSave!;\r\n    const numGameObjects = oniSave.gameObjects.reduce(\r\n      (count, set) => count + set.gameObjects.length,\r\n      0\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        <SaveGameTitle intent={Intent.Primary}>\r\n          {oniSave.header.gameInfo.baseName}\r\n        </SaveGameTitle>\r\n        <InfoText value={oniSave.header.gameInfo.numberOfCycles}>\r\n          cycles\r\n        </InfoText>\r\n        <InfoText value={oniSave.header.gameInfo.numberOfDuplicants}>\r\n          duplicants\r\n        </InfoText>\r\n        <InfoText value={numGameObjects}>game objects</InfoText>\r\n        <DuplicantsList />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SaveRootEditor);\r\n","import * as React from \"react\";\r\n\r\nimport Text from \"./Text\";\r\nimport { Intent } from \"@/style\";\r\n\r\nexport interface InfoTextProps {\r\n  value: any;\r\n  pluralize?: boolean;\r\n}\r\n\r\nconst InfoText: React.SFC<InfoTextProps> = ({ value, children }) => (\r\n  <div>\r\n    <Text intent={Intent.Secondary}>{value}</Text> <Text>{children}</Text>\r\n  </div>\r\n);\r\nexport default InfoText;\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nconst structuredSelector = {\r\n  oniSave\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import styled from \"@/style\";\r\n\r\nconst SaveRootEditorContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nSaveRootEditorContainer.displayName = \"SaveRootEditorContainer\";\r\nexport default SaveRootEditorContainer;\r\n","import Text from \"@/components/Text\";\r\n\r\nconst SaveGameTitle = Text.withComponent(\"h3\").extend`\r\n  margin-top: 0;\r\n`;\r\nSaveGameTitle.displayName = \"SaveGameTitle\";\r\nexport default SaveGameTitle;\r\n","import DuplicantsList from \"./DuplicantsList\";\r\nexport default DuplicantsList;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport SaveStructureLink from \"@/components/SaveStructureLink\";\r\n\r\nimport DuplicantPortrait from \"./components/DuplicantPortrait\";\r\nimport DuplicantsListContainer from \"./components/DuplicantsListContainer\";\r\nimport DuplicantsListContent from \"./components/DuplicantsListContent\";\r\n\r\ntype Props = StateProps;\r\nclass DuplicantsList extends React.Component<Props> {\r\n  render() {\r\n    const { duplicantsSetPath, duplicantIndexes } = this.props;\r\n    if (!duplicantsSetPath || !duplicantIndexes) {\r\n      return \"Malformed Data\";\r\n    }\r\n\r\n    const duplicantPortraits = duplicantIndexes.map(x => (\r\n      <DuplicantPortrait key={x} gameObjectIndex={x} />\r\n    ));\r\n\r\n    return (\r\n      <DuplicantsListContainer>\r\n        <SaveStructureLink intent={Intent.Primary} path={duplicantsSetPath}>\r\n          Duplicants\r\n        </SaveStructureLink>\r\n        <DuplicantsListContent>{duplicantPortraits}</DuplicantsListContent>\r\n      </DuplicantsListContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantsList);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { range } from \"lodash-es\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nconst duplicantsSetPath = createSelector(oniSave, oniSave => {\r\n  if (!oniSave) {\r\n    return null;\r\n  }\r\n  const index = oniSave.gameObjects.findIndex(x => x.name === \"Minion\");\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n  return [\"gameObjects\", `${index}`];\r\n});\r\n\r\nconst duplicantIndexes = createSelector(oniSave, oniSave => {\r\n  if (!oniSave) {\r\n    return [];\r\n  }\r\n  const minionSet = oniSave.gameObjects.find(x => x.name === \"Minion\");\r\n  if (!minionSet) {\r\n    return [];\r\n  }\r\n  return range(minionSet.gameObjects.length);\r\n});\r\n\r\nconst structuredSelector = {\r\n  duplicantsSetPath,\r\n  duplicantIndexes\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import DuplicantPortrait from \"./DuplicantPortrait\";\r\nexport default DuplicantPortrait;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport { DuplicantPortraitProps } from \"./props\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport SaveStructureLink from \"@/components/SaveStructureLink\";\r\nimport Portrait from \"@/components/Portrait\";\r\n\r\ntype Props = DuplicantPortraitProps & StateProps;\r\nclass DuplicantPortrait extends React.Component<Props> {\r\n  render() {\r\n    const { path, name, gender, arrivalCycle } = this.props;\r\n    return (\r\n      <Portrait>\r\n        <Portrait.Header>\r\n          {path ? (\r\n            <SaveStructureLink intent={Intent.Primary} path={path}>\r\n              {name}\r\n            </SaveStructureLink>\r\n          ) : (\r\n            \"Invalid Object\"\r\n          )}\r\n        </Portrait.Header>\r\n        <Portrait.Footer>\r\n          <div>\r\n            <Text intent={Intent.Secondary}>{gender}</Text>\r\n          </div>\r\n          <div>\r\n            <Text intent={Intent.Secondary}>{arrivalCycle} cycles old</Text>\r\n          </div>\r\n        </Portrait.Footer>\r\n      </Portrait>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantPortrait);\r\n","import createCachedSelector from \"re-reselect\";\r\nimport { MinionIdentityBehavior, getBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nimport { DuplicantPortraitProps } from \"./props\";\r\n\r\nconst gameObjectIndex = (_: AppState, props: DuplicantPortraitProps) =>\r\n  props.gameObjectIndex;\r\n\r\nconst generateCacheKey = gameObjectIndex;\r\n\r\nconst gameObject = createCachedSelector(\r\n  oniSave,\r\n  gameObjectIndex,\r\n  (oniSave, gameObjectIndex) => {\r\n    if (!oniSave) {\r\n      return null;\r\n    }\r\n    const duplicants = oniSave.gameObjects.find(x => x.name === \"Minion\");\r\n    if (!duplicants) {\r\n      return null;\r\n    }\r\n\r\n    return duplicants.gameObjects[gameObjectIndex] || null;\r\n  }\r\n)(generateCacheKey);\r\n\r\nconst duplicantIdentity = createCachedSelector(gameObject, gameObject => {\r\n  if (!gameObject) {\r\n    return null;\r\n  }\r\n  const identBehavior = getBehavior(gameObject, MinionIdentityBehavior);\r\n  if (!identBehavior || !identBehavior.templateData) {\r\n    return null;\r\n  }\r\n  return identBehavior.templateData;\r\n})(generateCacheKey);\r\n\r\nconst path = (state: AppState, props: DuplicantPortraitProps) => {\r\n  const gameSave = oniSave(state);\r\n  if (!gameSave) {\r\n    return null;\r\n  }\r\n  const groupIndex = gameSave.gameObjects.findIndex(x => x.name === \"Minion\");\r\n  if (groupIndex === -1) {\r\n    return null;\r\n  }\r\n  const index = gameObjectIndex(state, props);\r\n  return [\"gameObjects\", `${groupIndex}`, \"gameObjects\", `${index}`];\r\n};\r\n\r\nconst name = (state: AppState, props: DuplicantPortraitProps) => {\r\n  const ident = duplicantIdentity(state, props);\r\n  return (ident && ident.name) || null;\r\n};\r\n\r\nconst gender = (state: AppState, props: DuplicantPortraitProps) => {\r\n  const ident = duplicantIdentity(state, props);\r\n  return (ident && ident.genderStringKey) || null;\r\n};\r\n\r\nconst arrivalCycle = (state: AppState, props: DuplicantPortraitProps) => {\r\n  const ident = duplicantIdentity(state, props);\r\n  return (ident && (ident.arrivalTime / 200).toFixed(1)) || null;\r\n};\r\n\r\nfunction mapStateToProps(state: AppState, props: DuplicantPortraitProps) {\r\n  return {\r\n    path: path(state, props),\r\n    name: name(state, props),\r\n    gender: gender(state, props),\r\n    arrivalCycle: arrivalCycle(state, props)\r\n  };\r\n}\r\nexport type StateProps = ReturnType<typeof mapStateToProps>;\r\nexport default mapStateToProps;\r\n","import styled, { Radius } from \"@/style\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { getTheme } from \"@/style\";\r\n\r\nimport Header from \"./PortraitHeader\";\r\nimport Footer from \"./PortraitFooter\";\r\n\r\nconst Portrait = styled.div`\r\n  border-radius: ${props => getTheme(props).radii[Radius.Small]}px;\r\n  background-color: ${props => getTheme(props).colors.bg.panel};\r\n  width: 150px;\r\n  height: 150px;\r\n  position: relative;\r\n  padding: 5px;\r\n  margin: 5px;\r\n  box-sizing: border-box;\r\n`;\r\nPortrait.displayName = \"Portrait\";\r\n\r\nexport default attachProps(Portrait, {\r\n  Header,\r\n  Footer\r\n});\r\n","import styled from \"@/style\";\r\n\r\nimport { TextProps, text } from \"@/style\";\r\n\r\nexport interface PortraitHeaderProps extends TextProps {}\r\nconst PortraitHeader = styled<TextProps, \"h4\">(\"h4\")`\r\n  ${text};\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-top: 0;\r\n  margin-bottom: 2px;\r\n  text-align: center;\r\n`;\r\nPortraitHeader.displayName = \"PortraitHeader\";\r\nexport default PortraitHeader;\r\n","import styled from \"@/style\";\r\n\r\nimport { TextProps, text } from \"@/style\";\r\n\r\nconst PortraitFooter = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-top: 2px;\r\n  text-align: center;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n`;\r\nPortraitFooter.displayName = \"PortraitFooter\";\r\nexport default PortraitFooter;\r\n","import * as React from \"react\";\r\n\r\nimport { Space, Border, Color } from \"@/style\";\r\n\r\nimport Box from \"@/components/Box\";\r\n\r\nconst DuplicantsListContainer: React.SFC = ({ children }) => (\r\n  <Box\r\n    width=\"100%\"\r\n    mt={Space.Small}\r\n    p={Space.Small}\r\n    border={Border.Thick}\r\n    borderColor={Color.DefaultSeparator}\r\n  >\r\n    {children}\r\n  </Box>\r\n);\r\n\r\nDuplicantsListContainer.displayName = \"DuplicantsListContainer\";\r\nexport default DuplicantsListContainer;\r\n","import styled from \"@/style\";\r\n\r\nconst DuplicantsListContent = styled.div`\r\n  padding: 5px;\r\n  overflow-x: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nDuplicantsListContent.displayName = \"DuplicantsListContent\";\r\nexport default DuplicantsListContent;\r\n","import TemplateObjectEditor from \"./TemplateObjectEditor\";\r\nexport default TemplateObjectEditor;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport { TemplateObjectEditorProps } from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport Text from \"@/components/Text\";\r\nconst TD = Text.withComponent(\"td\");\r\n\r\nimport TemplateObjectEditorContainer from \"./components/TemplateObjectEditorContainer\";\r\n\r\nimport getTypeInfoFieldComponent from \"../../fields/from-typeinfo\";\r\n\r\ntype Props = TemplateObjectEditorProps & StateProps;\r\nclass TemplateObjectEditor extends React.Component<Props> {\r\n  render() {\r\n    const { templateName, template, typeInfo, selectedPath } = this.props;\r\n\r\n    let content: JSX.Element;\r\n    if (template) {\r\n      const fieldRows = [\r\n        ...(template.fields || []),\r\n        ...(template.properties || [])\r\n      ].map(x => {\r\n        const FieldEditor = getTypeInfoFieldComponent(x.type, true);\r\n        return (\r\n          <tr key={x.name}>\r\n            <TD>{x.name}</TD>\r\n            <td>\r\n              <FieldEditor path={[...selectedPath, x.name]} />\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      content = (\r\n        <table>\r\n          <tbody>{fieldRows}</tbody>\r\n        </table>\r\n      );\r\n    } else if (typeInfo) {\r\n      const FieldEditor = getTypeInfoFieldComponent(typeInfo);\r\n      content = <FieldEditor path={selectedPath} />;\r\n    } else {\r\n      content = <Text intent={Intent.Dangerous}>Unknown Editable</Text>;\r\n    }\r\n    return (\r\n      <TemplateObjectEditorContainer>\r\n        <Text.H4 intent={Intent.Primary}>{templateName}</Text.H4>\r\n        {content}\r\n      </TemplateObjectEditorContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(TemplateObjectEditor);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport {\r\n  LIST_TYPES,\r\n  getTypeCode,\r\n  SerializationTypeCode,\r\n  TypeInfo,\r\n  SerializationTypeInfo\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\nimport selectedPath from \"@/selectors/selected-path\";\r\n\r\nimport { TemplateObjectEditorProps } from \"./props\";\r\n\r\nconst templateName = (_: AppState, props: TemplateObjectEditorProps) =>\r\n  props.templateName;\r\n\r\nconst templatePath = (_: AppState, props: TemplateObjectEditorProps) =>\r\n  props.templatePath;\r\n\r\nconst valuePath = (state: AppState, props: TemplateObjectEditorProps) =>\r\n  props.valuePathHack || selectedPath(state);\r\n\r\nconst typeInfo = createSelector(\r\n  oniSave,\r\n  templateName,\r\n  templatePath,\r\n  (oniSave, templateName, templatePath) => {\r\n    if (!oniSave) {\r\n      return null;\r\n    }\r\n\r\n    let typeInfo: TypeInfo = {\r\n      info: SerializationTypeInfo.UserDefined,\r\n      templateName\r\n    };\r\n    let template = oniSave.templates.find(x => x.name === templateName);\r\n\r\n    for (let i = 0; i < templatePath.length; i++) {\r\n      const part = templatePath[i];\r\n\r\n      if (template == null) {\r\n        return null;\r\n      }\r\n\r\n      const member =\r\n        template.fields.find(x => x.name === part) ||\r\n        template.properties.find(x => x.name === part);\r\n      if (!member) {\r\n        return null;\r\n      }\r\n\r\n      typeInfo = member.type;\r\n\r\n      const typeCode = getTypeCode(typeInfo.info);\r\n\r\n      if (typeCode === SerializationTypeCode.UserDefined) {\r\n        template = oniSave.templates.find(\r\n          x => x.name === member.type.templateName!\r\n        );\r\n      } else if (LIST_TYPES.indexOf(typeCode) !== -1) {\r\n        i++;\r\n        if (i === templatePath.length) {\r\n          // Targeting an array but no index yet.\r\n          break;\r\n        }\r\n\r\n        if (\r\n          getTypeCode(typeInfo.subTypes![0].info) ===\r\n          SerializationTypeCode.UserDefined\r\n        ) {\r\n          typeInfo = typeInfo.subTypes![0];\r\n          template = oniSave.templates.find(\r\n            x => x.name === typeInfo.templateName\r\n          );\r\n        }\r\n      } else if (typeCode === SerializationTypeCode.Dictionary) {\r\n        i++;\r\n        if (i === templatePath.length) {\r\n          // Targeting a dict but no index yet.\r\n          break;\r\n        }\r\n\r\n        // Select key or value\r\n        i++;\r\n        if (i === templatePath.length) {\r\n          // Targeting an index, but no key or value.\r\n          // Fake a value for the ui.\r\n          typeInfo = {\r\n            info: SerializationTypeInfo.Pair,\r\n            subTypes: typeInfo.subTypes\r\n          };\r\n          break;\r\n        }\r\n        let keyValueIndex = Number(templatePath[i]);\r\n        typeInfo = typeInfo.subTypes![keyValueIndex];\r\n        if (!typeInfo) {\r\n          break;\r\n        }\r\n\r\n        if (getTypeCode(typeInfo.info) === SerializationTypeCode.UserDefined) {\r\n          template = oniSave.templates.find(\r\n            x => x.name === typeInfo.templateName\r\n          );\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return typeInfo;\r\n  }\r\n);\r\n\r\nconst template = createSelector(oniSave, typeInfo, (oniSave, typeInfo) => {\r\n  if (!oniSave || !typeInfo) {\r\n    return null;\r\n  }\r\n\r\n  const typeCode = getTypeCode(typeInfo.info);\r\n  if (typeCode !== SerializationTypeCode.UserDefined) {\r\n    return null;\r\n  }\r\n\r\n  let template = oniSave.templates.find(x => x.name === typeInfo.templateName);\r\n  return template;\r\n});\r\n\r\nconst structuredSelector = {\r\n  template,\r\n  typeInfo,\r\n  selectedPath: valuePath\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<\r\n  AppState,\r\n  TemplateObjectEditorProps,\r\n  StateProps\r\n>(structuredSelector);\r\nexport default mapStateToProps;\r\n","import styled from \"@/style\";\r\n\r\nconst TemplateObjectEditorContainer = styled.div``;\r\nTemplateObjectEditorContainer.displayName = \"TemplateObjectEditorContainer\";\r\nexport default TemplateObjectEditorContainer;\r\n","import * as React from \"react\";\r\n\r\nimport { TypeInfo } from \"oni-save-parser\";\r\n\r\nimport Text from \"@/components/Text\";\r\n\r\nimport connectEditorField, {\r\n  EditorFieldProps,\r\n  InjectedProps\r\n} from \"./connect-field\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport getFieldElementClass from \"./from-typeinfo\";\r\n\r\nconst TD = Text.withComponent(\"td\");\r\n\r\nexport interface ArrayLikeFieldProps extends EditorFieldProps {\r\n  subType: TypeInfo;\r\n}\r\nconst ArrayLikeField: React.SFC<ArrayLikeFieldProps & InjectedProps> = ({\r\n  path,\r\n  subType,\r\n  value\r\n}) => {\r\n  if (value == null) {\r\n    return <Text intent={Intent.Hint}>Null Value</Text>;\r\n  }\r\n  const ValueElement = getFieldElementClass(subType);\r\n  const elements = (value as any[]).map((_, i) => {\r\n    return (\r\n      <tr key={i}>\r\n        <TD>{i}</TD>\r\n        <td>\r\n          <ValueElement path={[...path, `${i}`]} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <Text intent={Intent.Primary}>Key</Text>\r\n          </th>\r\n          <th>\r\n            <Text intent={Intent.Primary}>Value</Text>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{elements}</tbody>\r\n    </table>\r\n  );\r\n};\r\nArrayLikeField.displayName = \"ArrayLikeField\";\r\nexport default connectEditorField()(ArrayLikeField);\r\n","import createCachedSelector from \"re-reselect\";\r\n\r\nimport { get } from \"lodash-es\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nimport { EditorFieldProps } from \"./props\";\r\n\r\nconst itemPathSelector = (_: AppState, props: EditorFieldProps) => props.path;\r\n\r\nconst cacheKeyGenerator = (_: AppState, props: EditorFieldProps) =>\r\n  props.path.join(\".\");\r\n\r\nconst itemValue = createCachedSelector(\r\n  itemPathSelector,\r\n  oniSave,\r\n  (path, oniSave) => {\r\n    if (path.length === 0) {\r\n      return oniSave;\r\n    }\r\n    return get(oniSave, path);\r\n  }\r\n)(cacheKeyGenerator);\r\n\r\nfunction mapStateToProps(state: AppState, props: EditorFieldProps) {\r\n  return {\r\n    value: itemValue(state, props)\r\n  };\r\n}\r\nexport type StateProps = ReturnType<typeof mapStateToProps>;\r\nexport default mapStateToProps;\r\n","import { modifyOniSave } from \"@/actions/modify-onisave\";\r\n\r\nimport { EditorFieldProps } from \"./props\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch, props: EditorFieldProps) {\r\n  return {\r\n    onCommit(value: any) {\r\n      if (props.writeTo) {\r\n        props.writeTo.forEach(path => {\r\n          dispatch(modifyOniSave(props.path, value));\r\n        });\r\n      } else {\r\n        dispatch(modifyOniSave(props.path, value));\r\n      }\r\n    }\r\n  };\r\n}\r\nexport type DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport default mapDispatchToProps;\r\n","import CheckInput from \"@/components/CheckInput\";\r\n\r\nimport connectEditorField from \"./connect-field\";\r\n\r\nexport default connectEditorField()(CheckInput);\r\n","import * as React from \"react\";\r\n\r\nimport FormGroup from \"@/components/FormGroup\";\r\n\r\nimport { EditorFieldProps } from \"./connect-field\";\r\n\r\nimport NumericField from \"./NumericField\";\r\n\r\nconst ColorField: React.SFC<EditorFieldProps> = ({ path }) => (\r\n  <div>\r\n    <FormGroup label=\"R\">\r\n      <NumericField\r\n        precision=\"single\"\r\n        minValue={0}\r\n        maxValue={1}\r\n        path={[...path, \"r\"]}\r\n      />\r\n    </FormGroup>\r\n    <FormGroup label=\"G\">\r\n      <NumericField\r\n        precision=\"single\"\r\n        minValue={0}\r\n        maxValue={1}\r\n        path={[...path, \"g\"]}\r\n      />\r\n    </FormGroup>\r\n    <FormGroup label=\"B\">\r\n      <NumericField\r\n        precision=\"single\"\r\n        minValue={0}\r\n        maxValue={1}\r\n        path={[...path, \"b\"]}\r\n      />\r\n    </FormGroup>\r\n    <FormGroup label=\"A\">\r\n      <NumericField\r\n        precision=\"single\"\r\n        minValue={0}\r\n        maxValue={1}\r\n        path={[...path, \"a\"]}\r\n      />\r\n    </FormGroup>\r\n  </div>\r\n);\r\nColorField.displayName = \"ColorField\";\r\nexport default ColorField;\r\n","import * as React from \"react\";\r\nimport { FontSizeProps } from \"styled-system\";\r\n\r\nimport { Intent, Space } from \"@/style\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\nimport Box from \"@/components/Box\";\r\nimport Text from \"@/components/Text\";\r\n\r\nexport interface FormGroupProps extends FontSizeProps {\r\n  label: string;\r\n  inline?: boolean;\r\n  intent?: Intent;\r\n}\r\ntype Props = FormGroupProps;\r\nexport default class FormGroup extends React.Component<Props> {\r\n  render() {\r\n    const { label, intent, inline, fontSize } = this.props;\r\n\r\n    let children = this.props.children;\r\n\r\n    return (\r\n      <Flex direction={inline ? \"row\" : \"column\"} mb={Space.Small}>\r\n        <Text.Label\r\n          alignSelf=\"baseline\"\r\n          fontSize={fontSize}\r\n          mr={inline ? Space.Small : Space.None}\r\n          intent={intent}\r\n        >\r\n          {label}\r\n        </Text.Label>\r\n        <Box\r\n          width=\"100%\"\r\n          alignSelf=\"baseline\"\r\n          px={inline ? Space.None : Space.Medium}\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Flex>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { TypeInfo } from \"oni-save-parser\";\r\n\r\nimport Text from \"@/components/Text\";\r\n\r\nimport connectEditorField, {\r\n  EditorFieldProps,\r\n  InjectedProps\r\n} from \"./connect-field\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport getFieldElementClass from \"./from-typeinfo\";\r\n\r\nconst TD = Text.withComponent(\"td\");\r\n\r\nexport interface DictionaryFieldProps extends EditorFieldProps {\r\n  subType: TypeInfo;\r\n}\r\nconst DictionaryField: React.SFC<DictionaryFieldProps & InjectedProps> = ({\r\n  path,\r\n  subType,\r\n  value\r\n}) => {\r\n  const ValueElement = getFieldElementClass(subType);\r\n  const elements = (value as any[]).map(([key, value], i) => {\r\n    return (\r\n      <tr key={i}>\r\n        <TD>{JSON.stringify(key)}</TD>\r\n        <td>\r\n          <ValueElement path={[...path, `${i}`, \"1\"]} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <Text intent={Intent.Primary}>Key</Text>\r\n          </th>\r\n          <th>\r\n            <Text intent={Intent.Primary}>Value</Text>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{elements}</tbody>\r\n    </table>\r\n  );\r\n};\r\nDictionaryField.displayName = \"DictionaryField\";\r\nexport default connectEditorField()(DictionaryField);\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\nimport { EnumerationsByName } from \"oni-save-parser\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\nimport Select, { Option } from \"@/components/Select\";\r\n\r\nimport connectEditorField, {\r\n  EditorFieldProps,\r\n  InjectedProps\r\n} from \"./connect-field\";\r\n\r\nexport interface EnumerationFieldProps extends EditorFieldProps {\r\n  enumerationName: string;\r\n}\r\n\r\ntype Props = EnumerationFieldProps & InjectedProps;\r\nclass EnumerationField extends React.Component<Props> {\r\n  render() {\r\n    const { enumerationName, value, onCommit } = this.props;\r\n    const enumeration = getEnumeration(enumerationName);\r\n    if (!enumeration) {\r\n      return (\r\n        <span>\r\n          <NumericInput value={value} onCommit={onCommit} />\r\n          <Text intent={Intent.Hint}>{enumerationName} (unknown)</Text>\r\n        </span>\r\n      );\r\n    } else {\r\n      // Enumeration has keys for names and numbers.\r\n      const nameKeys = Object.keys(enumeration).filter(\r\n        // TODO: This is silly.  Expose a way to match the [enum]Names constants\r\n        //  to the names of enum types.\r\n        x => isNaN(parseInt(x))\r\n      );\r\n      const options: Option<number>[] = nameKeys.map(x => ({\r\n        label: x,\r\n        value: enumeration[x]\r\n      }));\r\n      return (\r\n        <Select\r\n          value={value as number}\r\n          options={options}\r\n          onChange={this._onSelectInputChange}\r\n          width=\"200px\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onSelectInputChange(value: number) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    const { onCommit } = this.props;\r\n    onCommit(value);\r\n  }\r\n}\r\n\r\nexport default connectEditorField()(EnumerationField);\r\n\r\nfunction getEnumeration(\r\n  enumerationName: string\r\n): (Record<string, number> & Record<number, string>) | null {\r\n  if (\r\n    !Object.prototype.hasOwnProperty.call(EnumerationsByName, enumerationName)\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (EnumerationsByName as any)[enumerationName];\r\n}\r\n","import TextInput from \"@/components/TextInput\";\r\n\r\nimport connectEditorField from \"./connect-field\";\r\n\r\nexport default connectEditorField()(TextInput);\r\n","import * as React from \"react\";\r\n\r\nimport FormGroup from \"@/components/FormGroup\";\r\n\r\nimport { EditorFieldProps } from \"./connect-field\";\r\n\r\nimport NumericField from \"./NumericField\";\r\n\r\nconst Vector2Field: React.SFC<EditorFieldProps> = ({ path }) => (\r\n  <div>\r\n    <FormGroup label=\"X\">\r\n      <NumericField precision=\"single\" path={[...path, \"x\"]} />\r\n    </FormGroup>\r\n    <FormGroup label=\"Y\">\r\n      <NumericField precision=\"single\" path={[...path, \"y\"]} />\r\n    </FormGroup>\r\n  </div>\r\n);\r\nVector2Field.displayName = \"Vector2Field\";\r\nexport default Vector2Field;\r\n","import * as React from \"react\";\r\n\r\nimport FormGroup from \"@/components/FormGroup\";\r\n\r\nimport { EditorFieldProps } from \"./connect-field\";\r\n\r\nimport NumericField from \"./NumericField\";\r\n\r\nconst Vector2IField: React.SFC<EditorFieldProps> = ({ path }) => (\r\n  <div>\r\n    <FormGroup label=\"X\">\r\n      <NumericField precision=\"int32\" path={[...path, \"x\"]} />\r\n    </FormGroup>\r\n    <FormGroup label=\"Y\">\r\n      <NumericField precision=\"int32\" path={[...path, \"y\"]} />\r\n    </FormGroup>\r\n  </div>\r\n);\r\nVector2IField.displayName = \"Vector2IField\";\r\nexport default Vector2IField;\r\n","import * as React from \"react\";\r\n\r\nimport FormGroup from \"@/components/FormGroup\";\r\n\r\nimport { EditorFieldProps } from \"./connect-field\";\r\n\r\nimport NumericField from \"./NumericField\";\r\n\r\nconst Vector3Field: React.SFC<EditorFieldProps> = ({ path }) => (\r\n  <div>\r\n    <FormGroup label=\"X\">\r\n      <NumericField precision=\"single\" path={[...path, \"x\"]} />\r\n    </FormGroup>\r\n    <FormGroup label=\"Y\">\r\n      <NumericField precision=\"single\" path={[...path, \"y\"]} />\r\n    </FormGroup>\r\n    <FormGroup label=\"Z\">\r\n      <NumericField precision=\"single\" path={[...path, \"z\"]} />\r\n    </FormGroup>\r\n  </div>\r\n);\r\nVector3Field.displayName = \"Vector3Field\";\r\nexport default Vector3Field;\r\n","import GameObjectGroupList from \"./GameObjectGroupList\";\r\nexport default GameObjectGroupList;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Filter } from \"react-table\";\r\n\r\nimport mapStateToProps, { StateProps, GroupItem } from \"./derived-state\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport SaveStructureLink from \"@/components/SaveStructureLink\";\r\nimport DataTable, {\r\n  DataTableColumn,\r\n  DataTableRow\r\n} from \"@/components/DataTable\";\r\n\r\nimport EditorContainer from \"@/pages/SaveEditor/components/editors/components/EditorContainer\";\r\n\r\ntype Props = StateProps;\r\nclass GameObjectGroupList extends React.Component<Props> {\r\n  render() {\r\n    const { gameObjectGroups } = this.props;\r\n\r\n    const columns: DataTableColumn[] = [\r\n      {\r\n        Header: \"Game Object Type\",\r\n        id: \"type\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<GroupItem>) => (\r\n          <SaveStructureLink intent={Intent.Primary} path={row.value.path}>\r\n            {row.value.name}\r\n          </SaveStructureLink>\r\n        ),\r\n        sortable: true,\r\n        sortMethod: (a: GroupItem, b: GroupItem) =>\r\n          a.name.localeCompare(b.name) as any,\r\n        filterable: true,\r\n        // This api is atrocious.\r\n        filterMethod: (filter: Filter, row: any) =>\r\n          (row.type.name as string)\r\n            .toLowerCase()\r\n            .includes((filter.value || \"\").toLowerCase())\r\n      },\r\n      {\r\n        Header: \"Count\",\r\n        accessor: \"count\",\r\n        sortable: true\r\n      }\r\n    ];\r\n    return (\r\n      <EditorContainer header=\"GameObject Types\">\r\n        <DataTable columns={columns} data={gameObjectGroups} />\r\n      </EditorContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(GameObjectGroupList);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nexport interface GroupItem {\r\n  name: string;\r\n  count: number;\r\n  path: string[];\r\n}\r\n\r\nconst gameObjectGroups = createSelector(oniSave, oniSave => {\r\n  if (!oniSave) {\r\n    return [];\r\n  }\r\n\r\n  return oniSave.gameObjects.map((x, i) => {\r\n    const item: GroupItem = {\r\n      name: x.name,\r\n      count: x.gameObjects.length,\r\n      path: [\"gameObjects\", `${i}`]\r\n    };\r\n    return item;\r\n  });\r\n});\r\n\r\nconst structuredSelector = {\r\n  gameObjectGroups\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import GameObjectList from \"./GameObjectList\";\r\nexport default GameObjectList;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport Portrait from \"@/components/Portrait\";\r\nimport SaveStructureLink from \"@/components/SaveStructureLink\";\r\n\r\nimport EditorContainer from \"@/pages/SaveEditor/components/editors/components/EditorContainer\";\r\nimport EditorHeader from \"@/pages/SaveEditor/components/editors/components/EditorHeader\";\r\n\r\nimport GameObjectListContent from \"./components/GameObjectListContent\";\r\n\r\ntype Props = StateProps;\r\nclass GameObjectList extends React.Component<Props> {\r\n  render() {\r\n    const { gameObjectItems } = this.props;\r\n    const portraits = gameObjectItems.map(x => (\r\n      <Portrait key={x.name}>\r\n        <Portrait.Header wordBreak=\"break-all\">\r\n          <SaveStructureLink intent={Intent.Primary} path={x.path}>\r\n            {x.name}\r\n          </SaveStructureLink>\r\n        </Portrait.Header>\r\n      </Portrait>\r\n    ));\r\n    return (\r\n      <EditorContainer header=\"GameObjects\">\r\n        <GameObjectListContent>{portraits}</GameObjectListContent>\r\n      </EditorContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(GameObjectList);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { GameObjectGroup } from \"oni-save-parser\";\r\n\r\nimport { get } from \"lodash-es\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport oniSave from \"@/selectors/oni-save\";\r\nimport selectedPath from \"@/selectors/selected-path\";\r\n\r\nimport { getSaveItemTitle } from \"@/services/save-structure\";\r\n\r\nexport interface GameObjectItem {\r\n  name: string;\r\n  path: string[];\r\n}\r\n\r\nconst gameObjectItems = createSelector(\r\n  oniSave,\r\n  selectedPath,\r\n  (oniSave, selectedPath) => {\r\n    if (!oniSave) {\r\n      return [];\r\n    }\r\n\r\n    const group: GameObjectGroup = get(oniSave, selectedPath);\r\n    if (!group) {\r\n      return [];\r\n    }\r\n\r\n    return group.gameObjects.map((x, i) => {\r\n      const path = [...selectedPath, \"gameObjects\", `${i}`];\r\n      const name = getSaveItemTitle(path, oniSave);\r\n      const item: GameObjectItem = {\r\n        name,\r\n        path\r\n      };\r\n      return item;\r\n    });\r\n  }\r\n);\r\n\r\nconst structuredSelector = {\r\n  gameObjectItems\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import styled from \"@/style\";\r\n\r\nconst GroupListContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  align-items: baseline;\r\n`;\r\nGroupListContent.displayName = \"GroupListContent\";\r\nexport default GroupListContent;\r\n","import DefaultGameObjectEditor from \"./DefaultGameObjectEditor\";\r\nexport default DefaultGameObjectEditor;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport FormGroup from \"@/components/FormGroup\";\r\nimport EditModeCondition from \"@/components/EditModeCondition\";\r\n\r\nimport NumericField from \"@/pages/SaveEditor/components/fields/NumericField\";\r\n\r\nimport EditorContainer from \"../../components/EditorContainer\";\r\nimport GameObjectHeader from \"../components/GameObjectHeader\";\r\n\r\ntype Props = StateProps;\r\nclass DefaultGameObjectEditor extends React.Component<Props> {\r\n  render() {\r\n    const { gameObjectPath, gameObjectName } = this.props;\r\n    if (!gameObjectPath) {\r\n      <NonIdealState intent={Intent.Dangerous} header=\"No GameObject Selected\">\r\n        No object is selected, or the selected object is not a GameObject.\r\n      </NonIdealState>;\r\n    }\r\n\r\n    return (\r\n      <EditorContainer\r\n        header={<GameObjectHeader>{gameObjectName}</GameObjectHeader>}\r\n      >\r\n        <FormGroup label=\"Position\">\r\n          <FormGroup label=\"X\" inline>\r\n            <NumericField\r\n              precision=\"single\"\r\n              path={[...gameObjectPath, \"position\", \"x\"]}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Y\" inline>\r\n            <NumericField\r\n              precision=\"single\"\r\n              path={[...gameObjectPath, \"position\", \"y\"]}\r\n            />\r\n          </FormGroup>\r\n          <EditModeCondition editMode=\"advanced\">\r\n            <FormGroup label=\"Z\" inline>\r\n              <NumericField\r\n                precision=\"single\"\r\n                path={[...gameObjectPath, \"position\", \"z\"]}\r\n              />\r\n            </FormGroup>\r\n          </EditModeCondition>\r\n        </FormGroup>\r\n        <FormGroup label=\"Scale\">\r\n          <FormGroup label=\"X\" inline>\r\n            <NumericField\r\n              precision=\"single\"\r\n              path={[...gameObjectPath, \"scale\", \"x\"]}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Y\" inline>\r\n            <NumericField\r\n              precision=\"single\"\r\n              path={[...gameObjectPath, \"scale\", \"y\"]}\r\n            />\r\n          </FormGroup>\r\n        </FormGroup>\r\n      </EditorContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DefaultGameObjectEditor);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { KPrefabIDBehavior, getBehavior, GameObject } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getPathGameObjectGroup } from \"@/services/save-structure\";\r\n\r\nimport selectedValue from \"@/selectors/selected-value\";\r\nimport selectedPath from \"@/selectors/selected-path\";\r\nimport oniSave from \"@/selectors/oni-save\";\r\n\r\nconst structuredSelector = {\r\n  gameObjectPath: selectedPath,\r\n  gameObjectName: createSelector(\r\n    selectedValue,\r\n    selectedPath,\r\n    oniSave,\r\n    (selectedValue, selectedPath, oniSave) => {\r\n      if (!oniSave) {\r\n        return \"[no save loaded]\";\r\n      }\r\n\r\n      if (!selectedValue) {\r\n        return \"[no value selected]\";\r\n      }\r\n\r\n      const prefabIdBehavior = getBehavior(selectedValue, KPrefabIDBehavior);\r\n      let prefabId =\r\n        (prefabIdBehavior &&\r\n          prefabIdBehavior.templateData &&\r\n          prefabIdBehavior.templateData.InstanceID) ||\r\n        \"[no instance id]\";\r\n\r\n      const group = getPathGameObjectGroup(selectedPath, oniSave);\r\n\r\n      return `${group ? group.name : \"[unknown]\"} #${prefabId}`;\r\n    }\r\n  )\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { EditMode } from \"@/services/save-structure\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nexport interface EditModeConditionProps {\r\n  editMode?: EditMode;\r\n}\r\ntype Props = EditModeConditionProps & StateProps;\r\nclass EditModeCondition extends React.Component<Props> {\r\n  render() {\r\n    const { currentEditMode, editMode, children } = this.props;\r\n    if (currentEditMode !== editMode) {\r\n      return null;\r\n    }\r\n\r\n    return children;\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(EditModeCondition);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport editMode from \"@/selectors/edit-mode\";\r\n\r\nconst structuredSelector = {\r\n  currentEditMode: editMode\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent, FontSize } from \"@/style\";\r\n\r\nimport { formatPosition, formatSimHash, formatDisease } from \"@/format\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport Toolbar from \"@/components/Toolbar\";\r\nimport Text from \"@/components/Text\";\r\n\r\nimport GameObjectHeaderContainer from \"./components/GameObjectHeaderContainer\";\r\n\r\ntype Props = StateProps;\r\nclass GameObjectHeader extends React.Component<Props> {\r\n  render() {\r\n    const { position, primaryElement } = this.props;\r\n    return (\r\n      <GameObjectHeaderContainer>\r\n        <Toolbar>\r\n          <Toolbar.Label>{this.props.children}</Toolbar.Label>\r\n\r\n          <Toolbar.Group align=\"center\" alignContent=\"center\">\r\n            <Text\r\n              intent={Intent.Secondary}\r\n              mr={1}\r\n              whiteSpace=\"nowrap\"\r\n              fontSize={FontSize.Default}\r\n            >\r\n              {position ? formatPosition(position) : \"(no object selected)\"}\r\n            </Text>\r\n          </Toolbar.Group>\r\n\r\n          <Toolbar.Group align=\"right\" alignContent=\"center\">\r\n            {primaryElement && (\r\n              <Text\r\n                intent={Intent.Secondary}\r\n                mr={1}\r\n                fontSize={FontSize.Default}\r\n              >\r\n                {formatSimHash(primaryElement)}\r\n              </Text>\r\n            )}\r\n          </Toolbar.Group>\r\n        </Toolbar>\r\n      </GameObjectHeaderContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(GameObjectHeader);\r\n","import { Vector3, SimHashes, HashedString } from \"oni-save-parser\";\r\n\r\nconst POSITION_PRECISION = 4;\r\n\r\nexport function formatPositionValue(v: number): string {\r\n  return v.toPrecision(POSITION_PRECISION);\r\n}\r\n\r\nexport function formatPosition(p: Vector3) {\r\n  return `(${formatPositionValue(p.x)}, ${formatPositionValue(p.y)})`;\r\n}\r\n\r\nexport function formatSimHash(hash: SimHashes): string {\r\n  return SimHashes[hash];\r\n}\r\n\r\nexport function formatDisease(diseaseId: HashedString): string {\r\n  // TODO: Look up from oni-save-parser\r\n  return `Disease(${diseaseId.hash})`;\r\n}\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport {\r\n  GameObject,\r\n  PrimaryElementBehavior,\r\n  getBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport selectedValue from \"@/selectors/selected-value\";\r\n\r\nconst position = createSelector(\r\n  selectedValue,\r\n  (value: GameObject) => value && value.position\r\n);\r\n\r\nconst primaryElementBehavior = createSelector(selectedValue, value => {\r\n  if (!value) {\r\n    return null;\r\n  }\r\n\r\n  return getBehavior(value, PrimaryElementBehavior);\r\n});\r\n\r\nconst primaryElement = createSelector(primaryElementBehavior, behavior => {\r\n  if (!behavior) {\r\n    return null;\r\n  }\r\n\r\n  return behavior.templateData.ElementID;\r\n});\r\n\r\nconst structuredSelector = {\r\n  position,\r\n  primaryElement\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import * as CSS from \"csstype\";\r\n\r\nimport { BackgroundProps, background } from \"styled-system\";\r\n\r\nimport styled, { TextProps, css, text, getTheme, Space, Color } from \"@/style\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nexport interface ToolbarItemProps {\r\n  align?: \"left\" | \"center\" | \"right\";\r\n  alignContent?: CSS.AlignContentProperty;\r\n}\r\nconst toolbarItem = css<ToolbarItemProps>`\r\n  grid-area: ${props => props.align};\r\n  justify-self: ${props => props.align};\r\n  align-self: ${props => props.alignContent || \"baseline\"};\r\n`;\r\n\r\nexport type ToolbarLabelProps = ToolbarItemProps & TextProps;\r\nconst ToolbarLabel = styled<ToolbarLabelProps, \"label\">(\"label\")`\r\n  ${text};\r\n  ${toolbarItem};\r\n`;\r\nToolbarLabel.defaultProps = {\r\n  align: \"left\"\r\n};\r\nToolbarLabel.displayName = \"ToolbarLabel\";\r\n\r\nexport type ToolbarGroupProps = ToolbarItemProps;\r\nconst ToolbarGroup = styled<ToolbarGroupProps, \"div\">(\"div\")`\r\n  display: inline-block;\r\n  ${toolbarItem};\r\n`;\r\nToolbarGroup.defaultProps = {\r\n  align: \"right\"\r\n};\r\nToolbarGroup.displayName = \"ToolbarButtonGroup\";\r\n\r\nexport type ToolbarProps = BackgroundProps;\r\nconst Toolbar = styled<ToolbarProps, \"div\">(\"div\")`\r\n  width: 100%;\r\n  height: auto;\r\n  display: grid;\r\n  padding: 0px ${props => getTheme(props).space[Space.Small]}px;\r\n  box-sizing: border-box;\r\n  grid-template-columns: [left] 1fr [center] 1fr [right] 1fr;\r\n  ${background};\r\n`;\r\nToolbar.defaultProps = {\r\n  background: Color.PanelBackground\r\n};\r\nToolbar.displayName = \"Toolbar\";\r\n\r\nexport default attachProps(Toolbar, {\r\n  Label: ToolbarLabel,\r\n  Group: ToolbarGroup\r\n});\r\n","import Box from \"@/components/Box\";\r\n\r\nconst GameObjectHeaderContainer = Box;\r\nGameObjectHeaderContainer.displayName = \"GameObjectHeaderContainer\";\r\nexport default GameObjectHeaderContainer;\r\n","import MinionEditor from \"./MinionEditor\";\r\nexport default MinionEditor;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport VerticalTabs from \"@/components/VerticalTabs\";\r\n\r\nimport EditorContainer from \"../../components/EditorContainer\";\r\n\r\nimport GameObjectHeader from \"../components/GameObjectHeader\";\r\n\r\nimport MinionHeader from \"./components/MinionEditableName\";\r\nimport MinionAppearanceTab from \"./components/MinionAppearanceTab\";\r\nimport MinionAptitudesTab from \"./components/MinionAptitudesTab\";\r\nimport MinionEffectsTab from \"./components/MinionEffectsTab\";\r\nimport MinionHealthTab from \"./components/MinionHealthTab\";\r\nimport MinionJobsTab from \"./components/MinionJobsTab\";\r\nimport MinionSkillsTab from \"./components/MinionSkillsTab\";\r\nimport MinionTraitsTab from \"./components/MinionTraitsTab\";\r\nimport MinionPositionTab from \"./components/MinionPositionTab\";\r\nimport { Intent } from \"@/style\";\r\n\r\ntype Props = StateProps;\r\nclass DuplicantEditor extends React.Component<Props> {\r\n  render() {\r\n    const { minionNamePath, gameObjectPath } = this.props;\r\n    if (!minionNamePath) {\r\n      return (\r\n        <NonIdealState intent={Intent.Dangerous} header=\"Malformed Data\">\r\n          Duplicant is missing the MinionIdentity behavior.\r\n        </NonIdealState>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <EditorContainer\r\n        header={\r\n          <GameObjectHeader>\r\n            <MinionHeader minionNamePath={minionNamePath} />\r\n          </GameObjectHeader>\r\n        }\r\n      >\r\n        <VerticalTabs width=\"100%\" height=\"100%\">\r\n          <VerticalTabs.Tab tabKey=\"appearance\" header=\"Appearance\">\r\n            <MinionAppearanceTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"health\" header=\"Health\">\r\n            <MinionHealthTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"traits\" header=\"Traits\">\r\n            <MinionTraitsTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"skills\" header=\"Skills\">\r\n            <MinionSkillsTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"jobs\" header=\"Jobs\">\r\n            <MinionJobsTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"aptitude\" header=\"Aptitudes\">\r\n            <MinionAptitudesTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"effects\" header=\"Effects\">\r\n            <MinionEffectsTab />\r\n          </VerticalTabs.Tab>\r\n\r\n          <VerticalTabs.Tab tabKey=\"position\" header=\"Position\">\r\n            <MinionPositionTab gameObjectPath={gameObjectPath} />\r\n          </VerticalTabs.Tab>\r\n        </VerticalTabs>\r\n      </EditorContainer>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DuplicantEditor);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\nimport { MinionIdentityBehavior, GameObject } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport selectedPath from \"@/selectors/selected-path\";\r\nimport oniSave from \"@/selectors/oni-save\";\r\nimport { get } from \"lodash-es\";\r\n\r\nconst structuredSelector = {\r\n  gameObjectPath: selectedPath,\r\n  minionNamePath: createSelector(selectedPath, oniSave, (path, oniSave) => {\r\n    const gameObject: GameObject = get(oniSave, path);\r\n    if (!gameObject) {\r\n      return null;\r\n    }\r\n    const behaviorIndex = gameObject.behaviors.findIndex(\r\n      x => x.name === MinionIdentityBehavior\r\n    );\r\n    if (behaviorIndex === -1) {\r\n      return null;\r\n    }\r\n    return [...path, \"behaviors\", `${behaviorIndex}`, \"templateData\", \"name\"];\r\n  })\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import VerticalTabs from \"./VerticalTabs\";\r\nexport default VerticalTabs;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nimport { BoxProps } from \"@/components/Box\";\r\nimport Flex from \"@/components/Flex\";\r\n\r\nimport TabContent from \"./components/TabContent\";\r\nimport VerticalTabItem from \"./components/VerticalTabItem\";\r\n\r\nimport Tab, { TabProps } from \"./components/Tab\";\r\n\r\nexport interface VerticalTabsProps extends BoxProps {}\r\n\r\ntype Props = VerticalTabsProps;\r\ninterface State {\r\n  selectedKey: string | number | null;\r\n}\r\nclass VerticalTabs extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedKey: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let { children } = this.props;\r\n    let { selectedKey } = this.state;\r\n\r\n    const tabs = React.Children.map(\r\n      children,\r\n      x =>\r\n        React.isValidElement<TabProps>(x) && x.props.tabKey && x.props.header\r\n          ? x\r\n          : null\r\n    ).filter(x => x !== null) as React.ReactElement<TabProps>[];\r\n\r\n    if (selectedKey == null && tabs.length > 0) {\r\n      selectedKey = tabs[0].props.tabKey;\r\n    }\r\n\r\n    const tabItems = tabs.map((tab, i) => (\r\n      <VerticalTabItem\r\n        key={tab.props.tabKey}\r\n        isSelected={tab.props.tabKey === selectedKey}\r\n        onClick={this._onTabItemClick.bind(this, tab.props.tabKey)}\r\n      >\r\n        {tab.props.header}\r\n      </VerticalTabItem>\r\n    ));\r\n\r\n    const content = selectedKey\r\n      ? tabs.find(x => x.props.tabKey === selectedKey)\r\n      : undefined;\r\n\r\n    return (\r\n      <Flex {...this.props} direction=\"row\">\r\n        <Flex.Item shrink>{tabItems}</Flex.Item>\r\n        <TabContent>{content}</TabContent>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onTabItemClick(key: string | number) {\r\n    this.setState({\r\n      selectedKey: key\r\n    });\r\n  }\r\n}\r\n\r\nexport { TabProps } from \"./components/Tab\";\r\nexport default attachProps(VerticalTabs, {\r\n  Tab\r\n});\r\n","import * as React from \"react\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\n\r\nconst TabContent: React.SFC = ({ children }) => (\r\n  <Flex.Item grow shrink pl={1}>\r\n    {children}\r\n  </Flex.Item>\r\n);\r\nTabContent.displayName = \"TabContent\";\r\nexport default TabContent;\r\n","import styled, { getTheme, intent, Intent, Space } from \"@/style\";\r\n\r\nexport interface TabProps {\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst VerticalTabItem = styled<TabProps, \"div\">(\"div\")`\r\n  cursor: pointer;\r\n\r\n  padding: ${props => getTheme(props).space[Space.Small]}px;\r\n\r\n  ${props =>\r\n    props.isSelected\r\n      ? intent.of(Intent.Primary)\r\n      : intent.of(Intent.Secondary)} :not(:last-child) {\r\n    border-bottom: ${props => {\r\n      const theme = getTheme(props);\r\n      return `${theme.borders[1]} ${theme.colors.intent.secondary}`;\r\n    }};\r\n  }\r\n\r\n  ${props => {\r\n    const theme = getTheme(props);\r\n    return `border-right: ${theme.borders[1]} ${\r\n      props.isSelected ? \"transparent\" : theme.colors.intent.secondary\r\n    }`;\r\n  }};\r\n`;\r\nVerticalTabItem.displayName = \"VerticalTabItem\";\r\nexport default VerticalTabItem;\r\n","import * as React from \"react\";\r\n\r\nexport interface TabProps {\r\n  tabKey: string | number;\r\n  header: React.ReactChild;\r\n}\r\n\r\nconst Tab: React.SFC<TabProps> = ({ children }) => (\r\n  <React.Fragment>{children}</React.Fragment>\r\n);\r\nTab.displayName = \"Tab\";\r\nexport default Tab;\r\n","import * as React from \"react\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\n\r\nimport EditableTextField from \"@/pages/SaveEditor/components/fields/EditableTextField\";\r\n\r\nimport EditorHeader from \"../../../components/EditorHeader\";\r\n\r\nexport interface MinionHeaderProps {\r\n  minionNamePath: string[];\r\n}\r\nconst MinionHeader: React.SFC<MinionHeaderProps> = ({ minionNamePath }) => (\r\n  <React.Fragment>\r\n    <EditorHeader>\r\n      <Flex direction=\"row\">\r\n        <Flex.Item mr={1}>Name:</Flex.Item>\r\n        <Flex.Item grow shrink>\r\n          <EditableTextField intent={Intent.Primary} path={minionNamePath} />\r\n        </Flex.Item>\r\n      </Flex>\r\n    </EditorHeader>\r\n  </React.Fragment>\r\n);\r\nMinionHeader.displayName = \"MinionHeader\";\r\nexport default MinionHeader;\r\n","import connectEditorField from \"./connect-field\";\r\n\r\nimport EditableText from \"@/components/EditableText\";\r\n\r\nexport default connectEditorField()(EditableText);\r\n","import EditableText from \"./EditableText\";\r\nexport default EditableText;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Keys from \"@/keys\";\r\n\r\nimport Text, { TextProps } from \"../Text\";\r\n\r\nimport EditableTextInput from \"./components/EditableTextInput\";\r\n\r\nexport interface EditableTextProps extends TextProps {\r\n  className?: string;\r\n  value: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  onCommit(value: string): void;\r\n}\r\ntype Props = EditableTextProps;\r\ninterface State {\r\n  editValue: string | null;\r\n}\r\nexport default class EditableText extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editValue: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { className, value, intent } = this.props;\r\n    const { editValue } = this.state;\r\n\r\n    if (editValue !== null) {\r\n      return (\r\n        <EditableTextInput\r\n          className={className}\r\n          autoFocus\r\n          intent={intent}\r\n          value={editValue}\r\n          onChange={this._onEditableChange}\r\n          onKeyUp={this._onEditableKeyUp}\r\n          onFocus={this._onEditableFocus}\r\n          onBlur={this._onEditableBlur}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Text className={className} intent={intent} onClick={this._onTextClick}>\r\n          {value}\r\n        </Text>\r\n      );\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onTextClick() {\r\n    const { value } = this.props;\r\n    this.setState({\r\n      editValue: value\r\n    });\r\n  }\r\n\r\n  @autobind()\r\n  private _onEditableChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({\r\n      editValue: e.target.value\r\n    });\r\n  }\r\n\r\n  @autobind()\r\n  private _onEditableKeyUp(e: React.KeyboardEvent) {\r\n    switch (e.key) {\r\n      case Keys.Enter:\r\n        this._commit();\r\n        break;\r\n      case Keys.Esc:\r\n        this._reset();\r\n        break;\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onEditableFocus(e: React.FocusEvent<HTMLInputElement>) {\r\n    e.target.select();\r\n  }\r\n\r\n  @autobind()\r\n  private _onEditableBlur() {\r\n    this._commit();\r\n  }\r\n\r\n  private _commit() {\r\n    const { editValue } = this.state;\r\n    const { onCommit } = this.props;\r\n\r\n    if (!editValue) {\r\n      return;\r\n    }\r\n\r\n    onCommit(editValue);\r\n\r\n    this._reset();\r\n  }\r\n\r\n  private _reset() {\r\n    this.setState({\r\n      editValue: null\r\n    });\r\n  }\r\n}\r\n","import styled from \"@/style\";\r\n\r\nimport { TextProps, text } from \"@/style\";\r\n\r\nexport type EditableTextProps = TextProps;\r\nconst EditableTextInput = styled<EditableTextProps, \"input\">(\"input\")`\r\n  ${text};\r\n  font-size: inherit;\r\n  background: none;\r\n  border: none;\r\n`;\r\nEditableTextInput.displayName = \"EditableTextInput\";\r\nexport default EditableTextInput;\r\n","import MinionAppearanceTab from \"./MinionAppearanceTab\";\r\nexport default MinionAppearanceTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport {\r\n  AccessoriesByType,\r\n  AccessoryTypes,\r\n  MINION_IDENTITY_GENDERS,\r\n  AccessoryType\r\n} from \"oni-save-parser\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport FormGroup from \"@/components/FormGroup\";\r\nimport NullableInput, {\r\n  InputCompatibleProps\r\n} from \"@/components/NullableInput\";\r\nimport TextInput from \"@/components/TextInput\";\r\nimport EditModeCondition from \"@/components/EditModeCondition\";\r\nimport Text from \"@/components/Text\";\r\nimport TextAutocompleteInput from \"@/components/TextAutocompleteInput\";\r\nimport { Option } from \"@/components/Select\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\nimport SelectInput from \"@/components/SelectInput\";\r\n\r\nconst TDText = Text.withComponent(\"td\");\r\n\r\nconst NoAccessory = <Text intent={Intent.Secondary}>None</Text>;\r\nconst NoAccessoryMouth = <Text intent={Intent.Dangerous}>I Must Scream</Text>;\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionAppearanceTab extends React.Component<Props> {\r\n  render() {\r\n    const { gender, onSetGender, scale } = this.props;\r\n\r\n    const fields = AccessoryTypes.map(type => this._renderAccessoryField(type));\r\n\r\n    const genderOpts: Option[] = MINION_IDENTITY_GENDERS.map(ident => ({\r\n      label: ident,\r\n      value: ident\r\n    }));\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <FormGroup label=\"Gender\">\r\n          <SelectInput\r\n            value={gender || MINION_IDENTITY_GENDERS[0]}\r\n            options={genderOpts}\r\n            onCommit={onSetGender}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Appearance\">\r\n          <table>\r\n            <tbody>{fields}</tbody>\r\n          </table>\r\n        </FormGroup>\r\n        <FormGroup label=\"Scale\">\r\n          <FormGroup label=\"X\" inline>\r\n            <NumericInput\r\n              value={scale ? scale.x : 1}\r\n              precision=\"single\"\r\n              onCommit={this._setScaleX}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Y\" inline>\r\n            <NumericInput\r\n              value={scale ? scale.y : 1}\r\n              precision=\"single\"\r\n              onCommit={this._setScaleY}\r\n            />\r\n          </FormGroup>\r\n        </FormGroup>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _setScaleX(value: number) {\r\n    const { scale, onSetScale } = this.props;\r\n    onSetScale({\r\n      x: value,\r\n      y: scale ? scale.y : 1,\r\n      z: scale ? scale.z : 1\r\n    });\r\n  }\r\n\r\n  @autobind()\r\n  private _setScaleY(value: number) {\r\n    const { scale, onSetScale } = this.props;\r\n    onSetScale({\r\n      x: scale ? scale.x : 1,\r\n      y: value,\r\n      z: scale ? scale.z : 1\r\n    });\r\n  }\r\n\r\n  private _renderAccessoryField(type: AccessoryType) {\r\n    const { onSetAccessory } = this.props;\r\n    let editGroup = (\r\n      <tr key={type}>\r\n        <TDText>{type}</TDText>\r\n        <td>\r\n          <NullableInput\r\n            renderInput={props => this._renderAccessorySelector(type, props)}\r\n            renderNull={type !== \"mouth\" ? NoAccessory : NoAccessoryMouth}\r\n            value={this.props[type]}\r\n            defaultValue={(AccessoriesByType[type] || [])[0] || \"\"}\r\n            onCommit={onSetAccessory.bind(this, type)}\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n\r\n    if (type === \"hat_hair\" || type === \"hair_always\") {\r\n      editGroup = (\r\n        <EditModeCondition key={type} editMode=\"advanced\">\r\n          {editGroup}\r\n        </EditModeCondition>\r\n      );\r\n    }\r\n\r\n    return editGroup;\r\n  }\r\n\r\n  private _renderAccessorySelector(\r\n    type: AccessoryType,\r\n    props: InputCompatibleProps<string>\r\n  ) {\r\n    const accessoryNames = AccessoriesByType[type];\r\n    if (!accessoryNames || accessoryNames.length === 0) {\r\n      return <TextInput {...props} minLength={1} />;\r\n    } else {\r\n      return (\r\n        <TextAutocompleteInput\r\n          value={props.value}\r\n          items={accessoryNames}\r\n          onCommit={props.onCommit}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionAppearanceTab);\r\n","import { Selector, createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport {\r\n  AccessoryTypes,\r\n  AccessorizerBehavior,\r\n  GameObject,\r\n  AccessoryType,\r\n  getAccessoryName,\r\n  getAccessoryOfType,\r\n  getBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getSelectedGameObjectGender } from \"@/selectors/behaviors/minion-identity\";\r\nimport { getSelectedGameObjectScale } from \"@/selectors/game-object\";\r\n\r\nimport selectedValue from \"@/selectors/selected-value\";\r\nimport selectedPath from \"@/selectors/selected-path\";\r\n\r\nconst accessorizerBehavior = createSelector(\r\n  selectedValue,\r\n  (gameObject: GameObject) => {\r\n    if (!gameObject) {\r\n      return null;\r\n    }\r\n    return getBehavior(gameObject, AccessorizerBehavior);\r\n  }\r\n);\r\n\r\nfunction createAccessorySelector(\r\n  accessoryType: AccessoryType\r\n): Selector<AppState, string | null> {\r\n  return createSelector(accessorizerBehavior, behavior => {\r\n    if (!behavior) {\r\n      return null;\r\n    }\r\n\r\n    const { accessories } = behavior.templateData;\r\n\r\n    const accessory = getAccessoryOfType(accessories, accessoryType);\r\n    if (!accessory) {\r\n      return null;\r\n    }\r\n\r\n    return getAccessoryName(accessory);\r\n  });\r\n}\r\n\r\nconst structuredSelector = {\r\n  selectedPath,\r\n  gender: getSelectedGameObjectGender,\r\n  scale: getSelectedGameObjectScale\r\n};\r\nAccessoryTypes.forEach(x => {\r\n  (structuredSelector as any)[x] = createAccessorySelector(x);\r\n});\r\nexport type StateProps = StructuredStateProps<\r\n  typeof structuredSelector & Record<AccessoryType, string | null>\r\n>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector as any\r\n);\r\nexport default mapStateToProps;\r\n","import { MinionIdentityBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorSelector } from \"@/selectors/behaviors/utils\";\r\n\r\nexport const getSelectedGameObjectIdentityBehavior = getCurrentGameObjectBehaviorSelector(\r\n  MinionIdentityBehavior\r\n);\r\n\r\nexport const getSelectedGameObjectGender = (state: AppState) => {\r\n  const behavior = getSelectedGameObjectIdentityBehavior(state);\r\n  if (!behavior) {\r\n    return null;\r\n  }\r\n  return behavior.templateData.genderStringKey;\r\n};\r\n","import { setIdentityGender } from \"@/actions/behaviors/set-identity-gender\";\r\nimport { setAccessory } from \"@/actions/behaviors/set-accessory\";\r\nimport { setGameObjectScale } from \"@/actions/game-object/set-scale\";\r\n\r\nconst mapDispatchToProps = {\r\n  onSetScale: setGameObjectScale,\r\n  onSetGender: setIdentityGender,\r\n  onSetAccessory: setAccessory\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import * as React from \"react\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\n\r\nexport interface TextAutocompleteInputProps {\r\n  value: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  items: string[];\r\n  onCommit(value: string): void;\r\n}\r\n\r\ntype Props = TextAutocompleteInputProps;\r\ninterface State {\r\n  editValue: string | null;\r\n  isValid: boolean;\r\n}\r\nexport default class TextAutocompleteInput extends React.Component<\r\n  Props,\r\n  State\r\n> {\r\n  private _inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editValue: null,\r\n      isValid: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { value, minLength, maxLength, items } = this.props;\r\n    const { editValue } = this.state;\r\n\r\n    const currentValue = editValue != null ? editValue : value;\r\n\r\n    return (\r\n      <Autocomplete\r\n        value={currentValue}\r\n        items={items}\r\n        minLength={minLength}\r\n        maxLength={maxLength}\r\n        getItemValue={x => x}\r\n        onChange={this._onValueChange}\r\n        onSelect={this._onValueSelect}\r\n        selectOnBlur\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onValueChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const value = e.target.value;\r\n    this._setEditValue(value);\r\n  }\r\n\r\n  @autobind()\r\n  private _onValueSelect(value: string) {\r\n    this._setEditValue(value);\r\n    this._commitEdit();\r\n  }\r\n\r\n  // @autobind()\r\n  // private _onInputKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n  //   if (e.key === Keys.Enter) {\r\n  //     this._commitEdit();\r\n  //   }\r\n  // }\r\n\r\n  private _setEditValue(value: string) {\r\n    const validation = this._validate(value);\r\n    const isValid = !validation;\r\n\r\n    if (this._inputRef.current) {\r\n      this._inputRef.current.setCustomValidity(validation || \"\");\r\n    }\r\n\r\n    this.setState({\r\n      editValue: value,\r\n      isValid\r\n    });\r\n  }\r\n\r\n  private _commitEdit() {\r\n    const { editValue, isValid } = this.state;\r\n    const { onCommit } = this.props;\r\n\r\n    this.setState({\r\n      editValue: null\r\n    });\r\n\r\n    if (!editValue || !isValid) {\r\n      return;\r\n    }\r\n\r\n    onCommit(editValue);\r\n  }\r\n\r\n  private _validate(value: string): string | null {\r\n    const { minLength, maxLength } = this.props;\r\n    if (minLength != null && (!value || value.length < minLength)) {\r\n      return `Value must be at least ${minLength} characters.`;\r\n    }\r\n\r\n    if (maxLength != null && value.length > maxLength) {\r\n      return `Value must be less than ${maxLength} characters.`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport ReactAutocomplete from \"react-autocomplete\";\r\n\r\nimport { Intent, getTheme, Space } from \"@/style\";\r\n\r\nimport Input, { InputProps } from \"@/components/Input\";\r\nimport Box from \"@/components/Box\";\r\nimport Text from \"@/components/Text\";\r\n\r\nexport type AutocompleteProps = Omit<ReactAutocomplete.Props, \"renderItem\"> & {\r\n  intent?: Intent;\r\n  renderItem?: ReactAutocomplete.Props[\"renderItem\"];\r\n  minLength?: number;\r\n  maxLength?: number;\r\n};\r\n\r\nconst AutocompleteItem = Text.withComponent(\"div\").extend`\r\n  width: 100%;\r\n  margin: 0 ${props => getTheme(props).space[Space.Small]}px;\r\n`;\r\n\r\nconst Autocomplete: React.SFC<AutocompleteProps> = props => (\r\n  <ReactAutocomplete\r\n    {...props}\r\n    renderInput={inputProps => <Input {...convertProps(inputProps)} />}\r\n    renderItem={(item, isHighlighted, style) => (\r\n      <AutocompleteItem\r\n        intent={isHighlighted ? Intent.Primary : Intent.Secondary}\r\n      >\r\n        {(props.renderItem || defaultRenderItem)(item, isHighlighted, style)}\r\n      </AutocompleteItem>\r\n    )}\r\n    renderMenu={props.renderMenu || renderMenu.bind(null, props)}\r\n  />\r\n);\r\nAutocomplete.displayName = \"Autocomplete\";\r\nexport default Autocomplete;\r\n\r\nfunction convertProps(\r\n  props: React.HTMLProps<HTMLInputElement>\r\n): Omit<InputProps, \"ref\"> {\r\n  const { ref, ...rest } = props;\r\n  return {\r\n    ...(rest as any),\r\n    innerRef: props.ref\r\n  };\r\n}\r\n\r\nfunction defaultRenderItem(\r\n  item: any,\r\n  isHighlighted: boolean,\r\n  style?: React.CSSProperties\r\n) {\r\n  style = style || {};\r\n  style.width = \"100%\";\r\n  return <div style={style}>{item}</div>;\r\n}\r\n\r\nconst AutocompleteMenu = Box.extend`\r\n  background: ${props => getTheme(props).colors.bg.panel};\r\n  border: ${props => {\r\n    const theme = getTheme(props);\r\n    return `${theme.borders[1]} ${\r\n      theme.colors.intent[props.intent || Intent.Secondary]\r\n    }`;\r\n  }};\r\n  border-top: none;\r\n`;\r\n\r\nfunction renderMenu(\r\n  props: AutocompleteProps,\r\n  items: any[],\r\n  value: string,\r\n  styles: React.CSSProperties\r\n): React.ReactNode {\r\n  // TODO: Portal.\r\n  const elements = items.map((x, i) => <div key={i}>{x}</div>);\r\n  return (\r\n    <AutocompleteMenu intent={props.intent} style={styles}>\r\n      {elements}\r\n    </AutocompleteMenu>\r\n  );\r\n}\r\n","import MinionAptitudesTab from \"./MinionAptitudesTab\";\r\nexport default MinionAptitudesTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { compare } from \"@/math\";\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps, AptitudeData } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport DataTable, {\r\n  DataTableColumn,\r\n  DataTableRow\r\n} from \"@/components/DataTable\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionAptitudesTab extends React.Component<Props> {\r\n  render() {\r\n    const { aptitudes, setAptitude } = this.props;\r\n\r\n    if (!aptitudes || aptitudes.length === 0) {\r\n      return (\r\n        <NonIdealState intent={Intent.Dangerous} header=\"No Data\">\r\n          No aptitude data could be found on this duplicant.\r\n        </NonIdealState>\r\n      );\r\n    }\r\n\r\n    const columns: DataTableColumn[] = [\r\n      {\r\n        Header: \"Role\",\r\n        sortable: true,\r\n        filterable: true,\r\n        accessor: \"roleId\"\r\n      },\r\n      {\r\n        Header: \"Aptitude\",\r\n        sortable: true,\r\n        filterable: false,\r\n        id: \"aptitude\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<AptitudeData>) => (\r\n          <NumericInput\r\n            precision=\"single\"\r\n            minValue={0}\r\n            value={row.value.aptitude}\r\n            onCommit={setAptitude.bind(null, row.value.index)}\r\n          />\r\n        ),\r\n        sortMethod: (a: AptitudeData, b: AptitudeData) =>\r\n          compare(a.aptitude, b.aptitude)\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <DataTable\r\n        height=\"100%\"\r\n        columns={columns}\r\n        showPagination={false}\r\n        data={aptitudes}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionAptitudesTab);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { MinionResumeBehavior, MinionRoleGroup } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorPropertySelector } from \"@/selectors/behaviors/utils\";\r\n\r\nconst aptitudesSelector = getCurrentGameObjectBehaviorPropertySelector<\r\n  MinionResumeBehavior,\r\n  MinionResumeBehavior[\"templateData\"][\"AptitudeByRoleGroup\"]\r\n>(MinionResumeBehavior, [\"templateData\", \"AptitudeByRoleGroup\"]);\r\n\r\nexport interface AptitudeData {\r\n  roleId: string;\r\n  roleHash: number;\r\n  aptitude: number;\r\n  index: number;\r\n}\r\nconst aptitudeDataSelector = createSelector(aptitudesSelector, aptitudes => {\r\n  if (!aptitudes) {\r\n    return null;\r\n  }\r\n\r\n  const data: AptitudeData[] = [];\r\n\r\n  for (let i = 0; i < aptitudes.length; i++) {\r\n    const [hstr, aptitude] = aptitudes[i];\r\n    const roleId = MinionRoleGroup[hstr.hash];\r\n    if (!roleId) {\r\n      continue;\r\n    }\r\n    data.push({\r\n      roleId,\r\n      roleHash: hstr.hash,\r\n      aptitude,\r\n      index: i\r\n    });\r\n  }\r\n\r\n  return data;\r\n});\r\n\r\nconst structuredSelector = {\r\n  aptitudes: aptitudeDataSelector\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { MinionResumeBehavior } from \"oni-save-parser\";\r\nimport { setCurrentObjectBehaviorValue } from \"@/actions/behaviors/set-currentobject-behavior-value\";\r\n\r\nconst mapDispatchToProps = {\r\n  setAptitude(index: number, aptitude: number) {\r\n    return setCurrentObjectBehaviorValue(\r\n      MinionResumeBehavior,\r\n      [\"templateData\", \"AptitudeByRoleGroup\", `${index}`, \"1\"],\r\n      aptitude\r\n    );\r\n  }\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import MinionEffectsTab from \"./MinionEffectsTab\";\r\nexport default MinionEffectsTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AI_EFFECT_IDS } from \"oni-save-parser\";\r\n\r\nimport { compare } from \"@/math\";\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport DataTable, {\r\n  DataTableColumn,\r\n  DataTableRow\r\n} from \"@/components/DataTable\";\r\nimport NullableInput from \"@/components/NullableInput\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionEffectsTab extends React.Component<Props> {\r\n  render() {\r\n    const { effects, onSetEffectData } = this.props;\r\n\r\n    if (!effects) {\r\n      return (\r\n        <NonIdealState intent={Intent.Dangerous} header=\"No Data\">\r\n          No effects data could be found on this duplicant.\r\n        </NonIdealState>\r\n      );\r\n    }\r\n\r\n    const data = AI_EFFECT_IDS.map(effectId => {\r\n      const effectIndex = effects.findIndex(x => x.id === effectId);\r\n      const effect = effectIndex > -1 ? effects[effectIndex] : null;\r\n      return {\r\n        effectId,\r\n        effectIndex,\r\n        timeRemaining: effect ? effect.timeRemaining : null\r\n      };\r\n    });\r\n\r\n    const columns: DataTableColumn[] = [\r\n      {\r\n        Header: \"Effect\",\r\n        sortable: true,\r\n        filterable: true,\r\n        accessor: \"effectId\"\r\n      },\r\n      {\r\n        Header: \"Time Remaining\",\r\n        sortable: true,\r\n        filterable: false,\r\n        id: \"level\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<typeof data[0]>) => (\r\n          <NullableInput\r\n            value={row.value.timeRemaining}\r\n            onCommit={onSetEffectData.bind(\r\n              null,\r\n              row.value.effectId,\r\n              row.value.effectIndex\r\n            )}\r\n            defaultValue={15000}\r\n            renderInput={props => (\r\n              <NumericInput precision=\"single\" minValue={0} {...props} />\r\n            )}\r\n          />\r\n        ),\r\n        sortMethod: (a: typeof data[0], b: typeof data[0]) =>\r\n          compare(a.timeRemaining || 0, b.timeRemaining || 0)\r\n      }\r\n    ];\r\n\r\n    return <DataTable height=\"100%\" columns={columns} data={data} />;\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionEffectsTab);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AIEffectsBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorPropertySelector } from \"@/selectors/behaviors/utils\";\r\n\r\nconst effects = getCurrentGameObjectBehaviorPropertySelector<\r\n  AIEffectsBehavior,\r\n  AIEffectsBehavior[\"templateData\"][\"saveLoadEffects\"]\r\n>(AIEffectsBehavior, [\"templateData\", \"saveLoadEffects\"]);\r\n\r\nconst structuredSelector = {\r\n  effects\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { AIEffectsBehavior, EffectInstance } from \"oni-save-parser\";\r\n\r\nimport {\r\n  insertCurrentObjectBehaviorArrayValue,\r\n  removeCurrentObjectBehaviorArrayIndex\r\n} from \"@/actions/behaviors/modify-currentobject-behavior-array\";\r\n\r\nimport { setCurrentObjectBehaviorValue } from \"@/actions/behaviors/set-currentobject-behavior-value\";\r\n\r\nconst EffectsPath = [\"templateData\", \"saveLoadEffects\"];\r\n\r\nconst mapDispatchToProps = {\r\n  onSetEffectData(\r\n    effectId: string,\r\n    effectIndex: number,\r\n    timeRemaining: number | null\r\n  ) {\r\n    if (timeRemaining != null && timeRemaining > 0) {\r\n      if (effectIndex === -1) {\r\n        // New Effect\r\n        const effect: EffectInstance = {\r\n          id: effectId,\r\n          timeRemaining\r\n        };\r\n        return insertCurrentObjectBehaviorArrayValue(\r\n          AIEffectsBehavior,\r\n          EffectsPath,\r\n          effect\r\n        );\r\n      } else {\r\n        // Changing effect time remaining\r\n        return setCurrentObjectBehaviorValue(\r\n          AIEffectsBehavior,\r\n          [...EffectsPath, `${effectIndex}`, \"timeRemaining\"],\r\n          timeRemaining\r\n        );\r\n      }\r\n    } else if (effectIndex > -1) {\r\n      // Removing effect.\r\n      return removeCurrentObjectBehaviorArrayIndex(\r\n        AIEffectsBehavior,\r\n        EffectsPath,\r\n        effectIndex\r\n      );\r\n    }\r\n  },\r\n  onRemoveEffect(effectIndex: number) {}\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import MinionHealthTab from \"./MinionHealthTab\";\r\nexport default MinionHealthTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { HealthState } from \"oni-save-parser\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport VerticalTabs from \"@/components/VerticalTabs\";\r\nimport FormGroup from \"@/components/FormGroup\";\r\nimport SelectInput from \"@/components/SelectInput\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\n\r\nconst TD = Text.withComponent(\"td\");\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionHealthTab extends React.Component<Props> {\r\n  render() {\r\n    const {\r\n      healthState,\r\n      onHealthStatusChanged,\r\n      hitpoints,\r\n      onHitpointsChanged,\r\n      stamina,\r\n      onStaminaChanged,\r\n      calories,\r\n      onCaloriesChanged,\r\n      breath,\r\n      onBreathChanged,\r\n      stress,\r\n      onStressChanged,\r\n      bladder,\r\n      onBladderChanged,\r\n      surfaceDiseaseId,\r\n      surfaceDiseaseCount,\r\n      immuneLevel,\r\n      onImmuneLevelChanged,\r\n      foodPoisoning,\r\n      onFoodPoisoningChanged,\r\n      coldBrain,\r\n      onColdBrainChanged,\r\n      heatRash,\r\n      onHeatRashChanged,\r\n      slimeLung,\r\n      onSlimeLungChanged,\r\n      spores,\r\n      onSporesChanged,\r\n      sunburn,\r\n      onSunburnChanged\r\n    } = this.props;\r\n\r\n    const options = Object.keys(HealthState)\r\n      .filter(x => isNaN(parseInt(x)))\r\n      .map(x => ({\r\n        label: x,\r\n        value: HealthState[x as any]\r\n      }));\r\n\r\n    // TODO: selector for disease type hashes with advanced mode custom\r\n    // string.\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <Text.H4>Wellness</Text.H4>\r\n          <FormGroup label=\"Status\" inline>\r\n            <SelectInput\r\n              value={healthState || HealthState.Perfect}\r\n              options={options}\r\n              onCommit={onHealthStatusChanged}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"HitPoints\" inline>\r\n            <NumericInput\r\n              value={hitpoints || 0}\r\n              onCommit={onHitpointsChanged}\r\n              minValue={0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Stanima\" inline>\r\n            <NumericInput\r\n              value={stamina || 0}\r\n              precision=\"single\"\r\n              onCommit={onStaminaChanged}\r\n              minValue={0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Calories\" inline>\r\n            <NumericInput\r\n              value={calories || 0}\r\n              precision=\"single\"\r\n              onCommit={onCaloriesChanged}\r\n              minValue={0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Oxygen\" inline>\r\n            <NumericInput\r\n              value={breath || 0}\r\n              precision=\"single\"\r\n              onCommit={onBreathChanged}\r\n              minValue={0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Stress\" inline>\r\n            <NumericInput\r\n              value={stress || 0}\r\n              precision=\"single\"\r\n              onCommit={onStressChanged}\r\n              minValue={0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Bladder\" inline>\r\n            <NumericInput\r\n              value={bladder || 0}\r\n              precision=\"single\"\r\n              onCommit={onBladderChanged}\r\n              minValue={0}\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <Text.H4>Diseases</Text.H4>\r\n          <FormGroup label=\"Immune&nbsp;Level\" inline>\r\n            <NumericInput\r\n              minValue={0}\r\n              precision=\"single\"\r\n              value={immuneLevel || 0}\r\n              onCommit={onImmuneLevelChanged}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup label=\"Surface Germs\">\r\n            <FormGroup label=\"DiseaseID\" inline>\r\n              <NumericInput\r\n                value={surfaceDiseaseId ? surfaceDiseaseId.hash : 0}\r\n                onCommit={this._onSurfaceDiseaseIdCommit}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Count\" inline>\r\n              <NumericInput\r\n                minValue={0}\r\n                precision=\"single\"\r\n                value={surfaceDiseaseCount || 0}\r\n                onCommit={this._onSurfaceDiseaseCountCommit}\r\n              />\r\n            </FormGroup>\r\n          </FormGroup>\r\n          <FormGroup label=\"Conditions\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <TD>Food Poisoning</TD>\r\n                  <td>\r\n                    <NumericInput\r\n                      minValue={0}\r\n                      precision=\"single\"\r\n                      value={foodPoisoning || 0}\r\n                      onCommit={onFoodPoisoningChanged}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <TD>Slime Lung</TD>\r\n                  <td>\r\n                    <NumericInput\r\n                      minValue={0}\r\n                      precision=\"single\"\r\n                      value={slimeLung || 0}\r\n                      onCommit={onSlimeLungChanged}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <TD>Spores</TD>\r\n                  <td>\r\n                    <NumericInput\r\n                      minValue={0}\r\n                      precision=\"single\"\r\n                      value={spores || 0}\r\n                      onCommit={onSporesChanged}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <TD>Hypothermia</TD>\r\n                  <td>\r\n                    <NumericInput\r\n                      minValue={0}\r\n                      precision=\"single\"\r\n                      value={coldBrain || 0}\r\n                      onCommit={onColdBrainChanged}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <TD>Hyperthermia</TD>\r\n                  <td>\r\n                    <NumericInput\r\n                      minValue={0}\r\n                      precision=\"single\"\r\n                      value={heatRash || 0}\r\n                      onCommit={onHeatRashChanged}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <TD>Sunburn</TD>\r\n                  <td>\r\n                    <NumericInput\r\n                      minValue={0}\r\n                      precision=\"single\"\r\n                      value={sunburn || 0}\r\n                      onCommit={onSunburnChanged}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </FormGroup>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onSurfaceDiseaseIdCommit(value: number) {\r\n    const { onSurfaceDiseaseChanged } = this.props;\r\n    onSurfaceDiseaseChanged({ hash: value }, 0);\r\n  }\r\n\r\n  @autobind()\r\n  private _onSurfaceDiseaseCountCommit(value: number) {\r\n    const { surfaceDiseaseId, onSurfaceDiseaseChanged } = this.props;\r\n    onSurfaceDiseaseChanged(surfaceDiseaseId || { hash: 0 }, value);\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionHealthTab);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport {\r\n  GameObject,\r\n  HealthBehavior,\r\n  PrimaryElementBehavior\r\n} from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getSelectedGameObjectHealthState } from \"@/selectors/behaviors/health\";\r\n\r\nimport {\r\n  getSelectedGameObjectElementDiseaseId,\r\n  getSelectedGameObjectElementDiseaseCount\r\n} from \"@/selectors/behaviors/primary-element\";\r\n\r\nimport { getSelectedGameObjectModifierValueSelector } from \"@/selectors/behaviors/minion-modifiers\";\r\n\r\nconst structuredSelector = {\r\n  healthState: getSelectedGameObjectHealthState,\r\n  surfaceDiseaseId: getSelectedGameObjectElementDiseaseId,\r\n  surfaceDiseaseCount: getSelectedGameObjectElementDiseaseCount,\r\n  hitpoints: getSelectedGameObjectModifierValueSelector(\"HitPoints\"),\r\n  stamina: getSelectedGameObjectModifierValueSelector(\"Stamina\"),\r\n  calories: getSelectedGameObjectModifierValueSelector(\"Calories\"),\r\n  immuneLevel: getSelectedGameObjectModifierValueSelector(\"ImmuneLevel\"),\r\n  breath: getSelectedGameObjectModifierValueSelector(\"Breath\"),\r\n  stress: getSelectedGameObjectModifierValueSelector(\"Stress\"),\r\n  bladder: getSelectedGameObjectModifierValueSelector(\"Bladder\"),\r\n  foodPoisoning: getSelectedGameObjectModifierValueSelector(\"FoodPoisoning\"),\r\n  coldBrain: getSelectedGameObjectModifierValueSelector(\"ColdBrain\"),\r\n  heatRash: getSelectedGameObjectModifierValueSelector(\"HeatRash\"),\r\n  slimeLung: getSelectedGameObjectModifierValueSelector(\"SlimeLung\"),\r\n  sunburn: getSelectedGameObjectModifierValueSelector(\"Sunburn\"),\r\n  spores: getSelectedGameObjectModifierValueSelector(\"Spores\")\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { HealthBehavior, getBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getSelectedGameObject } from \"../game-object\";\r\n\r\nexport const getSelectedGameObjectHealthBehavior = createSelector(\r\n  getSelectedGameObject,\r\n  gameObject => {\r\n    if (!gameObject) {\r\n      return null;\r\n    }\r\n\r\n    return getBehavior(gameObject, HealthBehavior);\r\n  }\r\n);\r\n\r\nexport const getSelectedGameObjectHealthState = (state: AppState) => {\r\n  const behavior = getSelectedGameObjectHealthBehavior(state);\r\n  if (!behavior) {\r\n    return null;\r\n  }\r\n  return behavior.templateData.State;\r\n};\r\n","import { PrimaryElementBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorSelector } from \"@/selectors/behaviors/utils\";\r\n\r\nexport const getSelectedGameObjectElementBehavior = getCurrentGameObjectBehaviorSelector(\r\n  PrimaryElementBehavior\r\n);\r\n\r\nexport const getSelectedGameObjectElementDiseaseId = (state: AppState) => {\r\n  const behavior = getSelectedGameObjectElementBehavior(state);\r\n  if (!behavior) {\r\n    return null;\r\n  }\r\n  return behavior.templateData.diseaseID;\r\n};\r\n\r\nexport const getSelectedGameObjectElementDiseaseCount = (state: AppState) => {\r\n  const behavior = getSelectedGameObjectElementBehavior(state);\r\n  if (!behavior) {\r\n    return null;\r\n  }\r\n  return behavior.templateData.diseaseCount;\r\n};\r\n","import { createSelector, Selector } from \"reselect\";\r\n\r\nimport { memoize } from \"lodash-es\";\r\n\r\nimport { MinionModifiersBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorSelector } from \"@/selectors/behaviors/utils\";\r\n\r\nexport const getSelectedGameObjectModifiersBehavior = getCurrentGameObjectBehaviorSelector(\r\n  MinionModifiersBehavior\r\n);\r\n\r\nfunction createSelectedGameObjectModifierValueSelector(\r\n  amountId: string\r\n): Selector<AppState, number | null> {\r\n  return createSelector(getSelectedGameObjectModifiersBehavior, behavior => {\r\n    if (!behavior) {\r\n      return null;\r\n    }\r\n\r\n    const extraData = behavior.extraData;\r\n    if (!extraData) {\r\n      return null;\r\n    }\r\n\r\n    const amount = extraData.amounts.find(x => x.name === amountId);\r\n    if (!amount) {\r\n      return null;\r\n    }\r\n    return amount.value.value;\r\n  });\r\n}\r\n\r\nexport const getSelectedGameObjectModifierValueSelector = memoize(\r\n  createSelectedGameObjectModifierValueSelector\r\n);\r\n","import { setHealthStatus } from \"@/actions/behaviors/set-health-state\";\r\nimport { setModifierValue } from \"@/actions/behaviors/set-modifier-amount\";\r\nimport { setPrimaryElementDisease } from \"@/actions/behaviors/set-element-disease\";\r\n\r\nconst mapDispatchToProps = {\r\n  onHealthStatusChanged: setHealthStatus,\r\n  onHitpointsChanged(hitpoints: number) {\r\n    return setModifierValue(\"HitPoints\", hitpoints);\r\n  },\r\n  onStaminaChanged(stamina: number) {\r\n    return setModifierValue(\"Stamina\", stamina);\r\n  },\r\n  onCaloriesChanged(calories: number) {\r\n    return setModifierValue(\"Calories\", calories);\r\n  },\r\n  onImmuneLevelChanged(level: number) {\r\n    return setModifierValue(\"ImmuneLevel\", level);\r\n  },\r\n  onBreathChanged(level: number) {\r\n    return setModifierValue(\"Breath\", level);\r\n  },\r\n  onStressChanged(level: number) {\r\n    return setModifierValue(\"Stress\", level);\r\n  },\r\n  onBladderChanged(level: number) {\r\n    return setModifierValue(\"Bladder\", level);\r\n  },\r\n  onFoodPoisoningChanged(level: number) {\r\n    return setModifierValue(\"FoodPoisoning\", level);\r\n  },\r\n  onColdBrainChanged(level: number) {\r\n    return setModifierValue(\"ColdBrain\", level);\r\n  },\r\n  onHeatRashChanged(level: number) {\r\n    return setModifierValue(\"HeatRash\", level);\r\n  },\r\n  onSlimeLungChanged(level: number) {\r\n    return setModifierValue(\"SlimeLung\", level);\r\n  },\r\n  onSunburnChanged(level: number) {\r\n    return setModifierValue(\"Sunburn\", level);\r\n  },\r\n  onSporesChanged(level: number) {\r\n    return setModifierValue(\"Spores\", level);\r\n  },\r\n\r\n  onSurfaceDiseaseChanged: setPrimaryElementDisease\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import MinionJobsTab from \"./MinionJobsTab\";\r\nexport default MinionJobsTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport DataTable, {\r\n  DataTableColumn,\r\n  DataTableRow\r\n} from \"@/components/DataTable\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\nimport CheckInput from \"@/components/CheckInput\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionJobsTab extends React.Component<Props> {\r\n  render() {\r\n    const { jobs, setExperience, setMastery } = this.props;\r\n\r\n    if (!jobs || jobs.length === 0) {\r\n      return (\r\n        <NonIdealState intent={Intent.Dangerous} header=\"No Data\">\r\n          No jobs could be found on this duplicant.\r\n        </NonIdealState>\r\n      );\r\n    }\r\n\r\n    const columns: DataTableColumn[] = [\r\n      {\r\n        Header: \"Job\",\r\n        sortable: true,\r\n        filterable: true,\r\n        accessor: \"id\"\r\n      },\r\n      {\r\n        Header: \"Experience\",\r\n        sortable: true,\r\n        filterable: false,\r\n        id: \"experience\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<typeof jobs[0]>) => (\r\n          <NumericInput\r\n            precision=\"single\"\r\n            minValue={0}\r\n            value={row.value.experience}\r\n            onCommit={setExperience.bind(null, row.value.experienceIndex)}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        Header: \"Mastery\",\r\n        sortable: true,\r\n        filterable: false,\r\n        id: \"mastery\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<typeof jobs[0]>) => (\r\n          <CheckInput\r\n            value={row.value.mastery}\r\n            onCommit={setMastery.bind(null, row.value.masteryIndex)}\r\n          />\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <DataTable\r\n        height=\"100%\"\r\n        columns={columns}\r\n        showPagination={false}\r\n        data={jobs}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionJobsTab);\r\n","import { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorPropertySelector } from \"@/selectors/behaviors/utils\";\r\n\r\nconst masteriesSelector = getCurrentGameObjectBehaviorPropertySelector<\r\n  MinionResumeBehavior,\r\n  MinionResumeBehavior[\"templateData\"][\"MasteryByRoleID\"]\r\n>(MinionResumeBehavior, [\"templateData\", \"MasteryByRoleID\"]);\r\n\r\nconst experienceSelector = getCurrentGameObjectBehaviorPropertySelector<\r\n  MinionResumeBehavior,\r\n  MinionResumeBehavior[\"templateData\"][\"ExperienceByRoleID\"]\r\n>(MinionResumeBehavior, [\"templateData\", \"ExperienceByRoleID\"]);\r\n\r\nexport interface Job {\r\n  id: string;\r\n  mastery: boolean;\r\n  masteryIndex: number;\r\n  experience: number;\r\n  experienceIndex: number;\r\n}\r\nexport type Jobs = Job[];\r\nconst jobsSelector = createSelector(\r\n  masteriesSelector,\r\n  experienceSelector,\r\n  (masteries, experience) => {\r\n    if (!masteries || !experience) {\r\n      return null;\r\n    }\r\n\r\n    const jobs: Record<string, Job> = {};\r\n\r\n    masteries.forEach((x, i) => {\r\n      const [key, value] = x;\r\n      if (key === \"NoRole\") {\r\n        return;\r\n      }\r\n      jobs[key] = {\r\n        id: key,\r\n        mastery: value,\r\n        masteryIndex: i,\r\n        experience: 0,\r\n        experienceIndex: -1\r\n      };\r\n    });\r\n\r\n    experience.forEach((x, i) => {\r\n      const [key, value] = x;\r\n      if (key === \"NoRole\") {\r\n        return;\r\n      }\r\n      jobs[key].experience = value;\r\n      jobs[key].experienceIndex = i;\r\n    });\r\n\r\n    return Object.keys(jobs).map(x => jobs[x]);\r\n  }\r\n);\r\n\r\nconst structuredSelector = {\r\n  jobs: jobsSelector\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { MinionResumeBehavior } from \"oni-save-parser\";\r\n\r\nimport { setCurrentObjectBehaviorValue } from \"@/actions/behaviors/set-currentobject-behavior-value\";\r\n\r\nconst mapDispatchToProps = {\r\n  setExperience(index: number, experience: number) {\r\n    return setCurrentObjectBehaviorValue(\r\n      MinionResumeBehavior,\r\n      [\"templateData\", \"ExperienceByRoleID\", `${index}`, \"1\"],\r\n      experience\r\n    );\r\n  },\r\n\r\n  setMastery(index: number, mastery: boolean) {\r\n    return setCurrentObjectBehaviorValue(\r\n      MinionResumeBehavior,\r\n      [\"templateData\", \"MasteryByRoleID\", `${index}`, \"1\"],\r\n      mastery\r\n    );\r\n  }\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import MinionSkillsTab from \"./MinionSkillsTab\";\r\nexport default MinionSkillsTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { compare } from \"@/math\";\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport DataTable, {\r\n  DataTableColumn,\r\n  DataTableRow\r\n} from \"@/components/DataTable\";\r\nimport NumericInput from \"@/components/NumericInput\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionSkillsTab extends React.Component<Props> {\r\n  render() {\r\n    const { skills, setSkillLevel, setSkillExperience } = this.props;\r\n\r\n    if (!skills || skills.length === 0) {\r\n      return (\r\n        <NonIdealState intent={Intent.Dangerous} header=\"No Data\">\r\n          No skills could be found on this duplicant.\r\n        </NonIdealState>\r\n      );\r\n    }\r\n\r\n    const data = skills.map((x, i) => ({\r\n      ...x,\r\n      index: i\r\n    }));\r\n\r\n    const columns: DataTableColumn[] = [\r\n      {\r\n        Header: \"Skill\",\r\n        sortable: true,\r\n        filterable: true,\r\n        accessor: \"attributeId\"\r\n      },\r\n      {\r\n        Header: \"Level\",\r\n        id: \"level\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<typeof data[0]>) => (\r\n          <NumericInput\r\n            precision=\"int32\"\r\n            minValue={0}\r\n            value={row.value.level}\r\n            onCommit={setSkillLevel.bind(null, row.value.index)}\r\n          />\r\n        ),\r\n        sortable: true,\r\n        sortMethod: (a: typeof data[0], b: typeof data[0]) =>\r\n          compare(a.level, b.level)\r\n      },\r\n      {\r\n        Header: \"Experience\",\r\n        id: \"experience\",\r\n        accessor: x => x,\r\n        Cell: (row: DataTableRow<typeof data[0]>) => (\r\n          <NumericInput\r\n            precision=\"single\"\r\n            value={row.value.experience}\r\n            onCommit={setSkillExperience.bind(null, row.value.index)}\r\n          />\r\n        ),\r\n        sortable: true,\r\n        sortMethod: (a: typeof data[0], b: typeof data[0]) =>\r\n          compare(a.experience, b.experience)\r\n      }\r\n    ];\r\n\r\n    return <DataTable height=\"100%\" columns={columns} data={data} />;\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionSkillsTab);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AIAttributeLevelsBehavior } from \"oni-save-parser\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getCurrentGameObjectBehaviorPropertySelector } from \"@/selectors/behaviors/utils\";\r\n\r\nconst structuredSelector = {\r\n  skills: getCurrentGameObjectBehaviorPropertySelector<\r\n    AIAttributeLevelsBehavior,\r\n    AIAttributeLevelsBehavior[\"templateData\"][\"saveLoadLevels\"]\r\n  >(AIAttributeLevelsBehavior, [\"templateData\", \"saveLoadLevels\"])\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { AIAttributeLevelsBehavior } from \"oni-save-parser\";\r\n\r\nimport { setCurrentObjectBehaviorValue } from \"@/actions/behaviors/set-currentobject-behavior-value\";\r\n\r\nconst mapDispatchToProps = {\r\n  setSkillLevel(index: number, level: number) {\r\n    return setCurrentObjectBehaviorValue(\r\n      AIAttributeLevelsBehavior,\r\n      [\"templateData\", \"saveLoadLevels\", `${index}`, \"level\"],\r\n      level\r\n    );\r\n  },\r\n  setSkillExperience(index: number, experience: number) {\r\n    return setCurrentObjectBehaviorValue(\r\n      AIAttributeLevelsBehavior,\r\n      [\"templateData\", \"saveLoadLevels\", `${index}`, \"experience\"],\r\n      experience\r\n    );\r\n  }\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import MinionTraitsTab from \"./MinionTraitsTab\";\r\nexport default MinionTraitsTab;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AI_TRAIT_IDS } from \"oni-save-parser\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport Table from \"@/components/Table\";\r\nimport NonIdealState from \"@/components/NonIdealState\";\r\nimport DataTable, {\r\n  DataTableColumn,\r\n  DataTableRow\r\n} from \"@/components/DataTable\";\r\nimport CheckInput from \"@/components/CheckInput\";\r\nimport Text from \"@/components/Text\";\r\nimport Flex from \"@/components/Flex\";\r\n\r\ntype Props = StateProps & DispatchProps;\r\nclass MinionTraitsTab extends React.Component<Props> {\r\n  render() {\r\n    const { traits, onSetTrait } = this.props;\r\n\r\n    if (traits == null || traits.length === 0) {\r\n      return (\r\n        <NonIdealState intent={Intent.Dangerous} header=\"No Data\">\r\n          No traits could be found on this duplicant.\r\n        </NonIdealState>\r\n      );\r\n    }\r\n\r\n    const rows = AI_TRAIT_IDS.filter(x => x !== \"None\").map(trait => (\r\n      <Table.TR key={trait}>\r\n        <Table.TD>\r\n          <CheckInput\r\n            value={traits.some(x => x === trait)}\r\n            onCommit={onSetTrait.bind(null, trait)}\r\n          />\r\n        </Table.TD>\r\n        <Table.TD>{trait}</Table.TD>\r\n      </Table.TR>\r\n    ));\r\n\r\n    return (\r\n      <Table>\r\n        <Table.THead>\r\n          <Table.TR>\r\n            <Table.TH />\r\n            <Table.TH>Trait</Table.TH>\r\n          </Table.TR>\r\n        </Table.THead>\r\n        <Table.TBody>{rows}</Table.TBody>\r\n      </Table>\r\n    );\r\n\r\n    // const data = AI_TRAIT_IDS.map(trait => ({\r\n    //   trait: trait,\r\n    //   selected: traits.some(x => x === trait)\r\n    // }));\r\n\r\n    // const columns: DataTableColumn[] = [\r\n    //   {\r\n    //     Header: \"Has Trait\",\r\n    //     id: \"selected\",\r\n    //     Cell: (row: DataTableRow<typeof data[0]>) => (\r\n    //       <Flex\r\n    //         direction=\"row\"\r\n    //         width=\"100%\"\r\n    //         height=\"100%\"\r\n    //         justifyContent=\"center\"\r\n    //       >\r\n    //         <CheckInput\r\n    //           value={row.value.selected}\r\n    //           onCommit={onSetTrait.bind(null, row.value.trait)}\r\n    //         />\r\n    //       </Flex>\r\n    //     ),\r\n    //     accessor: x => x,\r\n    //     resizable: false,\r\n    //     width: 70,\r\n    //     sortable: true,\r\n    //     sortMethod: (a: typeof data[0], b: typeof data[0]) =>\r\n    //       a.selected != b.selected ? (a.selected ? -1 : 1) : 0\r\n    //   },\r\n    //   {\r\n    //     Header: \"Trait\",\r\n    //     id: \"trait_name\",\r\n    //     Cell: (row: DataTableRow) => <Text>{row.value}</Text>,\r\n    //     accessor: \"trait\",\r\n    //     filterable: true,\r\n    //     sortable: true\r\n    //   }\r\n    // ];\r\n\r\n    // return (\r\n    //   <DataTable\r\n    //     height=\"100%\"\r\n    //     data={data}\r\n    //     columns={columns}\r\n    //     showFilters\r\n    //     showPagination={false}\r\n    //   />\r\n    // );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MinionTraitsTab);\r\n","import { createStructuredSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { getSelectedGameObjectTraits } from \"@/selectors/behaviors/ai-traits\";\r\n\r\nconst structuredSelector = {\r\n  traits: getSelectedGameObjectTraits\r\n};\r\nexport type StateProps = StructuredStateProps<typeof structuredSelector>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  structuredSelector\r\n);\r\nexport default mapStateToProps;\r\n","import { AITraitsBehavior } from \"oni-save-parser\";\r\n\r\nimport { getCurrentGameObjectBehaviorSelector } from \"@/selectors/behaviors/utils\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const getSelectedGameObjectIdentityBehavior = getCurrentGameObjectBehaviorSelector(\r\n  AITraitsBehavior\r\n);\r\n\r\nexport const getSelectedGameObjectTraits = createSelector(\r\n  getSelectedGameObjectIdentityBehavior,\r\n  behavior => {\r\n    if (behavior == null) {\r\n      return null;\r\n    }\r\n\r\n    return behavior.templateData.TraitIds;\r\n  }\r\n);\r\n","import { setTrait } from \"@/actions/behaviors/set-traits-trait\";\r\n\r\nconst mapDispatchToProps = {\r\n  onSetTrait: setTrait\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import Table from \"./Table\";\r\nexport default Table;\r\n","import styled, {\r\n  intent,\r\n  text,\r\n  Intent,\r\n  Border,\r\n  getThemeColor,\r\n  Color,\r\n  getThemeBorder,\r\n  intentColor\r\n} from \"@/style\";\r\n\r\nimport { attachProps } from \"@/utils\";\r\n\r\nconst Table = styled.table`\r\n  border: none;\r\n  border-spacing: 0;\r\n  border-collapse: collapse;\r\n`;\r\n\r\nexport default attachProps(Table, {\r\n  THead: styled.thead`\r\n    background-color: ${getThemeColor(Color.PanelBackground)};\r\n  `,\r\n  TH: styled.th`\r\n    ${intent.of(Intent.Secondary)};\r\n  `,\r\n  TBody: styled.tbody``,\r\n  TR: styled.tr`\r\n    ${text};\r\n  `,\r\n  TD: styled.td`\r\n    ${text};\r\n\r\n    padding: 2px;\r\n\r\n    position: relative;\r\n\r\n    tr:not(:first-child):not(:last-child) > & {\r\n      :before {\r\n        position: absolute;\r\n        content: \"\";\r\n        top: 0;\r\n        left: 0;\r\n        width: 4px;\r\n        height: 3px;\r\n        border-top: ${getThemeBorder(Border.Normal)};\r\n        border-color: ${getThemeColor(Color.fromIntent(Intent.Secondary))};\r\n      }\r\n\r\n      :first-child:before {\r\n        width: 7px;\r\n      }\r\n\r\n      :after {\r\n        position: absolute;\r\n        content: \"\";\r\n        top: 0;\r\n        right: 0;\r\n        width: 4px;\r\n        height: 3px;\r\n        border-top: ${getThemeBorder(Border.Normal)};\r\n        border-color: ${getThemeColor(Color.fromIntent(Intent.Secondary))};\r\n      }\r\n\r\n      :last-child:after {\r\n        width: 7px;\r\n      }\r\n    }\r\n  `\r\n});\r\n","import * as React from \"react\";\r\n\r\nimport FormGroup from \"@/components/FormGroup\";\r\nimport NumericField from \"@/pages/SaveEditor/components/fields/NumericField\";\r\nimport EditModeCondition from \"@/components/EditModeCondition\";\r\n\r\nexport interface PositionTabContentProps {\r\n  gameObjectPath: string[];\r\n}\r\nconst MinionPositionTab: React.SFC<PositionTabContentProps> = ({\r\n  gameObjectPath\r\n}) => (\r\n  <React.Fragment>\r\n    <FormGroup label=\"X\">\r\n      <NumericField\r\n        precision=\"single\"\r\n        path={[...gameObjectPath, \"position\", \"x\"]}\r\n      />\r\n    </FormGroup>\r\n    <FormGroup label=\"Y\">\r\n      <NumericField\r\n        precision=\"single\"\r\n        path={[...gameObjectPath, \"position\", \"y\"]}\r\n      />\r\n    </FormGroup>\r\n    <EditModeCondition editMode=\"advanced\">\r\n      <FormGroup label=\"Z\">\r\n        <NumericField\r\n          precision=\"single\"\r\n          path={[...gameObjectPath, \"position\", \"z\"]}\r\n        />\r\n      </FormGroup>\r\n    </EditModeCondition>\r\n  </React.Fragment>\r\n);\r\nMinionPositionTab.displayName = \"MinionPositionTab\";\r\nexport default MinionPositionTab;\r\n","import styled from \"@/style\";\r\n\r\nconst SaveEditorContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nexport default SaveEditorContainer;\r\n","import styled, { Space } from \"@/style\";\r\n\r\nimport { getTheme } from \"@/style\";\r\n\r\nconst ContentContainer = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: auto;\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport default ContentContainer;\r\n","import styled from \"@/style\";\r\n\r\nconst EditorContainer = styled.div`\r\n  flex: 1 1 auto;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: auto;\r\n`;\r\nEditorContainer.displayName = \"EditorContainer\";\r\nexport default EditorContainer;\r\n","import Sidebar from \"./Sidebar\";\r\nexport default Sidebar;\r\n","import * as React from \"react\";\r\n\r\nimport Flex from \"@/components/Flex\";\r\n\r\nimport SidebarContainer from \"./components/SidebarContainer\";\r\n\r\nimport EditorModeSelector from \"./components/EditorModeSelector\";\r\nimport SaveStructureTree from \"./components/SaveStructureTree\";\r\n\r\nconst Sidebar: React.SFC = () => (\r\n  <SidebarContainer>\r\n    <Flex direction=\"column\" height=\"100%\">\r\n      <EditorModeSelector />\r\n      <Flex.Item fillParent constrain=\"column\">\r\n        <SaveStructureTree />\r\n      </Flex.Item>\r\n    </Flex>\r\n  </SidebarContainer>\r\n);\r\nSidebar.displayName = \"Sidebar\";\r\nexport default Sidebar;\r\n","import Panel from \"@/components/Panel\";\r\n\r\nconst SidebarContainer = Panel.extend`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n`;\r\nSidebarContainer.displayName = \"SidebarContainer\";\r\nexport default SidebarContainer;\r\n","import styled from \"@/style\";\r\nimport { WidthProps, HeightProps, width, height } from \"styled-system\";\r\nimport { getTheme } from \"@/style\";\r\n\r\nexport type BoxProps = WidthProps & HeightProps;\r\n\r\nconst Panel = styled<BoxProps, \"div\">(\"div\")`\r\n  ${width};\r\n  ${height};\r\n  background-color: ${props => getTheme(props).colors.bg.panel};\r\n`;\r\nPanel.displayName = \"Panel\";\r\nexport default Panel;\r\n","import EditorModeSelector from \"./EditorModeSelector\";\r\nexport default EditorModeSelector;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport Text from \"@/components/Text\";\r\nimport Input from \"@/components/Input\";\r\n\r\ntype Props = DispatchProps;\r\nclass EditorModeSelector extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Text.Label htmlFor=\"advanced_mode\" intent={Intent.Secondary}>\r\n          Advanced Mode\r\n        </Text.Label>\r\n        <Input\r\n          id=\"advanced_mode\"\r\n          type=\"checkbox\"\r\n          onChange={this._onAdvancedModeChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onAdvancedModeChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const { setEditMode } = this.props;\r\n    setEditMode(e.target.checked ? \"advanced\" : \"normal\");\r\n  }\r\n}\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(EditorModeSelector);\r\n","import { setEditMode } from \"@/actions/set-editmode\";\r\n\r\nconst mapDispatchToProps = {\r\n  setEditMode\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import SaveStructureTree from \"./SaveStructureTree\";\r\nexport default SaveStructureTree;\r\n","import * as React from \"react\";\r\n\r\nimport SaveStructureTreeContainer from \"./components/SaveStructureTreeContainer\";\r\nimport SaveStructureItem from \"./components/SaveStructureItem\";\r\n\r\ntype Props = {};\r\nexport default class SaveStructureTree extends React.Component<Props> {\r\n  private _containerRef = React.createRef<HTMLElement>();\r\n\r\n  render() {\r\n    return (\r\n      <SaveStructureTreeContainer innerRef={this._containerRef}>\r\n        <SaveStructureItem\r\n          saveItemPath={[]}\r\n          scrollContainer={this._containerRef}\r\n        />\r\n      </SaveStructureTreeContainer>\r\n    );\r\n  }\r\n}\r\n","import styled from \"@/style\";\r\n\r\nconst SaveStructureTreeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n`;\r\nexport default SaveStructureTreeContainer;\r\n","import SaveStructureItem from \"./SaveStructureItem\";\r\nexport default SaveStructureItem;\r\nexport * from \"./props\";\r\n","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport scrollIntoView from \"dom-scroll-into-view\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport { SaveStructureItemProps } from \"./props\";\r\nimport mapStateToProps, { StateProps } from \"./derived-state\";\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport SaveStructureItemContainer from \"./components/SaveStructureItemContainer\";\r\nimport SaveStructureItemHeader from \"./components/SaveStructureItemHeader\";\r\nimport SaveStructureItemContent from \"./components/SaveStructureItemContent\";\r\n\r\ninterface State {\r\n  isExpanded: boolean;\r\n}\r\n\r\ntype Props = SaveStructureItemProps & StateProps & DispatchProps;\r\nclass SaveStructureItemComponent extends React.Component<Props, State> {\r\n  private _ref: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this._ref = React.createRef();\r\n\r\n    this.state = {\r\n      isExpanded: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectionStatus === \"selected\") {\r\n      this._scrollIntoView();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(oldProps: Props) {\r\n    if (\r\n      oldProps.selectionStatus !== \"selected\" &&\r\n      this.props.selectionStatus === \"selected\"\r\n    ) {\r\n      this._scrollIntoView();\r\n    }\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const { title, selectionStatus, childPaths, scrollContainer } = this.props;\r\n    let { isExpanded } = this.state;\r\n\r\n    const isExpandable = childPaths.length > 0;\r\n\r\n    let titleIntent: Intent;\r\n    switch (selectionStatus) {\r\n      default:\r\n        titleIntent = Intent.Default;\r\n        break;\r\n      case \"in-path\":\r\n        titleIntent = Intent.Secondary;\r\n        isExpanded = isExpandable;\r\n        break;\r\n      case \"selected\":\r\n        titleIntent = Intent.Primary;\r\n        break;\r\n    }\r\n\r\n    let valueElement: React.ReactNode | null = null;\r\n    if (isExpandable && isExpanded) {\r\n      valueElement = childPaths.map(childPath => {\r\n        const key = childPath[childPath.length - 1];\r\n        return (\r\n          <SaveStructureItem\r\n            key={key}\r\n            saveItemPath={childPath}\r\n            scrollContainer={scrollContainer}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <SaveStructureItemContainer>\r\n        <SaveStructureItemHeader\r\n          innerRef={this._ref}\r\n          expandable={isExpandable}\r\n          expanded={isExpanded}\r\n          header={title}\r\n          intent={titleIntent}\r\n          onClick={this._onClick}\r\n          onExpandToggle={this._onExpandToggle}\r\n        />\r\n        <SaveStructureItemContent>{valueElement}</SaveStructureItemContent>\r\n      </SaveStructureItemContainer>\r\n    );\r\n  }\r\n\r\n  private _scrollIntoView() {\r\n    const htmlElement = this._ref.current;\r\n    const { childPaths, scrollContainer } = this.props;\r\n\r\n    if (childPaths.length > 0) {\r\n      this.setState({\r\n        isExpanded: true\r\n      });\r\n    }\r\n\r\n    if (htmlElement && scrollContainer.current) {\r\n      scrollIntoView(htmlElement, scrollContainer.current, {\r\n        allowHorizontalScroll: true,\r\n        onlyScrollIfNeeded: true,\r\n        offsetBottom: 125,\r\n        offsetTop: 125\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind()\r\n  private _onClick() {\r\n    const { saveItemPath, onClick } = this.props;\r\n    this.setState({\r\n      isExpanded: true\r\n    });\r\n    onClick(saveItemPath);\r\n  }\r\n\r\n  @autobind()\r\n  private _onExpandToggle() {\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded\r\n    });\r\n  }\r\n}\r\nconst SaveStructureItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SaveStructureItemComponent);\r\nexport default SaveStructureItem;\r\n","import { SaveGame } from \"oni-save-parser\";\r\nimport createCachedSelector from \"re-reselect\";\r\n\r\nimport naturalCompare from \"string-natural-compare\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport {\r\n  EditMode,\r\n  getSaveItemTitle,\r\n  getSaveItemChildPaths\r\n} from \"@/services/save-structure\";\r\n\r\nimport oniSaveSelector from \"@/selectors/oni-save\";\r\nimport selectedPathSelector from \"@/selectors/selected-path\";\r\nimport editModeSelector from \"@/selectors/edit-mode\";\r\n\r\nimport { SaveStructureItemProps } from \"./props\";\r\n\r\nconst cacheKeyGenerator = (_: AppState, props: SaveStructureItemProps) =>\r\n  props.saveItemPath.join(\".\");\r\n\r\nconst itemPathSelector = (_: AppState, props: SaveStructureItemProps) =>\r\n  props.saveItemPath;\r\n\r\nconst title = createCachedSelector<\r\n  AppState,\r\n  SaveStructureItemProps,\r\n  string[],\r\n  SaveGame | null,\r\n  string\r\n>(\r\n  itemPathSelector,\r\n  oniSaveSelector,\r\n  (path, saveGame) =>\r\n    saveGame ? getSaveItemTitle(path, saveGame) : \"[undefined]\"\r\n)(cacheKeyGenerator);\r\n\r\nconst selectionStatus = createCachedSelector<\r\n  AppState,\r\n  SaveStructureItemProps,\r\n  string[],\r\n  string[],\r\n  \"unselected\" | \"in-path\" | \"selected\"\r\n>(itemPathSelector, selectedPathSelector, (itemPath, selectedPath) => {\r\n  const isSelected = itemPath.every((x, i) => selectedPath[i] == x);\r\n  if (!isSelected) {\r\n    return \"unselected\";\r\n  }\r\n\r\n  if (itemPath.length === selectedPath.length) {\r\n    return \"selected\";\r\n  }\r\n\r\n  return \"in-path\";\r\n})(cacheKeyGenerator);\r\n\r\nconst childPaths = createCachedSelector<\r\n  AppState,\r\n  SaveStructureItemProps,\r\n  string[],\r\n  SaveGame | null,\r\n  EditMode,\r\n  string[][]\r\n>(\r\n  itemPathSelector,\r\n  oniSaveSelector,\r\n  editModeSelector,\r\n  (path, saveGame, editMode) => {\r\n    if (saveGame == null) {\r\n      return [];\r\n    }\r\n\r\n    // Note: This is a pretty heavy operation.  We recurse the save\r\n    //  to find the child items, then scan every path for both\r\n    //  items during sort.\r\n    const childItems = getSaveItemChildPaths(path, saveGame, editMode);\r\n    return childItems.sort((a, b) => {\r\n      const aTitle = getSaveItemTitle(a, saveGame);\r\n      const bTitle = getSaveItemTitle(b, saveGame);\r\n      return naturalCompare(aTitle, bTitle);\r\n    });\r\n  }\r\n)(cacheKeyGenerator);\r\n\r\nconst mapStateToProps = function(\r\n  state: AppState,\r\n  props: SaveStructureItemProps\r\n) {\r\n  // Do not use createStructuredSelector here, as that itself\r\n  //  creates a selector that will go nuts over our multi instance props.\r\n  const stateProps = {\r\n    title: title(state, props),\r\n    selectionStatus: selectionStatus(state, props),\r\n    childPaths: childPaths(state, props)\r\n  };\r\n\r\n  return stateProps;\r\n};\r\nexport type StateProps = ReturnType<typeof mapStateToProps>;\r\nexport default mapStateToProps;\r\n","import { selectPath } from \"@/actions/select-path\";\r\n\r\nconst mapDispatchToProps = {\r\n  onClick: selectPath\r\n};\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\nexport default mapDispatchToProps;\r\n","import styled from \"@/style\";\r\n\r\nconst SaveStructureItemContainer = styled.div``;\r\nSaveStructureItemContainer.displayName = \"SaveStructureItemContainer\";\r\nexport default SaveStructureItemContainer;\r\n","import SaveStructureItemHeader from \"./SaveStructureItemHeader\";\r\nexport default SaveStructureItemHeader;\r\n","import * as React from \"react\";\r\n\r\nimport styled from \"@/style\";\r\n\r\nimport Expander from \"./components/Expander\";\r\nimport ItemText from \"./components/ItemText\";\r\nimport { Intent } from \"@/style\";\r\n\r\nexport interface SaveStructureItemHeaderProps {\r\n  expandable: boolean;\r\n  expanded: boolean;\r\n  header: string;\r\n  intent: Intent;\r\n  innerRef?: React.RefObject<HTMLDivElement>;\r\n  onClick(): void;\r\n  onExpandToggle(): void;\r\n}\r\n\r\nconst SaveStructureItemHeaderContainer = styled.span`\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n`;\r\nSaveStructureItemHeaderContainer.displayName = \"SaveStructureItemContainer\";\r\n\r\nconst SaveStructureItemHeader: React.SFC<\r\n  SaveStructureItemHeaderProps & { className?: string }\r\n> = ({\r\n  className,\r\n  expandable,\r\n  expanded,\r\n  header,\r\n  intent,\r\n  onClick,\r\n  onExpandToggle,\r\n  innerRef\r\n}) => (\r\n  <SaveStructureItemHeaderContainer innerRef={innerRef} className={className}>\r\n    {expandable && (\r\n      <Expander\r\n        expanded={expanded}\r\n        onClick={expandable ? onExpandToggle : undefined}\r\n      />\r\n    )}\r\n    <ItemText intent={intent} onClick={onClick}>\r\n      {header}\r\n    </ItemText>\r\n  </SaveStructureItemHeaderContainer>\r\n);\r\nSaveStructureItemHeader.displayName = \"SaveStructureItemHeader\";\r\nexport default SaveStructureItemHeader;\r\n","import * as React from \"react\";\r\n\r\nconst ICON_SIZE = 10;\r\nconst ICON_EXPANDED = \"M 0 .25 L .5 .75 L 1 .25 z\";\r\nconst ICON_COLLAPSED = \"M .5 0 L 1 .5 L .5 1 z\";\r\n\r\nexport interface ExpanderProps {\r\n  expanded: boolean;\r\n  onClick?(): void;\r\n}\r\nconst Expander: React.SFC<ExpanderProps & { className?: string }> = ({\r\n  className,\r\n  expanded,\r\n  onClick\r\n}) => (\r\n  <svg\r\n    className={className}\r\n    width={ICON_SIZE}\r\n    height={ICON_SIZE}\r\n    viewBox={`0 0 1 1`}\r\n    onClick={onClick}\r\n  >\r\n    <path d={expanded ? ICON_EXPANDED : ICON_COLLAPSED} fill=\"black\" />\r\n  </svg>\r\n);\r\nexport default Expander;\r\n","import { getTheme, Space } from \"@/style\";\r\n\r\nimport Text from \"@/components/Text\";\r\n\r\nconst ItemText = Text.extend`\r\n  margin-left: ${props => getTheme(props).space[Space.Small]}px;\r\n`;\r\nexport default ItemText;\r\n","import styled from \"@/style\";\r\n\r\nconst SaveStructureItemContent = styled.div`\r\n  padding-left: 15px;\r\n`;\r\nexport default SaveStructureItemContent;\r\n","import styled from \"@/style\";\r\n\r\nimport { WidthProps, SpaceProps, width, space } from \"styled-system\";\r\n\r\nimport { Color, getThemeColor } from \"@/style\";\r\n\r\nexport interface SeparatorProps extends WidthProps, SpaceProps {\r\n  color?: Color;\r\n}\r\nconst Separator = styled<SeparatorProps, \"div\">(\"div\")`\r\n  border-bottom: 2px solid;\r\n  border-color: ${props =>\r\n    getThemeColor(props.color || Color.DefaultSeparator)(props)};\r\n  ${width};\r\n  ${space};\r\n  height: 2px;\r\n`;\r\nSeparator.displayName = \"Separator\";\r\nexport default Separator;\r\n","import styled from \"@/style\";\r\n\r\nimport { getTheme } from \"@/style\";\r\n\r\nconst AppContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  background-color: ${props => getTheme(props).colors.bg.default};\r\n`;\r\nAppContainer.displayName = \"AppContainer\";\r\nexport default AppContainer;\r\n","import styled from \"@/style\";\r\n\r\nconst AppContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  flex: 1 1 auto;\r\n  overflow: auto;\r\n`;\r\nAppContainer.displayName = \"AppContainer\";\r\nexport default AppContainer;\r\n","import NavBarContainer from \"./NavBar\";\r\nexport default NavBarContainer;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { autobind } from \"core-decorators\";\r\n\r\nimport { isProd } from \"@/runtime-env\";\r\n\r\nimport { Intent } from \"@/style\";\r\n\r\nimport Button from \"@/components/Button\";\r\n\r\nimport mapDispatchToProps, { DispatchProps } from \"./events\";\r\n\r\nimport NavBarContainer from \"./components/NavBarContainer\";\r\n\r\nimport NavBarGroup from \"./components/NavBarGroup\";\r\nimport NavBarTitleText from \"./components/NavBarTitleText\";\r\n\r\ntype Props = DispatchProps;\r\nclass NavBar extends React.Component<Props> {\r\n  private _input: HTMLElement | null = null;\r\n\r\n  render() {\r\n    const { onLoadTestData } = this.props;\r\n    return (\r\n      <NavBarContainer>\r\n        <NavBarTitleText>Duplicity</NavBarTitleText>\r\n        <NavBarGroup>\r\n          <input\r\n            ref={el => (this._input = el)}\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            accept=\".sav\"\r\n            onChange={this._onLoadFileInput}\r\n          />\r\n          <Button onClick={this._onLoadFileClick}>Load</Button>\r\n          {!isProd && <Button onClick={onLoadTestData}>Test</Button>}\r\n          <Button intent={Intent.Primary} onClick={this._onSaveFileClick}>\r\n            Save\r\n          </Button>\r\n        </NavBarGroup>\r\n      </NavBarContainer>\r\n    );\r\n  }\r\n\r\n  @autobind()\r\n  private _onLoadFileClick() {\r\n    if (!this._input) {\r\n      return;\r\n    }\r\n    this._input.click();\r\n  }\r\n\r\n  @autobind()\r\n  private _onLoadFileInput(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const files = e.target.files;\r\n    if (!files || files.length === 0) {\r\n      return;\r\n    }\r\n    const file = files[0];\r\n\r\n    const { onLoad } = this.props;\r\n    onLoad(file);\r\n  }\r\n\r\n  @autobind()\r\n  private _onSaveFileClick() {\r\n    const { onSave } = this.props;\r\n    const fileName = withExtension(\"my-file\", \".sav\");\r\n    onSave(fileName);\r\n  }\r\n}\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(NavBar);\r\n\r\nfunction withExtension(name: string, ext: string): string {\r\n  if (name.endsWith(ext)) return name;\r\n  return name + ext;\r\n}\r\n","import testData from \"@/__mocks__/save-game.json\";\r\n\r\nimport { loadOniSave } from \"@/actions/load-onisave\";\r\nimport { saveOniSave } from \"@/actions/save-onisave\";\r\n\r\nimport { receiveOniSaveSuccess } from \"@/actions/receive-onisave\";\r\n\r\nconst mapDispatchToProps = {\r\n  onLoad: loadOniSave,\r\n  onLoadTestData: () => receiveOniSaveSuccess(testData as any),\r\n  onSave: saveOniSave\r\n};\r\nexport default mapDispatchToProps;\r\nexport type DispatchProps = typeof mapDispatchToProps;\r\n","import styled from \"@/style\";\r\n\r\nimport { getTheme } from \"@/style\";\r\n\r\nconst NavBarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: \"row\";\r\n  width: 100%;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  box-sizing: border-box;\r\n  background-color: ${props => getTheme(props).colors.bg.navbar};\r\n`;\r\nNavBarContainer.displayName = \"NavBarContainer\";\r\nexport default NavBarContainer;\r\n","import styled from \"@/style\";\r\n\r\nconst NavBarGroup = styled.div`\r\n  margin-left: auto;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  align-self: center;\r\n`;\r\nNavBarGroup.displayName = \"NavBarGroup\";\r\nexport default NavBarGroup;\r\n","import styled from \"@/style\";\r\nimport { getTheme } from \"@/style\";\r\n\r\nconst NavBarTitleText = styled.span`\r\n  font-size: 2em;\r\n  margin-left: 5px;\r\n  color: ${props => getTheme(props).colors.intent.primary};\r\n`;\r\nNavBarTitleText.displayName = \"NavBarTitleText\";\r\nexport default NavBarTitleText;\r\n"],"sourceRoot":""}